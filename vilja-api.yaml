openapi: 3.0.0
info:
  title: 'VP APIs '
  description: |
    Note:
    * The current version supports CORS
  contact:
    name: Vilja Solutions
    email: jack.cao@viljasolutions.com
    url: https://viljasolutions.com
  license:
    name: license
    url: http://license
  version: '31'
servers:
  - url: https://vp-public.staging.leandev.se
    description: staging
security:
  - Authorization: []
tags:
  - name: Applications
    description: Applications
  - name: Authentication
    description: Authentication
  - name: Brokers
    description: Brokers
  - name: Collaterals
    description: Brokers
  - name: Deposit Accounts
    description: Deposit Accounts
  - name: Deposit Accounts-Closure
    description: Deposit Accounts-Closure
  - name: Deposit Accounts-KYC answer
    description: Deposit Accounts-KYC answer
  - name: Deposit Accounts-Transactions
    description: Deposit Accounts-Transactions
  - name: Deposit Accounts-Transfer
    description: Deposit Accounts-Transfer
  - name: Deposit CompanyRepresentatives
    description: Deposit CompanyRepresentatives
  - name: Deposit Customers
    description: Deposit Customers
  - name: Deposit Customers-Bank account
    description: Deposit Customers-Bank account
  - name: Deposit Customers-Document
    description: Deposit Customers-Document
  - name: Deposit Customers-FATCA
    description: Deposit Customers-FATCA
  - name: Deposit Customers-KYC answer
    description: Deposit Customers-KYC answer
  - name: Deposit Customers-SME owner
    description: Deposit Customers-SME owner
  - name: Deposit Legal Documents
    description: Deposit Legal Documents
  - name: Deposit Mandates
    description: Deposit Mandates
  - name: Deposit Products
    description: Deposit Products
  - name: ExternalParties
    description: ExternalParties
  - name: Identity
    description: Identity
  - name: KYC
    description: KYC
  - name: Loan Accounts
    description: Loan Accounts
  - name: Loan Customers
    description: Loan Customers
  - name: Loan Products
    description: Loan Products
  - name: Messaging
    description: Messaging
  - name: Originations
    description: Originations
  - name: Payments
    description: Payments
  - name: Purchases
    description: Purchases
  - name: Reporting
    description: Reporting
  - name: Signing
    description: Signing
  - name: System
    description: Brokers
  - name: Tranches
    description: Tranches
  - name: Users
    description: Users
  - name: Validation
    description: Validation
paths:
  /api/loan/v1/offers:
    get:
      tags:
        - Loan Products
      summary: Get all loan offers by product id
      description: |-
        ## General description
        Get all loan offers by product id
        ## Allowed tokens
        Security Token
        ## Allowed roles
        Trusted Party, Broker
        ## Changelog
        - v31.0.0: API added.
      operationId: get-all-loan-offers-v1
      parameters:
        - name: productId
          in: query
          description: the product id
          schema:
            type: string
      responses:
        '200':
          description: Get all loan offers by product id
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Offer-Response-v1'
              examples:
                LOAN Offer response:
                  value:
                    data:
                      - id: 1
                        shortName: Offer short name
                        name: Offer  name
                        productIds: []
                        validFromTime: '2021-11-10'
                        validToTime: '2021-11-11'
                        paymentPlanLength: 3
                        initialAmortizationFreePeriod: 1
                        interestRate: 0.10001
                        referenceInterestRate: 0.20002
                        amortizationMethod:
                          - FIXED
                          - ANNUITY
                        calculateAmortizationBasedOn:
                          - ACCOUNT_TENOR
                        createDateTime: '2021-02-24T14:57:10.35+08:00'
                        updateDateTime: '2021-02-24T14:57:10.35+08:00'
                        offerType: LOAN
                        referenceRateType: test
                REVOLVING Offer response:
                  value:
                    data:
                      - id: 2
                        shortName: REVOLVING Offer short name
                        name: REVOLVING Offer name
                        productIds: []
                        validFromTime: '2021-11-10'
                        validToTime: '2021-11-11'
                        paymentPlanLength: 3
                        initialPaymentFreePeriod: 1
                        administrativeFee: 1
                        trancheFee: 0.10001
                        minimumTrancheFee: 10
                        trancheFeeCapitalizeType:
                          - CAPITALIZED
                          - FIRST_STATEMENT
                          - PAYED_NET
                        fallBackToProductRulesIfBrokerPayments: false
                        creator: test
                        residualValue: 10.2
                        amortizationPercentage: 10.2
                        amortizationCalculatedOnPaymentPlanLength: true
                        minimumTrancheAmount: 10.3
                        createTime: '2021-02-24T14:57:10.35+08:00'
                        updateTime: '2021-02-24T14:57:10.35+08:00'
                        offerType: REVOLVING
                        amortizationLimit: 1
        '400':
          description: >-
            Bad request. The parameters in the URL or request body are invalid.
            Please refer to the error message for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '401':
          description: >-
            Unauthorized. The token is invalid/expired or the SSN does not exist
            in the VP. Please refer to the error message for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '403':
          description: >-
            Forbidden. No access rights or access frequency too fast. Please
            refer to the error message for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '500':
          description: >-
            Internal server error. Please refer to the error message for
            details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
  /api/loan/v5/accounts/me/{accountId}/disbursements/{disbursementId}:
    patch:
      summary: >-
        Update disbursements by id of a loan account for consumer customer
        restricted by access token (v5)
      operationId: update-loan-disbursement-V5
      responses:
        '200':
          $ref: '#/components/responses/Disbursement-Response'
        '400':
          $ref: '#/components/responses/Common-BadRequest-Response'
        '401':
          $ref: '#/components/responses/Common-Unauthorized-Response'
        '403':
          $ref: '#/components/responses/Common-Forbidden-Response'
        '500':
          $ref: '#/components/responses/Common-ServerError-Response'
      tags:
        - Loan Accounts
      parameters: []
      description: >
        ## General description

        Update disbursements by id of a loan account for consumer customer

        ## Allowed roles

        My Pages


        ## Additional information

        The noteFromRequester, noteFromApprover, requester, approver will not be
        return in this API
      security:
        - Authorization: []
        - accessTokenCookie: []
      requestBody:
        $ref: '#/components/requestBodies/Disbursement-Patch'
    delete:
      summary: >-
        Remove disbursements by id of a loan account for consumer customer
        restricted by access token (v5)
      operationId: remove-loan-disbursement-V5
      responses:
        '204':
          description: >-
            Remove disbursements by id of a loan account for consumer customer
            successfully.
        '400':
          $ref: '#/components/responses/Common-BadRequest-Response'
        '401':
          $ref: '#/components/responses/Common-Unauthorized-Response'
        '403':
          $ref: '#/components/responses/Common-Forbidden-Response'
        '500':
          description: >-
            Internal server error. Please refer to the error message for
            details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      tags:
        - Loan Accounts
      description: |
        ## General description
        Remove disbursements by id of a loan account for consumer customer

        ## Allowed roles
        My Pages
      parameters: []
      security:
        - Authorization: []
        - accessTokenCookie: []
  /api/loan/v5/accounts/me/{accountId}/disbursements:
    get:
      summary: >-
        Get disbursements of a loan account for consumer customer restricted by
        access token (v5)
      tags:
        - Loan Accounts
      responses:
        '200':
          $ref: '#/components/responses/Disbursements-Response'
        '400':
          $ref: '#/components/responses/Common-BadRequest-Response'
        '401':
          $ref: '#/components/responses/Common-Unauthorized-Response'
        '403':
          $ref: '#/components/responses/Common-Forbidden-Response'
        '500':
          $ref: '#/components/responses/Common-ServerError-Response'
      operationId: get-Loan-disbursements-V5
      description: >
        ## General description

        Get disbursements of a loan account for consumer customer


        ## Allowed roles

        My Pages


        ## Additional information

        The noteFromRequester, noteFromApprover, requester, approver will not be
        return in this API
      parameters: []
      security:
        - Authorization: []
        - accessTokenCookie: []
  /api/loan/v5/accounts/me/{accountId}/documents/{documentId}/download:
    get:
      tags:
        - Loan Accounts
      summary: Download document for loan account restricted by access token (v5)
      description: |
        ## General description

        Download document by document id for loan account

        ## Allowed roles

        My Pages, Mortgage Front

        ## Additional information
         Document id could be retrieved by 'GET /api/loan/v5/accounts/me/{accountId}'
      operationId: download-document-for-loan-account-V5
      responses:
        '200':
          description: Download document successfully
          content:
            application/octet-stream:
              schema:
                $ref: '#/components/schemas/InputStream'
        '400':
          $ref: '#/components/responses/Common-BadRequest-Response'
        '401':
          $ref: '#/components/responses/Common-Unauthorized-Response'
        '403':
          $ref: '#/components/responses/Common-Forbidden-Response'
        '404':
          description: Not Found
        '500':
          $ref: '#/components/responses/Common-ServerError-Response'
      x-internal: false
      security:
        - Authorization: []
        - accessTokenCookie: []
  /api/auth/v2/tokens/exchangeAccessToken:
    post:
      tags:
        - Authentication
      summary: Exchange access token by a Security token
      description: Exchange access token by security token
      operationId: 1de874b1-f949-4e50-9d01-8005b089dd3b
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExchangeAccessToken'
        required: true
      responses:
        '200':
          description: Return access token.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthenticationExchangeAccessToken'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
  /api/auth/v2/tokens/logout:
    post:
      tags:
        - Authentication
      summary: Logout access token (v2)
      description: Logout access token (v2)
      operationId: a6d4a656-9609-4907-acd4-e39e3caf5821
      parameters:
        - name: X-AUTH-TOKEN
          in: header
          description: Access token
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Logout successfully.
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
  /api/auth/v2/tokens/me:
    get:
      tags:
        - Authentication
      summary: >-
        Get deposit customer (consumer customer and CR) info restricted by
        access token
      description: >-
        ## General description

        Get customer (consumer customer and CR) information by access token.
        (v2) (DEPOSIT ONLY)

        ## Changelog

        - v31.0.0 :
            - Add a field `noPromotionalMessages` in the response.
            - field `noSpam` is deprecated in the response.
        - v30.0.0 : Add a field `withdrawalFeeInPercentageByAccruedInterest` in
        the response.

        - v26.0.0 : Remove fields `delayedWithdrawalsEnabled`,
        `delayedWithdrawalsYear`, `delayedWithdrawalsDay` in the response

        - v24.0.0 :
            - Add fields `followUpAnswerAssets`, `followUpAnswerAssetsOtherValue`, `followUpAnswerValueOfAssets`, `followUpAnswerValueOfAssetsOtherValue`, `reAnswerPEPFollowUp` in the response supported.
        - v23.0.0 :
          - Add an field `privateCustomer.accountList.currentInterestBalance` in the response.
          - Add an field `companyRepresentative.legalEntity.accountList.currentInterestBalance` in the response.
          - Add an field `privateCustomer.accountList.product.permitFreeWithdrawalFromInterestBalance` in the response.
          - Add an field `companyRepresentative.legalEntity.accountList.product.permitFreeWithdrawalFromInterestBalance` in the response.
        - v22.0.0 :
          - Add field `bankName` in the mandate response
          - Add field `streetAddress2` in the response.
          - Add field `address` in the response of underage
        - v18.0.0 :
          - New fields `privateCustomer.accountList.product.directWithdrawToExternalAccount` in response.
          - New fields `companyRepresentative.legalEntity.accountList.product.directWithdrawToExternalAccount` in response.
        - v15.0.0:
          - New fields `privateCustomer.accountList.product.deltaInterestRate`,`privateCustomer.accountList.kycAnswered` in response.
          - New fields `companyRepresentative.legalEntity.accountList.product.deltaInterestRate`,`companyRepresentative.legalEntity.accountList.kycAnswered` in response.
        - v14.0.0:
          - New fields `privateCustomer.accountList.product.trustAccount`,`privateCustomer.accountList.product.taxExempt` in response.
          - New fields `companyRepresentative.legalEntity.accountList.product.trustAccount`,`companyRepresentative.legalEntity.accountList.product.taxExempt` in response.
      operationId: fbccb396-0063-49f9-9935-ea77e2651ba7
      parameters: []
      responses:
        '200':
          description: Customer information retrieved successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/V2InformationAboutMe'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      security:
        - X-AUTH-TOKEN: []
        - Authorization: []
  /api/auth/v2/tokens/me/info:
    get:
      tags:
        - Authentication
      summary: Get token information
      description: Get token information. (v2)
      operationId: c7cbc763-47b0-4af6-9229-de36ba1e15c9
      parameters:
        - name: X-AUTH-TOKEN
          in: header
          description: Access token
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Token information retrieved successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/V2TokenMeInfo'
        '400':
          description: >-
            Bad request. The parameters in the URL or request body are invalid.
            Please refer to the error message for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '401':
          description: >-
            Unauthorized. The token is invalid/expired or the SSN does not exist
            in the VP. Please refer to the error message for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '403':
          description: >-
            Forbidden. No access rights or access frequency too fast. Please
            refer to the error message for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '500':
          description: >-
            Internal server error. Please refer to the error message for
            details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
  /api/auth/v2/tokens/me/type:
    get:
      tags:
        - Authentication
      summary: >-
        Get customer type (consumer customer/CR) by access token. (v2) (DEPOSIT
        ONLY)
      description: >-
        Get customer type (consumer customer/CR) by access token. (v2) (DEPOSIT
        ONLY)
      operationId: 8b95afc7-dab3-4dc8-848f-1d7a3de43ec9
      parameters:
        - name: X-AUTH-TOKEN
          in: header
          description: Access token
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Return the current customer roles from the access token.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/V1Type'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
  /api/auth/v2/tokens/renew:
    post:
      tags:
        - Authentication
      summary: Renew access token. (v2)
      description: Generate a new access token, then the old access token will be invalid.
      operationId: 6d8dad95-aaee-4382-82d1-27d2a7d0cdeb
      parameters:
        - name: X-AUTH-TOKEN
          in: header
          description: Security token
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AuthenticationRenew'
      responses:
        '200':
          description: Generate access token successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthenticationAccessToken'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
  /api/auth/v2/tokens/verify:
    post:
      tags:
        - Authentication
      summary: Verify that the token is valid (v2)
      description: Verify that the token is valid.
      operationId: e4b5db75-fb9f-4354-a228-cba716c8625e
      parameters:
        - name: X-AUTH-TOKEN
          in: header
          description: Access token
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The token is valid.
        '401':
          description: >-
            Unauthorized. The token is invalid/expired or the SSN does not exist
            in the VP. Please refer to the error message for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '403':
          description: >-
            Forbidden. No access rights or access frequency too fast. Please
            refer to the error message for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '500':
          description: >-
            Internal server error. Please refer to the error message for
            details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
  /api/authentication/v5/oidc/exchangeAuthCode:
    get:
      tags:
        - Authentication
      summary: >-
        Exchange authorizationCode received in cookie parameter from external
        identity provider to VP access token (v5)
      description: >
        ## General description

        Exchange authorizationCode received in cookie or query parameter from
        external identity provider to VP access token

        ## Allowed VP token

        Security token

        ## Allowed roles

        BankID, Mortgage Front
      operationId: 68190da6-23be-4447-bf10-acf9f6a3440e
      parameters:
        - name: vp_authentication_code
          in: cookie
          description: >-
            Authorization code from external identity provider(High priority
            than query parameter)
          required: true
          schema:
            type: string
        - name: vp_authentication_code
          in: query
          description: Authorization code from external identity provider
          required: false
          schema:
            type: string
      responses:
        '200':
          description: >-
            Returns cookie containing access token. Cookie parameters are
            defined in VP admin area.
        '400':
          description: >-
            Bad request. The parameters in the URL or request body are invalid.
            Please refer to the error message for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '401':
          description: >-
            Unauthorized. The token is invalid/expired or the SSN does not exist
            in the VP. Please refer to the error message for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '403':
          description: >-
            Forbidden. No access rights or access frequency too fast. Please
            refer to the error message for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '500':
          description: >-
            Internal server error. Please refer to the error message for
            details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      security:
        - X-AUTH-TOKEN: []
        - Authorization: []
  /api/authentication/v5/oidc/start:
    get:
      tags:
        - Authentication
      summary: Start external authentication flow (v5)
      description: |
        ## General description
        Redirect to external authentication provider login page
        ## Allowed VP token
        No token needed
        ## Allowed roles
        Any role
      operationId: b4ea4d81-b17b-443a-ac03-945f756c23da
      parameters:
        - name: targetUrl
          in: query
          description: URL where authentication provider should forward to
          required: true
          schema:
            type: string
        - name: state
          in: query
          description: >-
            Initial value to be verified after redirection from external
            authentication provider
          required: true
          schema:
            type: string
        - name: lang
          in: query
          description: Language of external authentication provider redirection page
          schema:
            type: string
      responses:
        '303':
          description: Redirection to external authentication provider login page
          headers:
            Location:
              description: URL address of external authorization page
              schema:
                type: string
        '400':
          description: >-
            Bad request. The parameters in the URL or request body are invalid.
            Please refer to the error message for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '401':
          description: >-
            Unauthorized. The token is invalid/expired or the SSN does not exist
            in the VP. Please refer to the error message for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '403':
          description: >-
            Forbidden. No access rights or access frequency too fast. Please
            refer to the error message for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '500':
          description: >-
            Internal server error. Please refer to the error message for
            details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      security:
        - X-AUTH-TOKEN: []
        - Authorization: []
  /api/authentication/v5/token/logout:
    post:
      tags:
        - Authentication
      summary: Logout access token (v5)
      description: |
        ## General description
        Logout current user from deposit system
        ## Allowed VP token
        Access token, Security token
        ## Allowed roles
        BankID
      operationId: 6baa6f5a-cc8d-4ee0-805e-4adeb2dc9545
      parameters:
        - name: type
          in: query
          description: For now, only support bankid
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Logout successfully.
        '400':
          description: >-
            Bad request. The parameters in the URL or request body are invalid.
            Please refer to the error message for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '401':
          description: >-
            Unauthorized. The token is invalid/expired or the SSN does not exist
            in the VP. Please refer to the error message for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '500':
          description: >-
            Internal server error. Please refer to the error message for
            details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      security:
        - X-AUTH-TOKEN: []
        - Authorization: []
        - accessTokenCookie: []
  /api/authentication/v5/token/prohibitings:
    get:
      tags:
        - Authentication
      summary: Get prohibiting info restricted by access token.(v5)
      description: |-
        Returns prohibiting information
        ## Changelog
        - v27.0.0 : New field `customerId` in response.
        - v24.0.0 : Add an query parameter in the request
      operationId: fc47a132-b167-49b8-adec-f1910a7b2439
      parameters:
        - name: noCache
          in: query
          description: >-
            If noCache=true, will force fetch prohibitings without cache,
            Default value is false.
          required: false
          schema:
            type: boolean
      responses:
        '200':
          description: >
            ## General description

            Returns information if customer can access deposit system
            (prohibiting list).

            ## Allowed VP token

            Access Token

            ## Allowed roles

            Any role
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProhibitingInfo'
        '400':
          description: >-
            Bad request. The parameters in the URL or request body are invalid.
            Please refer to the error message for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '401':
          description: >-
            Unauthorized. The token is invalid/expired or the SSN does not exist
            in the VP. Please refer to the error message for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '403':
          description: >-
            Forbidden. No access rights or access frequency too fast. Please
            refer to the error message for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '500':
          description: >-
            Internal server error. Please refer to the error message for
            details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      security:
        - X-AUTH-TOKEN: []
        - Authorization: []
        - accessTokenCookie: []
  /api/authentication/v5/token/refresh:
    get:
      tags:
        - Authentication
      summary: Refresh access token
      description: |
        ## General description
        Returns refreshed access token
        ## Allowed VP token
        Access Token
        ## Allowed roles
        Any role
      operationId: a319ec0c-649d-48d9-9358-e9c47c8184f4
      responses:
        '200':
          description: Access token refreshed
        '400':
          description: >-
            Bad request. The parameters in the URL or request body are invalid.
            Please refer to the error message for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '401':
          description: >-
            Unauthorized. The token is invalid/expired or the SSN does not exist
            in the VP. Please refer to the error message for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '403':
          description: >-
            Forbidden. No access rights or access frequency too fast. Please
            refer to the error message for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '500':
          description: >-
            Internal server error. Please refer to the error message for
            details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      security:
        - X-AUTH-TOKEN: []
        - Authorization: []
        - accessTokenCookie: []
  /api/broker/v4/loan/applications:
    post:
      tags:
        - Brokers
      summary: Submit loan application from broker (v4)
      description: >
        ## General description

        Submit loan application from broker.

        ## Changelog

        - v19.0.0  : New fields `residualAmount`,
        `residualAmountNotAllowToBeOverwrittenByRule` in request body.

        - v16.0.0 : New field `desiredOfferId` in request body.
      operationId: acceptLoanApplicationFromExternalBrokerV4
      parameters:
        - name: INCOMING_AUTH_KEY_LOAN
          in: header
          description: INCOMING_AUTH_KEY_LOAN, provide by Vilja.
          required: true
          schema:
            type: string
        - name: INCOMING_AUTH_VALUE_LOAN
          in: header
          description: INCOMING_AUTH_VALUE_LOAN, provide by Vilja.
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoanBrokerApplicationInformationV4'
        required: true
      responses:
        '201':
          description: Application accepted.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BrokerApplicationResponseV4'
        '400':
          description: >-
            Bad request. The parameters in the URL or request body are invalid.
            Please refer to the error message for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '401':
          description: >-
            Unauthorized. The token is invalid/expired or the SSN does not exist
            in the VP. Please refer to the error message for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '500':
          description: >-
            Internal server error. Please refer to the error message for
            details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      callbacks:
        offer:
          /applications/{applicationId}/offers:
            post:
              summary: Create an offer of regular loan to broker (LOAN ONLY)
              description: >
                ## General description

                Create an offer of regular loan to broker.
                {OutgoingAuthTokenKey} and {OutgoingAuthTokenValue} which
                provided by broker will be set in auth and header of the
                request. It will retry 3 times with 10 seconds delay if occurs
                exceptions.

                ## Changelog

                - v26.0.0  : New fields `annuityAmount`,
                `fixedAmortizationAmount` in request body.
              parameters:
                - name: applicationId
                  in: path
                  description: The application ID from broker.
                  required: true
                  schema:
                    type: string
              requestBody:
                content:
                  application/json:
                    schema:
                      $ref: '#/components/schemas/LoanOfferRequestV4'
                required: true
              responses:
                '201':
                  description: Offer received successfully
                  content:
                    application/json:
                      schema:
                        $ref: '#/components/schemas/OfferResponseV4'
                '400':
                  description: >-
                    Bad request. The parameters in the URL or request body are
                    invalid. Please refer to the error message for details.
                  content:
                    application/json:
                      schema:
                        $ref: '#/components/schemas/ErrorMessage'
                '401':
                  description: >-
                    Unauthorized. The token is invalid/expired or the SSN does
                    not exist in the VP. Please refer to the error message for
                    details.
                  content:
                    application/json:
                      schema:
                        $ref: '#/components/schemas/ErrorMessage'
                '403':
                  description: >-
                    Forbidden. No access rights or access frequency too fast.
                    Please refer to the error message for details.
                  content:
                    application/json:
                      schema:
                        $ref: '#/components/schemas/ErrorMessage'
                '500':
                  description: >-
                    Internal server error. Please refer to the error message for
                    details.
                  content:
                    application/json:
                      schema:
                        $ref: '#/components/schemas/ErrorMessage'
        denial:
          /applications/{applicationId}/denials:
            post:
              summary: Send denial of regular loan to broker (LOAN ONLY)
              description: >-
                Send denial of regular loan to broker. {OutgoingAuthTokenKey}
                and {OutgoingAuthTokenValue} which provided by broker will be
                set in auth and header of the request. It will retry 3 times
                with 10 seconds delay if occurs exceptions.
              parameters:
                - name: applicationId
                  in: path
                  description: The application ID from broker.
                  required: true
                  schema:
                    type: string
              requestBody:
                content:
                  application/json:
                    schema:
                      $ref: '#/components/schemas/DenialRequestV4'
                required: true
              responses:
                '200':
                  description: Denial received successfully
                '400':
                  description: >-
                    Bad request. The parameters in the URL or request body are
                    invalid. Please refer to the error message for details.
                  content:
                    application/json:
                      schema:
                        $ref: '#/components/schemas/ErrorMessage'
                '401':
                  description: >-
                    Unauthorized. The token is invalid/expired or the SSN does
                    not exist in the VP. Please refer to the error message for
                    details.
                  content:
                    application/json:
                      schema:
                        $ref: '#/components/schemas/ErrorMessage'
                '403':
                  description: >-
                    Forbidden. No access rights or access frequency too fast.
                    Please refer to the error message for details.
                  content:
                    application/json:
                      schema:
                        $ref: '#/components/schemas/ErrorMessage'
                '500':
                  description: >-
                    Internal server error. Please refer to the error message for
                    details.
                  content:
                    application/json:
                      schema:
                        $ref: '#/components/schemas/ErrorMessage'
        comment:
          /applications/{applicationId}/comments:
            post:
              summary: Send comments of regular loan to broker (LOAN ONLY)
              description: >-
                Send comments of regular loan to broker. {OutgoingAuthTokenKey}
                and {OutgoingAuthTokenValue} which provided by broker will be
                set in auth and header of the request. It will retry 3 times
                with 10 seconds delay if occurs exceptions.
              parameters:
                - name: applicationId
                  in: path
                  description: The application ID from broker.
                  required: true
                  schema:
                    type: string
              requestBody:
                content:
                  application/json:
                    schema:
                      $ref: '#/components/schemas/CommentRequestV4'
                required: true
              responses:
                '200':
                  description: Comment received successfully
                '400':
                  description: >-
                    Bad request. The parameters in the URL or request body are
                    invalid. Please refer to the error message for details.
                  content:
                    application/json:
                      schema:
                        $ref: '#/components/schemas/ErrorMessage'
                '401':
                  description: >-
                    Unauthorized. The token is invalid/expired or the SSN does
                    not exist in the VP. Please refer to the error message for
                    details.
                  content:
                    application/json:
                      schema:
                        $ref: '#/components/schemas/ErrorMessage'
                '403':
                  description: >-
                    Forbidden. No access rights or access frequency too fast.
                    Please refer to the error message for details.
                  content:
                    application/json:
                      schema:
                        $ref: '#/components/schemas/ErrorMessage'
                '500':
                  description: >-
                    Internal server error. Please refer to the error message for
                    details.
                  content:
                    application/json:
                      schema:
                        $ref: '#/components/schemas/ErrorMessage'
        notification:
          /applications/{applicationId}/offers/{offerId}:
            patch:
              summary: Notification when offer's status has been changed (LOAN ONLY)
              description: >-
                Notification when offer's status has been changed.
                {OutgoingAuthTokenKey} and {OutgoingAuthTokenValue} which
                provided by broker will be set in auth and header of the
                request. It will retry 3 times with 10 seconds delay if occurs
                exceptions.
              parameters:
                - name: applicationId
                  in: path
                  description: The application ID from broker.
                  required: true
                  schema:
                    type: string
                - name: offerId
                  in: path
                  description: >-
                    The id in the response of the create offer API, refer to
                    'POST /applications/{applicationId}/offers'.
                  required: true
                  schema:
                    type: string
              requestBody:
                content:
                  application/json:
                    schema:
                      $ref: '#/components/schemas/LoanNotificationRequestV4'
                required: true
              responses:
                '200':
                  description: Notification received successfully
                '400':
                  description: >-
                    Bad request. The parameters in the URL or request body are
                    invalid. Please refer to the error message for details.
                  content:
                    application/json:
                      schema:
                        $ref: '#/components/schemas/ErrorMessage'
                '401':
                  description: >-
                    Unauthorized. The token is invalid/expired or the SSN does
                    not exist in the VP. Please refer to the error message for
                    details.
                  content:
                    application/json:
                      schema:
                        $ref: '#/components/schemas/ErrorMessage'
                '403':
                  description: >-
                    Forbidden. No access rights or access frequency too fast.
                    Please refer to the error message for details.
                  content:
                    application/json:
                      schema:
                        $ref: '#/components/schemas/ErrorMessage'
                '500':
                  description: >-
                    Internal server error. Please refer to the error message for
                    details.
                  content:
                    application/json:
                      schema:
                        $ref: '#/components/schemas/ErrorMessage'
      security:
        - X-AUTH-TOKEN: []
  /api/broker/v4/loan/applications/{applicationId}:
    patch:
      tags:
        - Brokers
      summary: Update loan application from broker and trigger re-evaluation (v4)
      description: >
        ## General description

        Update loan application from broker and trigger re-evaluation (v4)

        ## Changelog

        - v19.0.0  : New fields `residualAmount`,
        `residualAmountNotAllowToBeOverwrittenByRule` in request body.

        - v16.0.0 : New field `desiredOfferId` in request body.
      operationId: updateLoanApplicationFromExternalBrokerV4
      parameters:
        - name: INCOMING_AUTH_KEY_LOAN
          in: header
          description: INCOMING_AUTH_KEY_LOAN, provide by Vilja.
          required: true
          schema:
            type: string
        - name: INCOMING_AUTH_VALUE_LOAN
          in: header
          description: INCOMING_AUTH_VALUE_LOAN, provide by Vilja.
          required: true
          schema:
            type: string
        - name: applicationId
          in: path
          description: Unique sequence, the maxium length is 255.
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoanBrokerApplicationInformationForUpdateV4'
        required: true
      responses:
        '200':
          description: Application successfully updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BrokerApplicationUpdateResponseAPIV4'
        '400':
          description: >-
            Bad request. The parameters in the URL or request body are invalid.
            Please refer to the error message for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '401':
          description: >-
            Unauthorized. The token is invalid/expired or the SSN does not exist
            in the VP. Please refer to the error message for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '500':
          description: >-
            Internal server error. Please refer to the error message for
            details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      callbacks:
        offer:
          /applications/{applicationId}/offers:
            post:
              summary: Create an offer of regular loan to broker (LOAN ONLY)
              description: >
                ## General description

                Create an offer of regular loan to broker.
                {OutgoingAuthTokenKey} and {OutgoingAuthTokenValue} which
                provided by broker will be set in auth and header of the
                request. It will retry 3 times with 10 seconds delay if occurs
                exceptions.

                ## Changelog

                - v26.0.0  : New fields `annuityAmount`,
                `fixedAmortizationAmount` in request body.
              parameters:
                - name: applicationId
                  in: path
                  description: The application ID from broker.
                  required: true
                  schema:
                    type: string
              requestBody:
                content:
                  application/json:
                    schema:
                      $ref: '#/components/schemas/LoanOfferRequestV4'
                required: true
              responses:
                '201':
                  description: Offer received successfully
                  content:
                    application/json:
                      schema:
                        $ref: '#/components/schemas/OfferResponseV4'
                '400':
                  description: >-
                    Bad request. The parameters in the URL or request body are
                    invalid. Please refer to the error message for details.
                  content:
                    application/json:
                      schema:
                        $ref: '#/components/schemas/ErrorMessage'
                '401':
                  description: >-
                    Unauthorized. The token is invalid/expired or the SSN does
                    not exist in the VP. Please refer to the error message for
                    details.
                  content:
                    application/json:
                      schema:
                        $ref: '#/components/schemas/ErrorMessage'
                '403':
                  description: >-
                    Forbidden. No access rights or access frequency too fast.
                    Please refer to the error message for details.
                  content:
                    application/json:
                      schema:
                        $ref: '#/components/schemas/ErrorMessage'
                '500':
                  description: >-
                    Internal server error. Please refer to the error message for
                    details.
                  content:
                    application/json:
                      schema:
                        $ref: '#/components/schemas/ErrorMessage'
        denial:
          /applications/{applicationId}/denials:
            post:
              summary: Send denial of regular loan to broker (LOAN ONLY)
              description: >-
                Send denial of regular loan to broker. {OutgoingAuthTokenKey}
                and {OutgoingAuthTokenValue} which provided by broker will be
                set in auth and header of the request. It will retry 3 times
                with 10 seconds delay if occurs exceptions.
              parameters:
                - name: applicationId
                  in: path
                  description: The application ID from broker.
                  required: true
                  schema:
                    type: string
              requestBody:
                content:
                  application/json:
                    schema:
                      $ref: '#/components/schemas/DenialRequestV4'
                required: true
              responses:
                '200':
                  description: Denial received successfully
                '400':
                  description: >-
                    Bad request. The parameters in the URL or request body are
                    invalid. Please refer to the error message for details.
                  content:
                    application/json:
                      schema:
                        $ref: '#/components/schemas/ErrorMessage'
                '401':
                  description: >-
                    Unauthorized. The token is invalid/expired or the SSN does
                    not exist in the VP. Please refer to the error message for
                    details.
                  content:
                    application/json:
                      schema:
                        $ref: '#/components/schemas/ErrorMessage'
                '403':
                  description: >-
                    Forbidden. No access rights or access frequency too fast.
                    Please refer to the error message for details.
                  content:
                    application/json:
                      schema:
                        $ref: '#/components/schemas/ErrorMessage'
                '500':
                  description: >-
                    Internal server error. Please refer to the error message for
                    details.
                  content:
                    application/json:
                      schema:
                        $ref: '#/components/schemas/ErrorMessage'
        comment:
          /applications/{applicationId}/comments:
            post:
              summary: Send comments of regular loan to broker (LOAN ONLY)
              description: >-
                Send comments of regular loan to broker. {OutgoingAuthTokenKey}
                and {OutgoingAuthTokenValue} which provided by broker will be
                set in auth and header of the request. It will retry 3 times
                with 10 seconds delay if occurs exceptions.
              parameters:
                - name: applicationId
                  in: path
                  description: The application ID from broker.
                  required: true
                  schema:
                    type: string
              requestBody:
                content:
                  application/json:
                    schema:
                      $ref: '#/components/schemas/CommentRequestV4'
                required: true
              responses:
                '200':
                  description: Comment received successfully
                '400':
                  description: >-
                    Bad request. The parameters in the URL or request body are
                    invalid. Please refer to the error message for details.
                  content:
                    application/json:
                      schema:
                        $ref: '#/components/schemas/ErrorMessage'
                '401':
                  description: >-
                    Unauthorized. The token is invalid/expired or the SSN does
                    not exist in the VP. Please refer to the error message for
                    details.
                  content:
                    application/json:
                      schema:
                        $ref: '#/components/schemas/ErrorMessage'
                '403':
                  description: >-
                    Forbidden. No access rights or access frequency too fast.
                    Please refer to the error message for details.
                  content:
                    application/json:
                      schema:
                        $ref: '#/components/schemas/ErrorMessage'
                '500':
                  description: >-
                    Internal server error. Please refer to the error message for
                    details.
                  content:
                    application/json:
                      schema:
                        $ref: '#/components/schemas/ErrorMessage'
        notification:
          /applications/{applicationId}/offers/{offerId}:
            patch:
              summary: Notification when offer's status has been changed (LOAN ONLY)
              description: >-
                Notification when offer's status has been changed.
                {OutgoingAuthTokenKey} and {OutgoingAuthTokenValue} which
                provided by broker will be set in auth and header of the
                request. It will retry 3 times with 10 seconds delay if occurs
                exceptions.
              parameters:
                - name: applicationId
                  in: path
                  description: The application ID from broker.
                  required: true
                  schema:
                    type: string
                - name: offerId
                  in: path
                  description: >-
                    The id in the response of the create offer API, refer to
                    'POST /applications/{applicationId}/offers'.
                  required: true
                  schema:
                    type: string
              requestBody:
                content:
                  application/json:
                    schema:
                      $ref: '#/components/schemas/LoanNotificationRequestV4'
                required: true
              responses:
                '200':
                  description: Notification received successfully
                '400':
                  description: >-
                    Bad request. The parameters in the URL or request body are
                    invalid. Please refer to the error message for details.
                  content:
                    application/json:
                      schema:
                        $ref: '#/components/schemas/ErrorMessage'
                '401':
                  description: >-
                    Unauthorized. The token is invalid/expired or the SSN does
                    not exist in the VP. Please refer to the error message for
                    details.
                  content:
                    application/json:
                      schema:
                        $ref: '#/components/schemas/ErrorMessage'
                '403':
                  description: >-
                    Forbidden. No access rights or access frequency too fast.
                    Please refer to the error message for details.
                  content:
                    application/json:
                      schema:
                        $ref: '#/components/schemas/ErrorMessage'
                '500':
                  description: >-
                    Internal server error. Please refer to the error message for
                    details.
                  content:
                    application/json:
                      schema:
                        $ref: '#/components/schemas/ErrorMessage'
      security:
        - X-AUTH-TOKEN: []
  /api/broker/v4/loan/applications/{applicationId}/offers/{offerId}/accept:
    put:
      tags:
        - Brokers
      summary: Approve offer of loan application from broker
      description: >-
        Approve offer of loan application from broker, the loan application must
        be in status BID
      operationId: handleApprovedBIDInfoFromExternalRegularLoanBrokerV4
      parameters:
        - name: applicationId
          in: path
          description: >-
            The attribute 'applicationId' in the requset body of the submit
            application API.
          required: true
          schema:
            type: string
        - name: offerId
          in: path
          description: >-
            The id in the response of the create offer API, refer to 'POST
            /applications/{applicationId}/offers'.
          required: true
          schema:
            type: string
        - name: INCOMING_AUTH_KEY_LOAN
          in: header
          description: INCOMING_AUTH_KEY_LOAN, provide by Vilja.
          required: true
          schema:
            type: string
        - name: INCOMING_AUTH_VALUE_LOAN
          in: header
          description: INCOMING_AUTH_VALUE_LOAN, provide by Vilja.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Bid/offer approved successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BrokerApplicationAcceptResponseV4'
        '400':
          description: >-
            Bad request. The parameters in the URL or request body are invalid.
            Please refer to the error message for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '401':
          description: >-
            Unauthorized. The token is invalid/expired or the SSN does not exist
            in the VP. Please refer to the error message for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '500':
          description: >-
            Internal server error. Please refer to the error message for
            details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      security:
        - X-AUTH-TOKEN: []
  /api/broker/v4/loan/applications/{applicationId}/offers/{offerId}/reject:
    put:
      tags:
        - Brokers
      summary: Reject offer of loan application from broker bid/offer
      description: Reject offer of loan application from broker bid/offer
      operationId: handleRejectedBIDInfoFromExternalRegularLoanBrokerV4
      parameters:
        - name: applicationId
          in: path
          description: >-
            The attribute 'applicationId' in the requset body of the submit
            application API.
          required: true
          schema:
            type: string
        - name: offerId
          in: path
          description: >-
            The id in the response of the create offer API, refer to 'POST
            /applications/{applicationId}/offers'.
          required: true
          schema:
            type: string
        - name: INCOMING_AUTH_KEY_LOAN
          in: header
          description: INCOMING_AUTH_KEY_LOAN, provide by Vilja.
          required: true
          schema:
            type: string
        - name: INCOMING_AUTH_VALUE_LOAN
          in: header
          description: INCOMING_AUTH_VALUE_LOAN, provide by Vilja.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Bid/offer rejected successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BrokerApplicationRejectResponseV4'
        '400':
          description: >-
            Bad request. The parameters in the URL or request body are invalid.
            Please refer to the error message for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '401':
          description: >-
            Unauthorized. The token is invalid/expired or the SSN does not exist
            in the VP. Please refer to the error message for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '500':
          description: >-
            Internal server error. Please refer to the error message for
            details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      security:
        - X-AUTH-TOKEN: []
  /api/broker/v4/revolving/applications:
    post:
      tags:
        - Brokers
      summary: Submit credit application from broker (v4)
      description: Submit credit application from broker (v4)
      operationId: acceptRevolvingApplicationFromExternalBrokerV4
      parameters:
        - name: INCOMING_AUTH_KEY_LOAN
          in: header
          description: INCOMING_AUTH_KEY_LOAN, provide by Vilja.
          required: true
          schema:
            type: string
        - name: INCOMING_AUTH_VALUE_LOAN
          in: header
          description: INCOMING_AUTH_VALUE_LOAN, provide by Vilja.
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RevolvingBrokerApplicationInformationV4'
        required: true
      responses:
        '201':
          description: Application accepted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BrokerApplicationResponseV4'
        '400':
          description: >-
            Bad request. The parameters in the URL or request body are invalid.
            Please refer to the error message for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '401':
          description: >-
            Unauthorized. The token is invalid/expired or the SSN does not exist
            in the VP. Please refer to the error message for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '403':
          description: >-
            Forbidden. No access rights or access frequency too fast. Please
            refer to the error message for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '500':
          description: >-
            Internal server error. Please refer to the error message for
            details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      callbacks:
        offer:
          /applications/{applicationId}/offers:
            post:
              summary: Create an offer of revolving loan to broker (LOAN ONLY)
              description: >-
                Create an offer of revolving loan to broker.
                {OutgoingAuthTokenKey} and {OutgoingAuthTokenValue} which
                provided by broker will be set in auth and header of the
                request. It will retry 3 times with 10 seconds delay if occurs
                exceptions.
              parameters:
                - name: applicationId
                  in: path
                  description: The application ID from broker.
                  required: true
                  schema:
                    type: string
              requestBody:
                content:
                  application/json:
                    schema:
                      $ref: '#/components/schemas/RevolvingOfferRequestV4'
                required: true
              responses:
                '201':
                  description: Offer received successfully
                  content:
                    application/json:
                      schema:
                        $ref: '#/components/schemas/OfferResponseV4'
                '400':
                  description: >-
                    Bad request. The parameters in the URL or request body are
                    invalid. Please refer to the error message for details.
                  content:
                    application/json:
                      schema:
                        $ref: '#/components/schemas/ErrorMessage'
                '401':
                  description: >-
                    Unauthorized. The token is invalid/expired or the SSN does
                    not exist in the VP. Please refer to the error message for
                    details.
                  content:
                    application/json:
                      schema:
                        $ref: '#/components/schemas/ErrorMessage'
                '403':
                  description: >-
                    Forbidden. No access rights or access frequency too fast.
                    Please refer to the error message for details.
                  content:
                    application/json:
                      schema:
                        $ref: '#/components/schemas/ErrorMessage'
                '500':
                  description: >-
                    Internal server error. Please refer to the error message for
                    details.
                  content:
                    application/json:
                      schema:
                        $ref: '#/components/schemas/ErrorMessage'
        denial:
          /applications/{applicationId}/denials:
            post:
              summary: Send denial of revolving loan to broker (LOAN ONLY)
              description: >-
                Send denial of revolving loan to broker. {OutgoingAuthTokenKey}
                and {OutgoingAuthTokenValue} which provided by broker will be
                set in auth and header of the request. It will retry 3 times
                with 10 seconds delay if occurs exceptions.
              parameters:
                - name: applicationId
                  in: path
                  description: The application ID from broker.
                  required: true
                  schema:
                    type: string
              requestBody:
                content:
                  application/json:
                    schema:
                      $ref: '#/components/schemas/DenialRequestV4'
                required: true
              responses:
                '200':
                  description: Denial received successfully
                '400':
                  description: >-
                    Bad request. The parameters in the URL or request body are
                    invalid. Please refer to the error message for details.
                  content:
                    application/json:
                      schema:
                        $ref: '#/components/schemas/ErrorMessage'
                '401':
                  description: >-
                    Unauthorized. The token is invalid/expired or the SSN does
                    not exist in the VP. Please refer to the error message for
                    details.
                  content:
                    application/json:
                      schema:
                        $ref: '#/components/schemas/ErrorMessage'
                '403':
                  description: >-
                    Forbidden. No access rights or access frequency too fast.
                    Please refer to the error message for details.
                  content:
                    application/json:
                      schema:
                        $ref: '#/components/schemas/ErrorMessage'
                '500':
                  description: >-
                    Internal server error. Please refer to the error message for
                    details.
                  content:
                    application/json:
                      schema:
                        $ref: '#/components/schemas/ErrorMessage'
        comment:
          /applications/{applicationId}/comments:
            post:
              summary: Send comments of revolving loan to broker (LOAN ONLY)
              description: >-
                Send comments of revolving loan to broker.
                {OutgoingAuthTokenKey} and {OutgoingAuthTokenValue} which
                provided by broker will be set in auth and header of the
                request. It will retry 3 times with 10 seconds delay if occurs
                exceptions.
              parameters:
                - name: applicationId
                  in: path
                  description: The application ID from broker.
                  required: true
                  schema:
                    type: string
              requestBody:
                content:
                  application/json:
                    schema:
                      $ref: '#/components/schemas/CommentRequestV4'
                required: true
              responses:
                '200':
                  description: Comment received successfully
                '400':
                  description: >-
                    Bad request. The parameters in the URL or request body are
                    invalid. Please refer to the error message for details.
                  content:
                    application/json:
                      schema:
                        $ref: '#/components/schemas/ErrorMessage'
                '401':
                  description: >-
                    Unauthorized. The token is invalid/expired or the SSN does
                    not exist in the VP. Please refer to the error message for
                    details.
                  content:
                    application/json:
                      schema:
                        $ref: '#/components/schemas/ErrorMessage'
                '403':
                  description: >-
                    Forbidden. No access rights or access frequency too fast.
                    Please refer to the error message for details.
                  content:
                    application/json:
                      schema:
                        $ref: '#/components/schemas/ErrorMessage'
                '500':
                  description: >-
                    Internal server error. Please refer to the error message for
                    details.
                  content:
                    application/json:
                      schema:
                        $ref: '#/components/schemas/ErrorMessage'
        notification:
          /applications/{applicationId}/offers/{offerId}:
            patch:
              summary: Notification when offer's status has been changed (LOAN ONLY)
              description: >-
                Notification when offer's status has been changed.
                {OutgoingAuthTokenKey} and {OutgoingAuthTokenValue} which
                provided by broker will be set in auth and header of the
                request. It will retry 3 times with 10 seconds delay if occurs
                exceptions.
              parameters:
                - name: applicationId
                  in: path
                  description: The application ID from broker.
                  required: true
                  schema:
                    type: string
                - name: offerId
                  in: path
                  description: >-
                    The id in the response of the create offer API, refer to
                    'POST /applications/{applicationId}/offers'.
                  required: true
                  schema:
                    type: string
              requestBody:
                content:
                  application/json:
                    schema:
                      $ref: '#/components/schemas/RevolvingNotificationRequestV4'
                required: true
              responses:
                '200':
                  description: Notification received successfully
                '400':
                  description: >-
                    Bad request. The parameters in the URL or request body are
                    invalid. Please refer to the error message for details.
                  content:
                    application/json:
                      schema:
                        $ref: '#/components/schemas/ErrorMessage'
                '401':
                  description: >-
                    Unauthorized. The token is invalid/expired or the SSN does
                    not exist in the VP. Please refer to the error message for
                    details.
                  content:
                    application/json:
                      schema:
                        $ref: '#/components/schemas/ErrorMessage'
                '403':
                  description: >-
                    Forbidden. No access rights or access frequency too fast.
                    Please refer to the error message for details.
                  content:
                    application/json:
                      schema:
                        $ref: '#/components/schemas/ErrorMessage'
                '500':
                  description: >-
                    Internal server error. Please refer to the error message for
                    details.
                  content:
                    application/json:
                      schema:
                        $ref: '#/components/schemas/ErrorMessage'
      security:
        - X-AUTH-TOKEN: []
  /api/broker/v4/revolving/applications/{applicationId}:
    patch:
      tags:
        - Brokers
      summary: Update credit loan application from broker (v4)
      description: Update credit loan application from broker
      operationId: updateRevolvingApplicationFromExternalBrokerV4
      parameters:
        - name: INCOMING_AUTH_KEY_LOAN
          in: header
          description: INCOMING_AUTH_KEY_LOAN
          required: true
          schema:
            type: string
        - name: INCOMING_AUTH_VALUE_LOAN
          in: header
          description: INCOMING_AUTH_VALUE_LOAN
          required: true
          schema:
            type: string
        - name: applicationId
          in: path
          description: Unique sequence, the maxium length is 255.
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/RevolvingBrokerApplicationInformationForUpdateV4
        required: true
      responses:
        '201':
          description: Application successfully updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BrokerApplicationUpdateResponseAPIV4'
        '400':
          description: >-
            Bad request. The parameters in the URL or request body are invalid.
            Please refer to the error message for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '401':
          description: >-
            Unauthorized. The token is invalid/expired or the SSN does not exist
            in the VP. Please refer to the error message for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '403':
          description: >-
            Forbidden. No access rights or access frequency too fast. Please
            refer to the error message for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '500':
          description: >-
            Internal server error. Please refer to the error message for
            details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      callbacks:
        offer:
          /applications/{applicationId}/offers:
            post:
              summary: Create an offer of revolving loan to broker (LOAN ONLY)
              description: >-
                Create an offer of revolving loan to broker.
                {OutgoingAuthTokenKey} and {OutgoingAuthTokenValue} which
                provided by broker will be set in auth and header of the
                request. It will retry 3 times with 10 seconds delay if occurs
                exceptions.
              parameters:
                - name: applicationId
                  in: path
                  description: The application ID from broker.
                  required: true
                  schema:
                    type: string
              requestBody:
                content:
                  application/json:
                    schema:
                      $ref: '#/components/schemas/RevolvingOfferRequestV4'
                required: true
              responses:
                '201':
                  description: Offer received successfully
                  content:
                    application/json:
                      schema:
                        $ref: '#/components/schemas/OfferResponseV4'
                '400':
                  description: >-
                    Bad request. The parameters in the URL or request body are
                    invalid. Please refer to the error message for details.
                  content:
                    application/json:
                      schema:
                        $ref: '#/components/schemas/ErrorMessage'
                '401':
                  description: >-
                    Unauthorized. The token is invalid/expired or the SSN does
                    not exist in the VP. Please refer to the error message for
                    details.
                  content:
                    application/json:
                      schema:
                        $ref: '#/components/schemas/ErrorMessage'
                '403':
                  description: >-
                    Forbidden. No access rights or access frequency too fast.
                    Please refer to the error message for details.
                  content:
                    application/json:
                      schema:
                        $ref: '#/components/schemas/ErrorMessage'
                '500':
                  description: >-
                    Internal server error. Please refer to the error message for
                    details.
                  content:
                    application/json:
                      schema:
                        $ref: '#/components/schemas/ErrorMessage'
        denial:
          /applications/{applicationId}/denials:
            post:
              summary: Send denial of revolving loan to broker (LOAN ONLY)
              description: >-
                Send denial of revolving loan to broker. {OutgoingAuthTokenKey}
                and {OutgoingAuthTokenValue} which provided by broker will be
                set in auth and header of the request. It will retry 3 times
                with 10 seconds delay if occurs exceptions.
              parameters:
                - name: applicationId
                  in: path
                  description: The application ID from broker.
                  required: true
                  schema:
                    type: string
              requestBody:
                content:
                  application/json:
                    schema:
                      $ref: '#/components/schemas/DenialRequestV4'
                required: true
              responses:
                '200':
                  description: Denial received successfully
                '400':
                  description: >-
                    Bad request. The parameters in the URL or request body are
                    invalid. Please refer to the error message for details.
                  content:
                    application/json:
                      schema:
                        $ref: '#/components/schemas/ErrorMessage'
                '401':
                  description: >-
                    Unauthorized. The token is invalid/expired or the SSN does
                    not exist in the VP. Please refer to the error message for
                    details.
                  content:
                    application/json:
                      schema:
                        $ref: '#/components/schemas/ErrorMessage'
                '403':
                  description: >-
                    Forbidden. No access rights or access frequency too fast.
                    Please refer to the error message for details.
                  content:
                    application/json:
                      schema:
                        $ref: '#/components/schemas/ErrorMessage'
                '500':
                  description: >-
                    Internal server error. Please refer to the error message for
                    details.
                  content:
                    application/json:
                      schema:
                        $ref: '#/components/schemas/ErrorMessage'
        comment:
          /applications/{applicationId}/comments:
            post:
              summary: Send comments of revolving loan to broker (LOAN ONLY)
              description: >-
                Send comments of revolving loan to broker.
                {OutgoingAuthTokenKey} and {OutgoingAuthTokenValue} which
                provided by broker will be set in auth and header of the
                request. It will retry 3 times with 10 seconds delay if occurs
                exceptions.
              parameters:
                - name: applicationId
                  in: path
                  description: The application ID from broker.
                  required: true
                  schema:
                    type: string
              requestBody:
                content:
                  application/json:
                    schema:
                      $ref: '#/components/schemas/CommentRequestV4'
                required: true
              responses:
                '200':
                  description: Comment received successfully
                '400':
                  description: >-
                    Bad request. The parameters in the URL or request body are
                    invalid. Please refer to the error message for details.
                  content:
                    application/json:
                      schema:
                        $ref: '#/components/schemas/ErrorMessage'
                '401':
                  description: >-
                    Unauthorized. The token is invalid/expired or the SSN does
                    not exist in the VP. Please refer to the error message for
                    details.
                  content:
                    application/json:
                      schema:
                        $ref: '#/components/schemas/ErrorMessage'
                '403':
                  description: >-
                    Forbidden. No access rights or access frequency too fast.
                    Please refer to the error message for details.
                  content:
                    application/json:
                      schema:
                        $ref: '#/components/schemas/ErrorMessage'
                '500':
                  description: >-
                    Internal server error. Please refer to the error message for
                    details.
                  content:
                    application/json:
                      schema:
                        $ref: '#/components/schemas/ErrorMessage'
        notification:
          /applications/{applicationId}/offers/{offerId}:
            patch:
              summary: Notification when offer's status has been changed (LOAN ONLY)
              description: >-
                Notification when offer's status has been changed.
                {OutgoingAuthTokenKey} and {OutgoingAuthTokenValue} which
                provided by broker will be set in auth and header of the
                request. It will retry 3 times with 10 seconds delay if occurs
                exceptions.
              parameters:
                - name: applicationId
                  in: path
                  description: The application ID from broker.
                  required: true
                  schema:
                    type: string
                - name: offerId
                  in: path
                  description: >-
                    The id in the response of the create offer API, refer to
                    'POST /applications/{applicationId}/offers'.
                  required: true
                  schema:
                    type: string
              requestBody:
                content:
                  application/json:
                    schema:
                      $ref: '#/components/schemas/RevolvingNotificationRequestV4'
                required: true
              responses:
                '200':
                  description: Notification received successfully
                '400':
                  description: >-
                    Bad request. The parameters in the URL or request body are
                    invalid. Please refer to the error message for details.
                  content:
                    application/json:
                      schema:
                        $ref: '#/components/schemas/ErrorMessage'
                '401':
                  description: >-
                    Unauthorized. The token is invalid/expired or the SSN does
                    not exist in the VP. Please refer to the error message for
                    details.
                  content:
                    application/json:
                      schema:
                        $ref: '#/components/schemas/ErrorMessage'
                '403':
                  description: >-
                    Forbidden. No access rights or access frequency too fast.
                    Please refer to the error message for details.
                  content:
                    application/json:
                      schema:
                        $ref: '#/components/schemas/ErrorMessage'
                '500':
                  description: >-
                    Internal server error. Please refer to the error message for
                    details.
                  content:
                    application/json:
                      schema:
                        $ref: '#/components/schemas/ErrorMessage'
      security:
        - X-AUTH-TOKEN: []
  /api/broker/v4/revolving/applications/{applicationId}/offers/{offerId}/accept:
    put:
      tags:
        - Brokers
      summary: Approve offer of credit loan from broker (v4)
      description: >-
        Approve offer of credit loan from broker , the credit application must
        be in status BID
      operationId: handleApprovedBIDInfoFromExternalRevolvingLoanBrokerV4
      parameters:
        - name: applicationId
          in: path
          description: >-
            The attribute 'applicationId' in the requset body of the submit
            application API.
          required: true
          schema:
            type: string
        - name: offerId
          in: path
          description: >-
            The id in the response of the create offer API, refer to 'POST
            /applications/{applicationId}/offers'.
          required: true
          schema:
            type: string
        - name: INCOMING_AUTH_KEY_LOAN
          in: header
          description: INCOMING_AUTH_KEY_LOAN, provide by Vilja.
          required: true
          schema:
            type: string
        - name: INCOMING_AUTH_VALUE_LOAN
          in: header
          description: INCOMING_AUTH_VALUE_LOAN, provide by Vilja.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Bid/offer approved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BrokerApplicationAcceptResponseV4'
        '400':
          description: >-
            Bad request. The parameters in the URL or request body are invalid.
            Please refer to the error message for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '401':
          description: >-
            Unauthorized. The token is invalid/expired or the SSN does not exist
            in the VP. Please refer to the error message for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '403':
          description: >-
            Forbidden. No access rights or access frequency too fast. Please
            refer to the error message for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '500':
          description: >-
            Internal server error. Please refer to the error message for
            details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      security:
        - X-AUTH-TOKEN: []
  /api/broker/v4/revolving/applications/{applicationId}/offers/{offerId}/reject:
    put:
      tags:
        - Brokers
      summary: Reject offer of credit application from borker (v4)
      description: Reject offer of credit application from borker
      operationId: handleRejectedBIDInfoFromExternalRevolvingLoanBrokerV4
      parameters:
        - name: applicationId
          in: path
          description: >-
            The attribute 'applicationId' in the requset body of the submit
            application API.
          required: true
          schema:
            type: string
        - name: offerId
          in: path
          description: >-
            The id in the response of the create offer API, refer to 'POST
            /applications/{applicationId}/offers'.
          required: true
          schema:
            type: string
        - name: INCOMING_AUTH_KEY_LOAN
          in: header
          description: INCOMING_AUTH_KEY_LOAN, provide by Vilja.
          required: true
          schema:
            type: string
        - name: INCOMING_AUTH_VALUE_LOAN
          in: header
          description: INCOMING_AUTH_VALUE_LOAN, provide by Vilja.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Bid/offer rejected successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BrokerApplicationRejectResponseV4'
        '400':
          description: >-
            Bad request. The parameters in the URL or request body are invalid.
            Please refer to the error message for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '401':
          description: >-
            Unauthorized. The token is invalid/expired or the SSN does not exist
            in the VP. Please refer to the error message for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '403':
          description: >-
            Forbidden. No access rights or access frequency too fast. Please
            refer to the error message for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '500':
          description: >-
            Internal server error. Please refer to the error message for
            details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      security:
        - X-AUTH-TOKEN: []
  /api/customer/v4/engagements:
    get:
      tags:
        - Loan Customers
      summary: Get loan consumer customer engagements info. (v4)
      description: List applications and accounts by ssn which is from bank id
      operationId: engagements
      parameters:
        - name: X-AUTH-TOKEN
          in: header
          description: Access token
          required: true
          schema:
            type: string
        - name: personalId
          in: query
          description: personalId, only support the personal id without any formats.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Returned Customer engagement
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EngagementEntityViewBO'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
  /api/customer/v4/personalInformation:
    get:
      tags:
        - Loan Customers
      summary: Get personal information by SSN from an external provider
      description: |
        ## General description
        Get personal information by SSN from an external provider
        ## Allowed VP token
        Access Token,Security Token
        ## Allowed roles
        Trusted Party, My Pages
      operationId: 85561371-d882-42ba-96b3-2e6f2000123c
      parameters:
        - name: ssn
          in: query
          description: The person SSN with century
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Get customer personal information successfully retrieved
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerPersonalInformationV4'
              examples:
                Get loan consumer customer personal response:
                  value:
                    customerId: '51701'
                    ssn: '196112143448'
                    givenName: Testsson
                    surName: Anders
                    email: test@test.com
                    phoneCode: '+46'
                    phoneNumber: '123456789'
                    mobilePhoneCode: '+46'
                    mobilePhoneNumber: '123456788'
                    personStatusCode: EMIGRATED
                    nationality: SE
                    income: 10000
                    employmentType: FULL
                    KYCLevel: FULL
                    address:
                      streetAddress: Danderydsgatan 2
                      zipCode: '18260'
                      city: Djursholm
                      country: SE
                      region: ''
                      coAddress: ''
                      manuallyMaintained: true
        '204':
          description: Customer not found
        '400':
          $ref: '#/components/responses/Common-BadRequest-Response'
        '401':
          $ref: '#/components/responses/Common-Unauthorized-Response'
        '403':
          $ref: '#/components/responses/Common-Forbidden-Response'
        '500':
          $ref: '#/components/responses/Common-ServerError-Response'
      security:
        - Authorization: []
  /api/customer/v4/privateCustomers/me:
    get:
      tags:
        - Loan Customers
      summary: Get loan consumer customer restricted by access token (v4)
      description: Get loan consumer customer restricted by access token (v4)
      operationId: 85561371-d882-42ba-96b3-2e6f2000123b
      parameters:
        - name: X-AUTH-TOKEN
          in: header
          description: Access token
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Customer information successfully retrieved
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerInformationV4'
              examples:
                Get loan consumer customer response:
                  value:
                    customerBasicInfo:
                      customerId: string
                      nationality: string
                      century: string
                      ssn: string
                      givenName: string
                      surName: string
                      email: string
                      phoneCode: string
                      phoneNumber: string
                      mobilePhoneCode: string
                      mobilePhoneNumber: string
                      preferredContactChannel: 'NULL'
                      selfAssessedPep: 'NULL'
                      selfAssessedPepDescription: string
                      hasGuardian: true
                      dynamicFieldsRef: 61a5e90d83750656d117e059
                      dynamicFields: {}
                      schemaMetadata:
                        sensitive: PERSONAL
                        tags: []
                        selfRef:
                          refId: ''
                    address:
                      streetAddress: string
                      zipCode: string
                      city: string
                      country: string
                      region: string
                      coAddress: string
                      manuallyMaintained: true
                    accountList:
                      - id: string
                        accountNumber: string
                        nickName: string
                        type: DEPOSIT
                        extraInfos:
                          property1: string
                          property2: string
        '400':
          description: >-
            Bad request. The parameters in the URL or request body are invalid.
            Please refer to the error message for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '401':
          description: >-
            Unauthorized. The token is invalid/expired or the SSN does not exist
            in the VP. Please refer to the error message for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '403':
          description: >-
            Forbidden. No access rights or access frequency too fast. Please
            refer to the error message for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '500':
          description: >-
            Internal server error. Please refer to the error message for
            details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
    patch:
      tags:
        - Loan Customers
      summary: Update loan consumer customer (v4)
      description: >-
        Only allow to update email and phone for the customers whose access
        token only granted the role of Mortgage Front
      operationId: f8d44ac4-00ba-48b1-a9fb-753c173b5dbe
      parameters:
        - name: X-AUTH-TOKEN
          in: header
          description: Access token
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomerInformationForPatch'
            examples:
              Update loan consumer customer request body:
                value:
                  customerBasicInfo:
                    givenName: string
                    surName: string
                    nationality: string
                    email: string
                    phoneCode: string
                    phoneNumber: string
                    mobilePhoneCode: string
                    mobilePhoneNumber: string
                    preferredContactChannel: 'NULL'
                    selfAssessedPep: 'NULL'
                    selfAssessedPepDescription: string
                    dynamicFields: {}
                  address:
                    streetAddress: string
                    zipCode: string
                    city: string
                    country: string
                    region: string
                    coAddress: string
        required: true
      responses:
        '200':
          description: Customer information successfully updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerInformationV4'
              examples:
                example-1:
                  value:
                    customerBasicInfo:
                      customerId: string
                      nationality: string
                      century: string
                      ssn: string
                      givenName: string
                      surName: string
                      email: string
                      phoneCode: string
                      phoneNumber: string
                      mobilePhoneCode: string
                      mobilePhoneNumber: string
                      preferredContactChannel: 'NULL'
                      selfAssessedPep: 'NULL'
                      selfAssessedPepDescription: string
                      hasGuardian: true
                      dynamicFieldsRef: 61a5e90d83750656d117e059
                      dynamicFields: {}
                      schemaMetadata:
                        sensitive: PERSONAL
                        tags:
                          - string
                        selfRef:
                          refId: string
                          uri: string
                    address:
                      streetAddress: string
                      zipCode: string
                      city: string
                      country: string
                      region: string
                      coAddress: string
                      manuallyMaintained: true
                    accountList:
                      - id: string
                        accountNumber: string
                        ocrNumber: string
                        nickName: string
                        type: DEPOSIT
                        extraInfos:
                          property1: string
                          property2: string
        '400':
          description: >-
            Bad request. The parameters in the URL or request body are invalid.
            Please refer to the error message for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '401':
          description: >-
            Unauthorized. The token is invalid/expired or the SSN does not exist
            in the VP. Please refer to the error message for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '403':
          description: >-
            Forbidden. No access rights or access frequency too fast. Please
            refer to the error message for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '500':
          description: >-
            Internal server error. Please refer to the error message for
            details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
  /api/customer/v4/privateCustomers/me/secureMessages:
    post:
      tags:
        - Loan Customers
      summary: >-
        Create secure message for loan consumer customer restricted by access
        token
      description: >
        ## General description

        Send a secure message for a consumer customer, return the created secure
        message, the `content` in the request will be the first reply of the
        secure message.

        ## Allowed VP token

        Access Token

        ## Allowed roles

        Trusted Party, My Pages, Mortgage Front
      operationId: 134d2778-db3e-4f43-af24-e4ca5b8a8e00
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateSecureMessageRequestV4'
        required: true
      responses:
        '201':
          description: The created secure message
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SecureMessageResponseV4'
        '400':
          description: Bad request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '401':
          description: Unauthorized.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '403':
          description: Access denied, please check the error message
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      deprecated: false
    get:
      tags:
        - Loan Customers
      summary: >-
        Get secure messages for loan consumer customer restricted by access
        token
      description: |
        ## General description
        Get secure messages by different query criterias.
        ## Allowed VP token
        Access Token
        ## Allowed roles
        Trusted Party, My Pages, Mortgage Front
      operationId: 1c2bb938-0905-49cb-98ce-d436686adbab
      parameters:
        - name: page
          in: query
          description: >-
            Pagination parameter, the given page number, you must provide the
            `size` at the same time.
          schema:
            type: number
          example: 1
        - name: size
          in: query
          description: >-
            Pagination parameter, the data size per page, you must provide the
            `page` at the same time.
          schema:
            type: number
          example: 10
        - name: asc
          in: query
          description: >-
            Sort parameter, sort the secure messages in ascending order, dont
            provide the param `desc` at the same time.
          schema:
            type: string
          example: createDateTime,creatorName
        - name: desc
          in: query
          description: >-
            Sort parameter, sort the secure messages in descending order, dont
            provide the param `asc` at the same time.
          schema:
            type: string
          example: createDateTime,creatorName
      responses:
        '206':
          description: >-
            Return partial secure messages, you receive an object with empty
            Array of secureMessages if nothing found.
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/SecureMessageListResponseV4'
        '400':
          description: Bad request to get secure messages.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '401':
          description: >-
            Unauthorized, currently this API doesn't support to response json
            when meet such code.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '403':
          description: Access denied, please check the error message
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
  /api/customer/v4/privateCustomers/me/secureMessages/{secureMessageId}/markRepliesAsRead:
    post:
      tags:
        - Loan Customers
      summary: >-
        Mark all the replies of a secure message as read for loan consumer
        customer restricted by access token
      description: |
        ## General description
        Mark all the replies of a secure message as read by the given id.
        ## Allowed VP token
        Access Token
        ## Allowed roles
        Trusted Party, My Pages, Mortgage Front
      operationId: 8eb36cd2-5e07-45bc-8abc-0724c7cbf777
      parameters:
        - name: secureMessageId
          in: path
          description: The secure message id you want to reply
          required: true
          schema:
            type: string
          example: 609a49733561615ebc6ce80d
      responses:
        '200':
          description: The updated secure message.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SecureMessageResponseV4'
        '400':
          description: Bad request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '401':
          description: >-
            Unauthorized, currently this API doesn't support to response json
            when meet such code.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '403':
          description: Access denied, please check the error message
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '405':
          description: Not allowed to change
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
  /api/customer/v4/privateCustomers/me/secureMessages/{secureMessageId}/replies:
    post:
      tags:
        - Loan Customers
      summary: >-
        Create reply of secure message for loan consumer customer restricted by
        access token
      description: >
        ## General description

        Reply a secure message for a privte customer by the given id, return the
        secure message.

        ## Allowed VP token

        Access Token

        ## Allowed roles

        Trusted Party, My Pages, Mortgage Front
      operationId: 33c2ca89-11c7-479f-8f39-80ea81d717f4
      parameters:
        - name: secureMessageId
          in: path
          description: The secure message id you want to reply
          required: true
          schema:
            type: string
          example: 609a49733561615ebc6ce80d
      requestBody:
        content:
          application/json:
            schema:
              required:
                - content
              type: object
              properties:
                content:
                  type: string
                  description: The escaped json string content of the secure message reply.
                  example: Click the button "change nickname" in the account page.
        required: true
      responses:
        '200':
          description: The updated secure message
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SecureMessageResponseV4'
        '400':
          description: Bad request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '401':
          description: Unauthorized.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '403':
          description: Access denied, please check the error message
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '405':
          description: Not allowed to change
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      deprecated: false
  /api/customer/v4/privateCustomers/me/secureMessages/{secureMessageId}/replies/{replyId}/markAsRead:
    put:
      tags:
        - Loan Customers
      summary: >-
        Mark a reply of a secure message as read for loan consumer customer
        restricted by access token
      description: |
        ## General description
        Mark a reply of a secure message as read by the given id.
        ## Allowed VP token
        Access Token
        ## Allowed roles
        Trusted Party, My Pages, Mortgage Front
      operationId: af2c80e2-f3ee-4235-a381-32926daf6651
      parameters:
        - name: secureMessageId
          in: path
          description: The secure message id.
          required: true
          schema:
            type: string
          example: 609a49733561615ebc6ce80d
        - name: replyId
          in: path
          description: The reply id.
          required: true
          schema:
            type: string
          example: 609a49733561615ebc6ce19e
      responses:
        '200':
          description: The updated secure message.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SecureMessageResponseV4'
        '400':
          description: Bad request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '401':
          description: Unauthorized.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '403':
          description: Access denied, please check the error message
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '405':
          description: Not allowed to change
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
  /api/customer/v5/companyRepresentatives/{companyRepresentativeId}:
    get:
      tags:
        - Deposit CompanyRepresentatives
      summary: Get deposit company representative by id
      description: >-
        description: |

        ## General description

        Get the basic information for company representative. (DEPOSIT ONLY)

        ## Changelog

        - v30.0.0 : Add a field `withdrawalFeeInPercentageByAccruedInterest` in
        the response.

        - v26.0.0 : Remove fields `delayedWithdrawalsEnabled`,
        `delayedWithdrawalsYear`, `delayedWithdrawalsDay` in the response

        - v23.0.0 :
            - Add an field `legalEntity.accountList.currentInterestBalance` in the response.
            - Add an field `legalEntity.accountList.product.permitFreeWithdrawalFromInterestBalance` in the response.
        - v18.0.0 : New fields
        `legalEntity.accountList.product.directWithdrawToExternalAccount` in
        response.

        - v15.0.0 : New fields
        `legalEntity.accountList.product.deltaInterestRate`,`legalEntity.accountList.kycAnswered`
        in response.

        - v14.0.0 : New fields
        `legalEntity.accountList.product.trustAccount`,`legalEntity.accountList.product.taxExempt`
        in response.
      operationId: 72b4fcfc-8c7e-4cf5-b6ef-bacae5a554b9
      parameters:
        - name: companyRepresentativeId
          in: path
          description: The company representative id what you want to query.
          required: true
          schema:
            type: string
        - name: X-AUTH-TOKEN
          in: header
          description: Access token
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Get company representative full information.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/V5CompanyRepresentativeInformation'
        '400':
          description: Wrong request to get company representative.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '401':
          description: Unauthorized.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '403':
          description: Prohibiting block. Please check the error message.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
    put:
      tags:
        - Deposit CompanyRepresentatives
      summary: Update company representative info for deposit customer
      description: Update information for company representative (DEPOSIT ONLY)
      operationId: 5630fdac-57e1-4519-9a1b-9d4c5864da71
      parameters:
        - name: companyRepresentativeId
          in: path
          description: The company representative id what you want to query.
          required: true
          schema:
            type: string
        - name: X-AUTH-TOKEN
          in: header
          description: Access token
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/V5CompanyRepresentativeBasicUpdateInfo'
        required: true
      responses:
        '200':
          description: Updated company representative information.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/V5CompanyRepresentativeBasicUpdateInfo'
        '400':
          description: Token or parameter invalid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '401':
          description: Unauthorized.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '403':
          description: Prohibiting block.Please check the error message.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
  /api/customer/v5/companyRepresentatives/{companyRepresentativeId}/addresses:
    get:
      tags:
        - Deposit CompanyRepresentatives
      summary: Get address of company representative for deposit customer
      description: Get address for company representative.
      operationId: 9591935b-e91a-4981-9bf9-3cf307795bb3
      parameters:
        - name: X-AUTH-TOKEN
          in: header
          description: Access token
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Return company representative address information.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/V1Address'
        '400':
          description: Token or parameter invalid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '401':
          description: Unauthorized.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '403':
          description: Prohibiting block.Please check the error message.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
  /api/customer/v5/companyRepresentatives/{companyRepresentativeId}/basicInformation:
    get:
      tags:
        - Deposit CompanyRepresentatives
      summary: Get the basic information of company representative for deposit customer
      description: Get the basic information for company representative. (DEPOSIT ONLY)
      operationId: eb7ca9f0-011d-457d-8136-14b829d9f32d
      parameters:
        - name: X-AUTH-TOKEN
          in: header
          description: Access token
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Get company representative information.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/V5CompanyRepresentativeBasicInfo'
        '400':
          description: Token or parameter invalid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '401':
          description: Unauthorized.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '403':
          description: Prohibiting block.Please check the error message.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
  /api/customer/v5/companyRepresentatives/{companyRepresentativeId}/pep:
    get:
      tags:
        - Deposit CompanyRepresentatives
      summary: Get PEP info of company representative for deposit customer
      description: Get PEP info of company representative for deposit customer
      operationId: ad65a699-7f2d-4f2a-b010-5142652c117a
      parameters:
        - name: X-AUTH-TOKEN
          in: header
          description: Access token
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Get pep informations , related current login token.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/V1PepForLegal'
        '400':
          description: Token or parameter invalid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '401':
          description: Unauthorized.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '403':
          description: Prohibiting block.Please check the error message.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
  /api/customer/v5/companyRepresentatives/{companyRepresentativeId}/smeRepresentatives:
    get:
      tags:
        - Deposit CompanyRepresentatives
      summary: Get deposit SME customer by company representative id
      description: >-
        ## General description

        Get legal entities related logined company representative (DEPOSIT ONLY)

        ## Changelog

        - v30.0.0 : Add a field `withdrawalFeeInPercentageByAccruedInterest` in
        the response.

        - v26.0.0 : Remove fields `delayedWithdrawalsEnabled`,
        `delayedWithdrawalsYear`, `delayedWithdrawalsDay` in the response

        - v23.0.0 :
            - Add an field `accountList.product.permitFreeWithdrawalFromInterestBalance` in the response.
            - Add an field `accountList.currentInterestBalance` in the response.
        - v18.0.0 : New fields
        `accountList.product.directWithdrawToExternalAccount` in response.

        - v15.0.0: New fields
        `accountList.product.deltaInterestRate`,`accountList.deltaInterestRate`
        in response.

        - v14.0.0 : New fields
        `accountList.product.trustAccount`,`accountList.product.taxExempt` in
        response.
      operationId: 11483620-be7f-4f58-b4f1-7935f6e02613
      parameters:
        - name: X-AUTH-TOKEN
          in: header
          description: Access token
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Get legal entities related company representative
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/V5LegalEntity'
        '400':
          description: Token or parameter invalid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '401':
          description: Unauthorized.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '403':
          description: Prohibiting block.Please check the error message.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
  /api/customer/v5/companyRepresentatives/{companyRepresentativeId}/withPepInfo:
    put:
      tags:
        - Deposit CompanyRepresentatives
      summary: Update deposit company representative include PEP info
      description: >-
        ## General description

        Update information with pep information for company representative
        (DEPOSIT ONLY)

        ## Changelog

        - v30.0.0 : Add a field `withdrawalFeeInPercentageByAccruedInterest` in
        the response.

        - v26.0.0 : Remove fields `delayedWithdrawalsEnabled`,
        `delayedWithdrawalsYear`, `delayedWithdrawalsDay` in the response

        - v23.0.0 :
            - Add an field `legalEntity.accountList.currentInterestBalance` in the response.
            - Add an field `legalEntity.accountList.product.permitFreeWithdrawalFromInterestBalance` in the response.
        - v18.0.0 : New fields
        `legalEntity.accountList.product.directWithdrawToExternalAccount` in
        response.

        - v15.0.0 : New fields
        `legalEntity.accountList.product.deltaInterestRate`,`legalEntity.accountList.kycAnswered`
        in response.

        - v14.0.0 : New fields
        `legalEntity.accountList.product.trustAccount`,`legalEntity.accountList.product.taxExempt`
        in response.
      operationId: ffdd8d85-9d1b-4e63-b66c-89796cb02337
      parameters:
        - name: companyRepresentativeId
          in: path
          description: The company representative id what you want to query.
          required: true
          schema:
            type: string
        - name: X-AUTH-TOKEN
          in: header
          description: Access token
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/V5CompanyRepresentativeUpdateInfo'
        required: true
      responses:
        '200':
          description: Updated company representative information.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/V5CompanyRepresentativeInformation'
        '400':
          description: Wrong request to update company representative.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '401':
          description: Unauthorized.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '403':
          description: Prohibiting block .Please check the error message.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
  /api/customer/v5/consumerInfo:
    get:
      tags:
        - Deposit Customers
      summary: Get deposit consumer info restricted by access token
      description: Get deposit consumer info restricted by access token
      operationId: ff50c59e-aa08-488f-b692-9e15cb8ced41
      parameters:
        - name: X-AUTH-TOKEN
          in: header
          description: Access token
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Consumer information with registration access.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConsumerInfo'
        '400':
          description: Wrong request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '403':
          description: Prohibiting block. Please check the error message.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
  /api/customer/v5/privateCustomers:
    post:
      tags:
        - Deposit Customers
      summary: Create deposit consumer customer
      description: >
        ## General description

        Create deposit consumer customer

        ## Allowed VP token

        Access token

        ## Allowed roles

        Any roles, but at least one valid role.

        ## Changelog

        - v31.0.0 :
            - Add a field `customerBasicInfo.noPromotionalMessages` in the request body & response.
            - field `customerBasicInfo.noSpam` is deprecated in the request body & response.
        - v24.0.0 :
            - Add fields `followUpAnswerAssets`, `followUpAnswerAssetsOtherValue`, `followUpAnswerValueOfAssets`, `followUpAnswerValueOfAssetsOtherValue` in the request and response supported.
            - Add fields `reAnswerPEPFollowUp` in the response supported.
        - v22.0.0 : Add field `streetAddress2` in the request body & response.

        - v21.0.0 : Add new field `customerBasicInfo.preferredName` in response
        body.

        - v16.0.0 : New fields `externalAuthorizationId`,`externalAccountId` in
        request body.

        ## Additional information

        ### When dryRun is true.There are some special scenarios in the response
         - The customerSerialId of customerBasicInfo is always 50000.
         - The totalEngagement of customerBasicInfo is always 0.
         - The hasNotConfiguredDepositDirectDebit of customerBasicInfo is always false.
         - The serialId of predefinedExternalBankAccountList is fake number.
         - The serialId of fatcaList is fake number.
        ### The address may be ignored due to the system configuration, please
        check with the administrator for detail.
      operationId: 3d9e804d-f505-4790-9d55-5093e14df589
      parameters:
        - name: dryRun
          in: query
          description: >-
            Default value is false. The system will not save the customer but
            run all the evaluations when it's true.
          schema:
            type: boolean
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostCustomerInformationBodyV5'
        required: true
      responses:
        '201':
          description: After created customer information.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetCustomerInformationBodyV5'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      security:
        - X-AUTH-TOKEN: []
        - Authorization: []
  /api/customer/v5/privateCustomers/me:
    get:
      tags:
        - Deposit Customers
      summary: Get deposit consumer customer
      operationId: b5c687e7-b585-4f29-b0e4-297c6ddae024
      description: >-
        ## General description

        Get deposit consumer customer (DEPOSIT ONLY)

        ## Changelog

        - v31.0.0 :
            - Add a field `customerBasicInfo.noPromotionalMessages` in the response.
            - field `customerBasicInfo.noSpam` is deprecated in the response.
        - v30.0.0 : Add a field `withdrawalFeeInPercentageByAccruedInterest` in
        the response.

        - v26.0.0 : Remove fields `delayedWithdrawalsEnabled`,
        `delayedWithdrawalsYear`, `delayedWithdrawalsDay` in the response

        - v24.0.0 :
            - Add fields `followUpAnswerAssets`, `followUpAnswerAssetsOtherValue`, `followUpAnswerValueOfAssets`, `followUpAnswerValueOfAssetsOtherValue`, `reAnswerPEPFollowUp` in the response supported.
        - v23.0.0 :
            - Add an field `accountList.currentInterestBalance` in the response.
            - Add an field `accountList.product.permitFreeWithdrawalFromInterestBalance` in the response.
        - v22.0.0 :
            - Add field `streetAddress2` in the response.
            - Add field `address` in the response of underage.
        - v21.0.0 : Add new fields `customerBasicInfo.preferredName`,
        `underageInfoList.customerBasicInfo.preferredName` in response body.

        - v18.0.0 : New fields
        `accountList.product.directWithdrawToExternalAccount` in response.

        - v15.0.0 : New field `accountList.product.deltaInterestRate` in
        response.

        - v14.0.0 : New fields
        `accountList.product.trustAccount`,`accountList.product.taxExempt` in
        response.
      parameters: []
      security:
        - X-AUTH-TOKEN: []
        - Authorization: []
      responses:
        '200':
          description: After changed customer information.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetCustomerInformationV5'
        '400':
          description: Token or parameter invalid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '401':
          description: Unauthorized.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '403':
          description: Prohibiting block.Please check the error message.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
    patch:
      tags:
        - Deposit Customers
      summary: Update deposit consumer customer
      description: >
        ## General description

        Update deposit consumer customer

        ## Allowed tokens

        Access Token

        ## Allowed roles

        My Pages

        ## Changelog

        - v31.0.0 :
            - Add a field `customerBasicInfo.noPromotionalMessages` in the request body & response.
            - field `customerBasicInfo.noSpam` is deprecated in the request body & response.
        - v24.0.0 :
            - Add fields `followUpAnswerAssets`, `followUpAnswerAssetsOtherValue`, `followUpAnswerValueOfAssets`, `followUpAnswerValueOfAssetsOtherValue` in the request and response supported.
            - Add fields `reAnswerPEPFollowUp` in the response supported.
        - v22.0.0 : Add field `streetAddress2` in the request body & response.

        - v21.0.0 : Remove fields `givenName`,`surname`,`middleName` for
        `customerBasicInfo` in request body.

        - v21.0.0 : Add new field `customerBasicInfo.preferredName` in response
        body.
      operationId: d87ed15a-358a-4533-9887-a9c4916a6926
      parameters: []
      security:
        - X-AUTH-TOKEN: []
        - Authorization: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchCustomerInformationBodyV5'
        required: true
      responses:
        '200':
          description: Customer information updated successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetCustomerInformationBodyV5'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
    put:
      tags:
        - Deposit Customers
      summary: Replace deposit consumer customer
      description: >
        ## General description

        Replace deposit consumer customer

        ## Allowed VP token

        Access Token

        ## Changelog

        - v31.0.0 :
            - Add a field `customerBasicInfo.noPromotionalMessages` in the request body & response.
            - field `customerBasicInfo.noSpam` is deprecated in the request body & response.
        - v24.0.0 :
            - Add fields `followUpAnswerAssets`, `followUpAnswerAssetsOtherValue`, `followUpAnswerValueOfAssets`, `followUpAnswerValueOfAssetsOtherValue` in the request and response supported.
            - Add fields `reAnswerPEPFollowUp` in the response supported.
        - v22.0.0: Add field `streetAddress2` in the request body & response.

        - v21.0.0: Add new fields `customerBasicInfo.preferredName` in response
        body.
      operationId: cba3c3a4-da8b-4b2e-9922-4086e37bae20
      parameters: []
      security:
        - X-AUTH-TOKEN: []
        - Authorization: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PutCustomerInformationBodyV5'
        required: true
      responses:
        '200':
          description: Customer information updated successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetCustomerInformationBodyV5'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
  /api/customer/v5/privateCustomers/me/accountsWithCouponsAndHolders:
    get:
      tags:
        - Deposit Customers
      summary: >-
        Get deposit accounts include coupons and holders info for consumer
        customer and his children
      description: >-
        ## General description

        Get deposit accounts include coupons and holders info for consumer
        customer and his children

        ## Changelog

        - v31.0.0 :
            - Add a field `holders.noPromotionalMessages` in the request body & response.
            - field `holders.noSpam` is deprecated in the response.
        - v30.0.0 : Add a field `withdrawalFeeInPercentageByAccruedInterest` in
        the response.

        - v26.0.0 : Remove fields `delayedWithdrawalsEnabled`,
        `delayedWithdrawalsYear`, `delayedWithdrawalsDay` in the response

        - v23.0.0 :
            - Add an field `account.product.permitFreeWithdrawalFromInterestBalance` in the response.
            - Add an field `account.currentInterestBalance` in the response.
        - v21.0.0: Add new fields `holders.preferredName`,
        `guardians.preferredName` in response body.

        - v18.0.0: New fields `account.product.directWithdrawToExternalAccount`
        in response.

        - v15.0.0: New fields
        `account.product.deltaInterestRate`,`account.kycAnswered` in response.

        - v14.0.0: New fields
        `account.product.trustAccount`,`account.product.taxExempt` in response.
      operationId: 979c7187-00b0-4b8e-8da3-28d089b2b29b
      parameters: []
      security:
        - X-AUTH-TOKEN: []
        - Authorization: []
      responses:
        '200':
          description: >-
            Get deposit accounts with coupons data and holders information for
            consumer customer and his children.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AccountWithCouponAndHolders'
        '400':
          description: Wrong request to get deposit accounts with coupons and holders.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '401':
          description: Unauthorized.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '500':
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
  /api/customer/v5/privateCustomers/me/addresses:
    get:
      tags:
        - Deposit Customers
      summary: Get address for deposit consumer customer
      description: Get address for deposit consumer customer
      operationId: de6fb832-5e4a-4cea-a8c4-067732b97462
      parameters:
        - name: X-AUTH-TOKEN
          in: header
          description: Access token
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Get address information.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerAddressV5'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
    put:
      tags:
        - Deposit Customers
      summary: Update address for deposit consumer customer
      description: |
        ## General description
        Update address for deposit consumer customer
        ## Changelog
        - v22.0.0 : 
          - Add field `streetAddress2` in the request body & response.
      operationId: fb9618d3-ec92-4a18-9538-67658dfe94fd
      parameters:
        - name: X-AUTH-TOKEN
          in: header
          description: Access token
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomerAddressV5'
        required: true
      responses:
        '200':
          description: After changed address information.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerAddressV5'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
  /api/customer/v5/privateCustomers/me/basicInformation:
    get:
      tags:
        - Deposit Customers
      summary: Get deposit consumer customer restricted by access token
      description: |
        ## General description
        Get deposit consumer customer restricted by access token
        ## Allowed VP token
        Access Token
        ## Changelog
        - v31.0.0 :
            - Add a field `noPromotionalMessages` in the response.
            - field `noSpam` is deprecated in the response.
        - v21.0.0: Add new field `preferredName` in response body.
      operationId: 52f7724e-89cf-4e98-bc52-a53e57dd9daa
      parameters: []
      security:
        - X-AUTH-TOKEN: []
        - Authorization: []
      responses:
        '200':
          description: Return customer basic information.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerBasicInformationV5'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
  /api/customer/v5/privateCustomers/me/depositAccounts:
    get:
      tags:
        - Deposit Accounts
      summary: Get deposit accounts for consumer customer restricted by access token
      description: >-
        ## General description

        Get deposit accounts for consumer customer restricted by access token

        ## Changelog

        - v30.0.0 : Add a field `withdrawalFeeInPercentageByAccruedInterest` in
        the response.

        - v26.0.0 : Remove fields `delayedWithdrawalsEnabled`,
        `delayedWithdrawalsYear`, `delayedWithdrawalsDay` in the response

        - v23.0.0 :
            - Add an field `product.permitFreeWithdrawalFromInterestBalance` in the response.
            - Add an field `currentInterestBalance` in the response.
        - v18.0.0 : New fields `product.directWithdrawToExternalAccount` in
        response.

        - v15.0.0: New fields `product.deltaInterestRate`,`kycAnswered` in
        response.

        - v14.0.0 : New fields `product.trustAccount`,`product.taxExempt` in
        response.
      operationId: a70b0ba4-cd74-4c1e-a216-112e1e51b40f
      parameters:
        - name: X-AUTH-TOKEN
          in: header
          description: Access token
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Get the all deposit accounts list.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/V1Account'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
  /api/deposit/v1/legalDocuments/{documentId}/download:
    parameters:
      - schema:
          type: string
        name: documentId
        in: path
        required: true
        description: Document ID
        example: 609a49733561615ebc6ce80d
    get:
      tags:
        - Deposit Legal Documents
      summary: Download legal document
      description: |-
        ## General description
        Download legal document by document Id
        ## Allowed tokens
        Access Token
        ## Allowed roles
        My Pages
        ## Changelog
        - v29.0.0 : API added.
      operationId: get-api-deposit-v1-legalDocuments-documentId-download
      responses:
        '200':
          description: Download document successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InputStream'
        '400':
          description: >-
            Bad request. The parameters in the URL or request body are invalid.
            Please refer to the error message for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '401':
          description: >-
            Unauthorized. The token is invalid/expired or the SSN does not exist
            in the VP. Please refer to the error message for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '403':
          description: >-
            Forbidden. No access rights or access frequency too fast. Please
            refer to the error message for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '500':
          description: >-
            Internal server error. Please refer to the error message for
            details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
  /api/customer/v5/privateCustomers/me/directDebitMandate:
    get:
      tags:
        - Deposit Mandates
      summary: >-
        Get direct debit mandate for deposit consumer customer restricted by
        access token
      description: >-
        ## General description

        Get direct debit mandate for deposit consumer customer restricted by
        access token

        ## Allowed tokens

        Access Token

        ## Allowed roles

        My Pages

        ## Changelog

        - v28.0.0 : Add a field `failedReason` in the response.

        - v22.0.0 :
            - Add field `bankName` in the mandate response
          - Add field `sendWithdrawRequestDate` in the response.
      operationId: getDirectDebitMandateForDepositConsumerCustomer
      parameters: []
      responses:
        '200':
          description: >-
            Get direct debit mandate for deposit consumer customer restricted by
            access token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DirectDebitMandate'
              examples:
                direct debit with one-time savings:
                  value:
                    id: 6194b67ce1c474652efeea0b
                    mandate:
                      status: ESTABLISHED
                      ssn: '194804032094'
                      externalAccountNumber: 9551-1112110
                      createDate: '2021-11-17T15:59:56.187+08:00'
                    monthlySavings: []
                    onetimeSavings:
                      - referenceId: 725ab8e034ee4ccfb9f2ec407ef078ab
                        accountNumber: '1357805'
                        amount: 5000
                        performDirectDebitDate: '2021-11-18'
                        configDate: '2021-11-17T16:01:45.222+08:00'
                        status: PAYMENT_HANDLED_SUCCESSFULLY
                        failedReason: null
                        sendWithdrawRequestDate: '2021-11-25 13:00:00'
                        transaction:
                          vpTransactionId: '5000401'
                          externalTransactionId: 1-x1235323
                          transactionOrigin:
                            vpAccountId: ''
                            reference: unknown
                            type: SE_DD
                          transactionDestination:
                            vpAccountId: '50251'
                            reference: '1357805'
                            type: VP_ACCOUNT
                          transactionDate: '2021-11-18 11:14:51'
                          transactionType: Insättning
                          transactionTypeTranslationKey: transaction.enum.transactionType.deposit
                          transactionMsg: ''
                          transactionNote: Autogiroinsättning
                          amount: 3000
                          outgoingBalance: 36333
        '400':
          description: >-
            Wrong request to Get direct debit mandate for deposit consumer
            customer restricted by access token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '401':
          description: Unauthorized.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '403':
          description: Prohibiting block.Please check the error message.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '404':
          description: Direct debit doesn't exist for the customer.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '500':
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
  /api/customer/v5/privateCustomers/me/documents:
    post:
      tags:
        - Deposit Customers-Document
      summary: >-
        Create documents for deposit consumer customer restricted by access
        token
      description: >-
        Create documents for deposit consumer customer restricted by access
        token
      operationId: a4bf5f63-90fa-4e13-b557-a2667fc345f6
      parameters: []
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                documentType:
                  type: string
                  description: |
                    * PROMISSORY_NOTE Promissory note
                    * SALES_SLIP Sales slip
                    * DIRECT_DEBIT_CONSENT Direct debit consent
                    * ENTIRE_LIST_OF_COMPLEMENTS Entire list of complements
                    * LOAN_COMMITMENT Loan commitment
                    * PURCHASE_CONTRACT Purchase contract
                    * AMORTIZATION_VERIFICATION Amortization verification
                    * VALUATION Valuation
                    * POWER_OF_ATTORNEY Power of attorney
                    * CO_OP_ANNUAL_REPORT Co-op annual report
                    * PROPERTY_DATA Property data
                    * CERTIFICATE_OF_EMPLOYER Certificate of employer
                    * PAYSLIP Payslip
                    * STATEMENT Statement
                    * KYC_DOCUMENT KYC-document
                    * WELCOME_PACKAGE welcome package
                    * TAX_YEARLY tax-yearly
                    * Others
                  enum:
                    - PROMISSORY_NOTE
                    - SALES_SLIP
                    - DIRECT_DEBIT_CONSENT
                    - ENTIRE_LIST_OF_COMPLEMENTS
                    - LOAN_COMMITMENT
                    - PURCHASE_CONTRACT
                    - AMORTIZATION_VERIFICATION
                    - VALUATION
                    - POWER_OF_ATTORNEY
                    - CO_OP_ANNUAL_REPORT
                    - PROPERTY_DATA
                    - CERTIFICATE_OF_EMPLOYER
                    - PAYSLIP
                    - STATEMENT
                    - KYC_DOCUMENT
                    - WELCOME_PACKAGE
                    - TAX_YEARLY
                    - OTHERS
                documentSignStatus:
                  type: string
                  description: |
                    * UNSIGNED Unsigned,default value.
                    * MANUAL_SIGNED  Manual signed.
                    * DIGITAL_SIGNED Digital signed.
                  default: UNSIGNED
                  enum:
                    - UNSIGNED
                    - MANUAL_SIGNED
                    - DIGITAL_SIGNED
                files:
                  type: array
                  items:
                    type: string
                    format: binary
              required:
                - documentType
                - files
            examples:
              'single File ':
                value:
                  documentType: PROMISSORY_NOTE
                  documentSignStatus: UNSIGNED
                  files:
                    - string
        required: true
        description: ''
      responses:
        '201':
          description: Documents created successfully
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    documentId:
                      type: string
                      description: Document Id
                    fileName:
                      type: string
                      description: File name
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      security:
        - Authorization: []
  /api/customer/v5/privateCustomers/me/fatcas:
    post:
      tags:
        - Deposit Customers-FATCA
      summary: Create FATCA info for deposit consumer customer
      description: Create FATCA info for deposit consumer customer
      operationId: 50637431-3230-40d4-a958-ce179dfcd63d
      parameters:
        - name: X-AUTH-TOKEN
          in: header
          description: Access token
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ForeignTaxationForPost'
        required: true
      responses:
        '201':
          description: Add FATCA information successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForeignTaxation'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
    get:
      tags:
        - Deposit Customers-FATCA
      summary: Get FATCA info for deposit consumer customer
      description: Get FATCA info for deposit consumer customer
      operationId: aefcac16-7f59-4e8c-9030-0b905a2bb675
      parameters:
        - name: X-AUTH-TOKEN
          in: header
          description: Access token
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Get Fatca informations, related current login token.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ForeignTaxation'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
  /api/customer/v5/privateCustomers/me/fatcas/{serialId}:
    put:
      tags:
        - Deposit Customers-FATCA
      summary: Update FATCA info for deposit consumer customer
      description: Update FATCA information for deposit consumer customer
      operationId: 331ec098-afe3-406a-bde8-a68217e96ea5
      parameters:
        - name: X-AUTH-TOKEN
          in: header
          description: Access token
          required: true
          schema:
            type: string
        - name: serialId
          in: path
          description: The id of FATCA.
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ForeignTaxationForUpdate'
        required: true
      responses:
        '200':
          description: Update FATCA information successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForeignTaxation'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
    delete:
      tags:
        - Deposit Customers-FATCA
      summary: Delete FATCA info for deposit consumer customer
      description: Delete FATCA info for deposit consumer customer
      operationId: e6fc4127-1276-475a-afa4-c6ea745003f1
      parameters:
        - name: X-AUTH-TOKEN
          in: header
          description: Access token
          required: true
          schema:
            type: string
        - name: serialId
          in: path
          description: The id of FATCA.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Delete FATCA information successfully.
          content:
            application/json:
              schema:
                type: string
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
  /api/customer/v5/privateCustomers/me/monthlySavingsReminders:
    post:
      tags:
        - Deposit Mandates
      summary: >-
        Close reminder of monthly savings for deposit consumer customer
        restricted by access token
      description: >-
        Close reminder of monthly savings for deposit consumer customer
        restricted by access token
      operationId: 6e3ed9dc-1529-44f1-924c-5aaacb745241
      parameters:
        - name: X-AUTH-TOKEN
          in: header
          description: Access token
          required: true
          schema:
            type: string
      responses:
        '200':
          description: >-
            Reminder of monthly savings was saved to be closed for the requested
            customer.
        '400':
          description: Wrong request to close reminder of monthly savings.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '401':
          description: Unauthorized.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '500':
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
    get:
      tags:
        - Deposit Mandates
      summary: >-
        Get reminder of monthly savings for deposit consumer customer restricted
        by access token
      description: >-
        Get reminder of monthly savings for deposit consumer customer restricted
        by access token
      operationId: c963acd1-1a80-4418-acb8-65451e76a480
      parameters:
        - name: X-AUTH-TOKEN
          in: header
          description: Access token
          required: true
          schema:
            type: string
      responses:
        '200':
          description: >-
            Get reminder of monthly savings for deposit consumer customer
            restricted by access token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MonthlySavingsReminder'
        '400':
          description: >-
            Wrong request to Get reminder of monthly savings for deposit
            consumer customer restricted by access token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '401':
          description: Unauthorized.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '500':
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
  /api/customer/v5/privateCustomers/me/pep:
    get:
      tags:
        - Deposit Customers
      summary: Get pep information for deposit consumer customer
      description: |-
        Get pep information for deposit consumer customer
        ## Changelog
        - v24.0.0 : 
            - Add fields `followUpAnswerAssets`, `followUpAnswerAssetsOtherValue`, `followUpAnswerValueOfAssets`, `followUpAnswerValueOfAssetsOtherValue`, `reAnswerPEPFollowUp` in the response supported.
      operationId: 7826cf4c-e6c4-42ad-871f-01734b6ca023
      parameters:
        - name: X-AUTH-TOKEN
          in: header
          description: Access token
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Get pep informations , related current login token.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/V1Pep'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
  /api/customer/v5/privateCustomers/me/predefinedExternalBankAccounts:
    post:
      tags:
        - Deposit Customers-Bank account
      summary: Create predefined external bank account for deposit consumer customer
      description: Create predefined external bank account for deposit consumer customer
      operationId: 53676532-6886-4118-bd0a-3669a7e0b824
      parameters:
        - name: X-AUTH-TOKEN
          in: header
          description: Access token
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomerExternalAccountForUpdateV5'
        required: true
      responses:
        '201':
          description: Create predefined external bank account successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerExternalAccountV5'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
    get:
      tags:
        - Deposit Customers-Bank account
      summary: Get predefined external bank accounts for deposit consumer customer
      description: Get predefined external bank accounts for deposit consumer customer
      operationId: 135c6112-e502-476a-8590-34829876fa35
      parameters:
        - name: X-AUTH-TOKEN
          in: header
          description: Access token
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Return predefined external bank accounts for consumer customer.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CustomerExternalAccountV5'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
  /api/customer/v5/privateCustomers/{customerId}/predefinedExternalBankAccounts:
    post:
      tags:
        - Deposit Customers-Bank account
      summary: >-
        Create predefined external bank account for deposit consumer customer 
        and with validation information
      description: >-
        ## General description

        Create predefined external bank account for deposit consumer customer
        and with validation information(validation date and state)

        ## Allowed VP token

        Security Token

        ## Allowed roles

        Trusted Party

        ## Changelog
          - v28.0.0 : API added.
      operationId: createCustomerExternalAccountWithValidationInfoForUpdate
      parameters:
        - name: customerId
          in: path
          description: The id of consumer customer.
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/CustomerExternalAccountWithValidationInfoForUpdate
        required: true
      responses:
        '201':
          description: Create predefined external bank account successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerExternalAccountV5'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
  /api/customer/v5/privateCustomers/me/predefinedExternalBankAccounts/accountsFromExternalProvider:
    get:
      tags:
        - Deposit Customers-Bank account
      summary: >-
        Get external accounts from external provider for deposit consumer
        customer restricted by access token.
      description: >
        ## General description

        Get external accounts from external provider for deposit consumer
        customer restricted by access token.

        ## Changelog

        - v16.0.0 : API added.
      operationId: getAccountsFromExternalProvider
      security:
        - X-AUTH-TOKEN: []
        - Authorization: []
      parameters:
        - name: authorizationId
          in: query
          description: Customer authorization id in external provider
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Customer external accounts from external provider
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ExternalAccountFromExternalProvider'
        '400':
          description: Parameter invalid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '401':
          description: Unauthorized.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '403':
          description: Prohibiting block.Please check the error message.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
  /api/customer/v5/privateCustomers/me/predefinedExternalBankAccounts/updateApprovalProcesses/signUrl:
    post:
      tags:
        - Deposit Customers-Bank account
      summary: >-
        Update external account with signature for deposit consumer customer
        (DEPOSIT ONLY)
      description: |
        ## Allowed VP token
        Access Token
        ## Allowed roles
        My Pages
        ## Changelog
        - v14.0.0 : API added.
      operationId: startExternalAccountUpdateProcessWithSignUrl
      parameters:
        - name: X-AUTH-TOKEN
          in: header
          description: Access token
          required: true
          schema:
            type: string
        - name: Accept-Language
          in: header
          description: The locale to be used on signature page
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/PredefinedExternalAccountUpdateAPI'
        required: true
      responses:
        '200':
          description: >-
            The URL to be signed is prepared successfully and is included in the
            body of the response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SignTextMessageResult'
        '400':
          description: Wrong request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '401':
          description: Unauthorized.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '500':
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
  /api/customer/v5/privateCustomers/me/predefinedExternalBankAccounts/updateApprovalProcesses/{requestId}:
    get:
      tags:
        - Deposit Customers-Bank account
      summary: >-
        Check status of external account update approval process for deposit
        consumer customer (DEPOSIT ONLY)
      description: |
        ## Allowed VP token
        Access Token
        ## Allowed roles
        My Pages
        ## Changelog
        - v14.0.0 : API added.
      operationId: checkStatusOfExternalAccountUpdateProcessWithSignUrl
      parameters:
        - name: X-AUTH-TOKEN
          in: header
          description: Access token
          required: true
          schema:
            type: string
        - name: requestId
          in: path
          description: The id of signature request
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Status of external account update approval process.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SignTextMessageStatusResult'
        '400':
          description: Wrong request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '401':
          description: Unauthorized.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '500':
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
  /api/customer/v5/privateCustomers/me/predefinedExternalBankAccounts/updateUsingExternalProvider:
    post:
      tags:
        - Deposit Customers-Bank account
      summary: >-
        Update predefined external bank accounts for deposit consumer customer
        using accounts external provider.
      description: >
        ## General description

        Update predefined external bank accounts for deposit consumer customer
        using accounts external provider.

        ## Changelog

        - v16.0.0 : API added
      operationId: updatePredefinedExternalBankAccountsUsingExternalProvider
      security:
        - X-AUTH-TOKEN: []
        - Authorization: []
      requestBody:
        description: Predefined external bank accounts to update
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: >-
                  #/components/schemas/ExternalAccountFromExternalProviderCreateAPI
        required: true
      responses:
        '204':
          description: Customer predefined external accounts updated successfully
        '400':
          description: Parameter invalid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '401':
          description: Unauthorized.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '403':
          description: Prohibiting block.Please check the error message.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
  /api/customer/v5/privateCustomers/me/predefinedExternalBankAccounts/{serialId}:
    delete:
      tags:
        - Deposit Customers-Bank account
      summary: Delete predefined external bank account for deposit consumer customer
      description: Delete predefined external bank account for deposit consumer customer
      operationId: 0b287e5c-b32d-48de-8ee7-f0b5f6eefe6d
      parameters:
        - name: X-AUTH-TOKEN
          in: header
          description: Access token
          required: true
          schema:
            type: string
        - name: serialId
          in: path
          description: The id of predefined external bank account.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Delete predefined external bank account successfully.
          content:
            application/json:
              schema:
                type: string
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
  /api/customer/v5/privateCustomers/me/todaysNumberOfAccountApplications:
    get:
      tags:
        - Deposit Customers
      summary: >-
        Get number of deposit account applications submitted today for consumer
        customer
      description: |
        ## Allowed VP token
        Access Token,Security Token
        ## Allowed roles
        Trusted Party, AISP
      operationId: 37e64e58-97ae-4f68-a26c-1b9ee5c39434
      responses:
        '200':
          description: >-
            Get number of deposit account applications submitted today for
            consumer custome
          content:
            application/json:
              schema:
                type: number
        '400':
          description: >-
            Wrong request to get number of account applications submitted today
            for consumer customer.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '401':
          description: Unauthorized.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '500':
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
  /api/customer/v5/privateCustomers/me/underages:
    get:
      tags:
        - Deposit Customers
      summary: Get deposit underage customers restricted by access token
      description: >-
        ## General description

        Get deposit underage customers restricted by access token (DEPOSIT ONLY)

        ## Changelog

        - v31.0.0 :
            - Add a field `noPromotionalMessages` in the response.
            - field `noSpam` is deprecated in the response.
        - v30.0.0 : Add a field `withdrawalFeeInPercentageByAccruedInterest` in
        the response.

        - v26.0.0 : Remove fields `delayedWithdrawalsEnabled`,
        `delayedWithdrawalsYear`, `delayedWithdrawalsDay` in the response

        - v23.0.0 :
            - Add an field `accountList.product.permitFreeWithdrawalFromInterestBalance` in the response.
            - Add an field `accountList.currentInterestBalance` in the response.
        - v22.0.0 :
          - Add field `address` in the response
        - v21.0.0 : Add new field `customerBasicInfo.preferredName` in response
        body.

        - v18.0.0 : New fields
        `accountList.product.directWithdrawToExternalAccount` in response.

        - v15.0.0: New fields
        `accountList.product.deltaInterestRate`,`accountList.kycAnswered` in
        response.

        - v14.0.0 : New fields
        `accountList.product.trustAccount`,`accountList.product.taxExempt` in
        response.
      operationId: 099bf7cb-b70a-4922-84f0-98a9f3e47e06
      parameters: []
      security:
        - X-AUTH-TOKEN: []
        - Authorization: []
      responses:
        '200':
          description: Get underage customer informations
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UnderageInformationV5'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
  /api/customer/v5/privateCustomers/search:
    post:
      tags:
        - Deposit Customers
      summary: Search customer by different criteria
      description: >
        ## General description

        Get personal information batch list for deposit consumer customer by
        request ssn list and details level

        ## Allowed tokens

        Security Token

        ## Allowed roles

        Trusted Party, Deposit Integrator Core

        ## Changelog

        - v31.0.0 :
            - Add a field `customerBasicInfo.noPromotionalMessages` in the response.
            - field `customerBasicInfo.noSpam` is deprecated in the response.
        - v24.0.0 :
            - Add fields `followUpAnswerAssets`, `followUpAnswerAssetsOtherValue`, `followUpAnswerValueOfAssets`, `followUpAnswerValueOfAssetsOtherValue` in the request and response supported.
            - Add fields `reAnswerPEPFollowUp` in the response supported.
        - v21.0.0 : Add new field `customerBasicInfo.preferredName` in response
        body.

        - v15.0.0 : New field `data.accountList.product.deltaInterestRate` in
        response.
      operationId: post-api-customer-v5-privateCustomers-search
      parameters: []
      responses:
        '200':
          description: >-
            Get personal information and direct debit mandate list for deposit
            consumer customer by ssn list and details level
          content:
            application/json:
              schema:
                x-examples:
                  example-1:
                    data:
                      - ssn: '193504049135'
                        givenName: Jack
                        surname: White
                        middleName: Ola
                        preferredName: Ola
                        serialId: '23423'
                        accountList:
                          - serialId: 111
                            status: Active
                            accountNumber: '232423'
                            balance: 50000
                          - serialId: 112
                            status: Active
                            accountNumber: '232424'
                            balance: 50000
                        mandate:
                          serialId: 1232
                          status: Active
                      - ssn: '196504042224'
                        givenName: Mike
                        surname: White
                        middleName: Ola
                        preferredName: Ola
                        serialId: '23426'
                        accountList:
                          - serialId: 113
                            status: Active
                            accountNumber: '232425'
                            balance: 50000
                          - serialId: 114
                            status: Active
                            accountNumber: '232426'
                            balance: 50000
                        mandate: null
                      - ssn: '197309069289'
                        givenName: Robel
                        surname: White
                        middleName: Ola
                        serialId: null
                        accountList: null
                        mandate: null
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/PrivateCustomerInformation'
              examples:
                example-with-full-level:
                  value:
                    data:
                      - customerBasicInfo:
                          customerSerialId: '149952'
                          givenName: Filip
                          surname: Walldén
                          middleName: Ola
                          preferredName: Ola
                          ssn: '3504049135'
                          century: '19'
                          email: null
                          phone: null
                          mobilePhone: '+462181716'
                          noSpam: false
                          noPromotionalMessages: false
                          totalEngagement: 35258
                          preferredContactChannel: SMS
                          taxExempt: false
                          prohibiting: false
                          prohibitingText: null
                          hasNotConfiguredDepositDirectDebit: false
                          isForeignTaxationUpdatedAfterCRSReleaseDate: true
                        address:
                          streetAddress: Danderydsgatan 2
                          zipCode: '18260'
                          city: Djursholm
                          country: SE
                          coAddress: Uthyrarea, B
                          propertyNumber: null
                          apartmentNumber: null
                          buildingName: null
                          floorNumber: null
                          complementingInformation: null
                        pep:
                          externalPepMatch: false
                          selfAssessedPEP: PEP
                          followUpAnswerAssets:
                            - PROPERTY_CONDOMINIUM
                            - STOCKS_SECURITIES
                            - SAVINGS_FROM_MONTHLY_INCOME
                            - OTHER
                          followUpAnswerAssetsOtherValue: I am free-text
                          followUpAnswerValueOfAssets: OTHER
                          followUpAnswerValueOfAssetsOtherValue: more than 7999999
                          reAnswerPEPFollowUp: false
                          selfAssessedPepDescription: null
                          latestPEPRelatedActivityDate: null
                        predefinedExternalBankAccountList:
                          - serialId: '103601'
                            validationState: NEW
                            validationDate: ''
                            type: SE_BANK_ACCOUNT
                            identifiers:
                              clearingNumber: '1111'
                              accountNumber: '2222313'
                              bankName: ''
                            validByInternalVerification: false
                        fatcaList:
                          - foreignTaxationCountry: AF
                            tin: '12312312'
                            foreignTaxationConfirmedDate: '2022-10-15 20:15:54'
                            serialId: '35801'
                        accountList:
                          - serialId: '209803'
                            accountNumber: '2655561'
                            balance: 13901
                            accountState: PENDING
                            nickname: null
                            createDate: '2022-10-15 20:13:18'
                            activeDate: ''
                            closedDate: ''
                            accruedInterest: 0
                            interestBalance: 0
                            product:
                              serialId: '17802'
                              productId: null
                              productVersionId: null
                              name: easonanyfinxp
                              interestRate: 0.02
                              effectiveInterest: 0.02
                              description: '1212'
                              durationYear: null
                              durationDay: null
                              withdrawalFee: null
                              maxFreeWithdrawals: null
                              withdrawalFeeInPercentage: null
                              withdrawalFeeInPercentageByAccruedInterest: null
                              minimumWithdrawalFee: null
                              maxDepositAmount: null
                              minDepositAmount: null
                              created: 2022-10-15 20:00
                              settlementType: YEARLY
                              forCompany: false
                              reinvestEnabled: false
                              reinvestBonus: null
                              hasTermsAndConditions: false
                              reinvestAutomatically: false
                              onlyAllowedOneDeposit: false
                              allowAutogiro: false
                              floatingInterest: true
                              allowTransferOrClosure: false
                              noticePeriodEnabled: false
                              noticePeriodYears: null
                              noticePeriodDays: null
                              interestRateForNoticePeriod: null
                              delayedWithdrawalsEnabled: false
                              capWithdrawalFeeToAccruedInterest: false
                              delayedWithdrawalsYear: null
                              delayedWithdrawalsDay: null
                              interestRateLadder: null
                            prohibiting: false
                            prohibitingReason: null
                            willbeReinvested: false
                            createdByReinvest: false
                            noticePeriodEndDate: ''
                            withdrawalFeeNeeded: false
                            capWithdrawalFeeToAccruedInterest: false
                            firstDepositTransferred: false
                            maxWithdrawalAmount: 13901
                            interestRateLadderRange: '0.0200'
                          - serialId: '209804'
                            accountNumber: '2655579'
                            balance: 21357
                            accountState: PENDING
                            nickname: null
                            createDate: '2022-10-15 20:15:24'
                            activeDate: ''
                            closedDate: ''
                            accruedInterest: 0
                            interestBalance: 0
                            product:
                              serialId: '17802'
                              productId: null
                              productVersionId: null
                              name: easonanyfinxp
                              interestRate: 0.02
                              effectiveInterest: 0.02
                              description: '1212'
                              durationYear: null
                              durationDay: null
                              withdrawalFee: null
                              maxFreeWithdrawals: null
                              withdrawalFeeInPercentage: null
                              withdrawalFeeInPercentageByAccruedInterest: null
                              minimumWithdrawalFee: null
                              maxDepositAmount: null
                              minDepositAmount: null
                              created: 2022-10-15 20:00
                              settlementType: YEARLY
                              forCompany: false
                              reinvestEnabled: false
                              reinvestBonus: null
                              hasTermsAndConditions: false
                              reinvestAutomatically: false
                              onlyAllowedOneDeposit: false
                              allowAutogiro: false
                              floatingInterest: true
                              allowTransferOrClosure: false
                              noticePeriodEnabled: false
                              noticePeriodYears: null
                              noticePeriodDays: null
                              interestRateForNoticePeriod: null
                              delayedWithdrawalsEnabled: false
                              capWithdrawalFeeToAccruedInterest: false
                              delayedWithdrawalsYear: null
                              delayedWithdrawalsDay: null
                              interestRateLadder: null
                            prohibiting: false
                            prohibitingReason: null
                            willbeReinvested: false
                            createdByReinvest: false
                            noticePeriodEndDate: ''
                            withdrawalFeeNeeded: false
                            capWithdrawalFeeToAccruedInterest: false
                            firstDepositTransferred: false
                            maxWithdrawalAmount: 21357
                            interestRateLadderRange: '0.0200'
                        mandate:
                          mandateSerialId: 63482cb7a39583711bf7586e
                          status: PENDING
                          createDate: '2022-10-13T23:20:23.78+08:00'
                          active: true
                        secureMessageList:
                          - serialId: '110001'
                            sendTime: '2022-10-13 23:41:09'
                            accountNumber: null
                            messageSubject: Meddelande om överskridande av maxgräns
                            messageBodyInHtml: ANONYMIZED_TEXT
                            messageBodyInAscii: ANONYMIZED_TEXT
                            readTime: ''
                            hasRead: false
                            needNotReply: false
                            sender: Kundtjänst
                            numberOfReply: '0'
                            updateTime: '2022-10-13 23:41:09'
                            lastReplytext: ''
                            handled: true
                            conversation: false
                        underageInfoList:
                          - customerBasicInfo:
                              customerSerialId: '149951'
                              givenName: David
                              surname: Karlgren
                              middleName: Ola
                              preferredName: Ola
                              ssn: '1510101379'
                              century: '20'
                              email: null
                              phone: null
                              mobilePhone: '+462181781'
                              noSpam: false
                              noPromotionalMessages: false
                              totalEngagement: 142021
                              preferredContactChannel: SMS
                              taxExempt: false
                              prohibiting: false
                              prohibitingText: null
                              hasNotConfiguredDepositDirectDebit: false
                              isForeignTaxationUpdatedAfterCRSReleaseDate: false
                            secureMessageList:
                              - serialId: '110002'
                                sendTime: '2022-10-13 23:41:54'
                                accountNumber: null
                                messageSubject: Meddelande om överskridande av maxgräns
                                messageBodyInHtml: ANONYMIZED_TEXT
                                messageBodyInAscii: ANONYMIZED_TEXT
                                readTime: ''
                                hasRead: false
                                needNotReply: false
                                sender: Kundtjänst
                                numberOfReply: '0'
                                updateTime: '2022-10-13 23:41:54'
                                lastReplytext: ''
                                handled: true
                                conversation: false
                            predefinedExternalBankAccountList:
                              - serialId: '103602'
                                validationState: NEW
                                validationDate: ''
                                type: SE_BANK_ACCOUNT
                                identifiers:
                                  clearingNumber: '1346'
                                  accountNumber: '2222313'
                                  bankName: ''
                                validByInternalVerification: false
                            accountList:
                              - serialId: '209806'
                                accountNumber: '2655595'
                                balance: 30898
                                accountState: PENDING
                                nickname: null
                                createDate: '2022-10-15 20:29:18'
                                activeDate: ''
                                closedDate: ''
                                accruedInterest: 0
                                interestBalance: 0
                                product:
                                  serialId: '17802'
                                  productId: null
                                  productVersionId: null
                                  name: easonanyfinxp
                                  interestRate: 0.02
                                  effectiveInterest: 0.02
                                  description: '1212'
                                  durationYear: null
                                  durationDay: null
                                  withdrawalFee: null
                                  maxFreeWithdrawals: null
                                  withdrawalFeeInPercentage: null
                                  withdrawalFeeInPercentageByAccruedInterest: null
                                  minimumWithdrawalFee: null
                                  maxDepositAmount: null
                                  minDepositAmount: null
                                  created: 2022-10-15 20:00
                                  settlementType: YEARLY
                                  forCompany: false
                                  reinvestEnabled: false
                                  reinvestBonus: null
                                  hasTermsAndConditions: false
                                  reinvestAutomatically: false
                                  onlyAllowedOneDeposit: false
                                  allowAutogiro: false
                                  floatingInterest: true
                                  allowTransferOrClosure: false
                                  noticePeriodEnabled: false
                                  noticePeriodYears: null
                                  noticePeriodDays: null
                                  interestRateForNoticePeriod: null
                                  delayedWithdrawalsEnabled: false
                                  capWithdrawalFeeToAccruedInterest: false
                                  delayedWithdrawalsYear: null
                                  delayedWithdrawalsDay: null
                                  interestRateLadder: null
                                prohibiting: false
                                prohibitingReason: null
                                willbeReinvested: false
                                createdByReinvest: false
                                noticePeriodEndDate: ''
                                withdrawalFeeNeeded: false
                                capWithdrawalFeeToAccruedInterest: false
                                firstDepositTransferred: false
                                maxWithdrawalAmount: 30898
                                interestRateLadderRange: '0.0200'
                              - serialId: '209701'
                                accountNumber: '2655512'
                                balance: 111123
                                accountState: PENDING
                                nickname: null
                                createDate: '2022-10-13 18:20:24'
                                activeDate: ''
                                closedDate: ''
                                accruedInterest: 0
                                interestBalance: 0
                                product:
                                  serialId: '14501'
                                  productId: null
                                  productVersionId: null
                                  name: Penser Spar 3 mån
                                  interestRate: 0.0085
                                  effectiveInterest: 0.0085
                                  description: 3 mån
                                  durationYear: 0
                                  durationDay: 90
                                  withdrawalFee: null
                                  maxFreeWithdrawals: null
                                  withdrawalFeeInPercentage: 0.03
                                  withdrawalFeeInPercentageByAccruedInterest: null
                                  minimumWithdrawalFee: 0
                                  maxDepositAmount: 1050000
                                  minDepositAmount: 25000
                                  created: 2022-01-20 20:26
                                  settlementType: END_OF_DURATION
                                  forCompany: false
                                  reinvestEnabled: true
                                  reinvestBonus: 0
                                  hasTermsAndConditions: false
                                  reinvestAutomatically: false
                                  onlyAllowedOneDeposit: true
                                  allowAutogiro: false
                                  floatingInterest: false
                                  allowTransferOrClosure: false
                                  noticePeriodEnabled: true
                                  noticePeriodYears: 0
                                  noticePeriodDays: 20
                                  interestRateForNoticePeriod: 0
                                  delayedWithdrawalsEnabled: false
                                  capWithdrawalFeeToAccruedInterest: true
                                  delayedWithdrawalsYear: null
                                  delayedWithdrawalsDay: null
                                  interestRateLadder: null
                                prohibiting: false
                                prohibitingReason: null
                                willbeReinvested: false
                                createdByReinvest: false
                                noticePeriodEndDate: ''
                                withdrawalFeeNeeded: false
                                capWithdrawalFeeToAccruedInterest: false
                                firstDepositTransferred: false
                                maxWithdrawalAmount: 111123
                                interestRateLadderRange: '0.0085'
                          - customerBasicInfo:
                              customerSerialId: '149954'
                              givenName: Ture Test
                              surname: Test
                              middleName: Ola
                              preferredName: Ola
                              ssn: '1510104167'
                              century: '20'
                              email: null
                              phone: null
                              mobilePhone: '+462191817'
                              noSpam: false
                              noPromotionalMessages: false
                              totalEngagement: 11111
                              preferredContactChannel: SMS
                              taxExempt: false
                              prohibiting: false
                              prohibitingText: null
                              hasNotConfiguredDepositDirectDebit: false
                              isForeignTaxationUpdatedAfterCRSReleaseDate: false
                            secureMessageList: []
                            predefinedExternalBankAccountList:
                              - serialId: '103651'
                                validationState: NEW
                                validationDate: ''
                                type: SE_BANK_ACCOUNT
                                identifiers:
                                  clearingNumber: '1111'
                                  accountNumber: '0012311'
                                  bankName: ''
                                validByInternalVerification: false
                            accountList:
                              - serialId: '209702'
                                accountNumber: '2655520'
                                balance: 11111
                                accountState: PENDING
                                nickname: null
                                createDate: '2022-10-13 18:23:37'
                                activeDate: ''
                                closedDate: ''
                                accruedInterest: 0
                                interestBalance: 0
                                product:
                                  serialId: '14501'
                                  productId: null
                                  productVersionId: null
                                  name: Penser Spar 3 mån
                                  interestRate: 0.0085
                                  effectiveInterest: 0.0085
                                  description: 3 mån
                                  durationYear: 0
                                  durationDay: 90
                                  withdrawalFee: null
                                  maxFreeWithdrawals: null
                                  withdrawalFeeInPercentage: 0.03
                                  withdrawalFeeInPercentageByAccruedInterest: null
                                  minimumWithdrawalFee: 0
                                  maxDepositAmount: 1050000
                                  minDepositAmount: 25000
                                  created: 2022-01-20 20:26
                                  settlementType: END_OF_DURATION
                                  forCompany: false
                                  reinvestEnabled: true
                                  reinvestBonus: 0
                                  hasTermsAndConditions: false
                                  reinvestAutomatically: false
                                  onlyAllowedOneDeposit: true
                                  allowAutogiro: false
                                  floatingInterest: false
                                  allowTransferOrClosure: false
                                  noticePeriodEnabled: true
                                  noticePeriodYears: 0
                                  noticePeriodDays: 20
                                  interestRateForNoticePeriod: 0
                                  delayedWithdrawalsEnabled: false
                                  capWithdrawalFeeToAccruedInterest: true
                                  delayedWithdrawalsYear: null
                                  delayedWithdrawalsDay: null
                                  interestRateLadder: null
                                prohibiting: false
                                prohibitingReason: null
                                willbeReinvested: false
                                createdByReinvest: false
                                noticePeriodEndDate: ''
                                withdrawalFeeNeeded: false
                                capWithdrawalFeeToAccruedInterest: false
                                firstDepositTransferred: false
                                maxWithdrawalAmount: 11111
                                interestRateLadderRange: '0.0085'
                        withdrawalAccountChangesInCurrentCalendarYear: 0
                      - customerBasicInfo:
                          customerSerialId: null
                          givenName: null
                          surname: null
                          middleName: Ola
                          preferredName: Ola
                          ssn: '6504042224'
                          century: '19'
                          email: null
                          phone: null
                          mobilePhone: null
                          noSpam: false
                          noPromotionalMessages: false
                          totalEngagement: null
                          preferredContactChannel: null
                          taxExempt: false
                          prohibiting: false
                          prohibitingText: null
                          hasNotConfiguredDepositDirectDebit: false
                          isForeignTaxationUpdatedAfterCRSReleaseDate: false
                        address: null
                        pep: null
                        predefinedExternalBankAccountList: null
                        fatcaList: null
                        accountList: null
                        mandate: null
                        secureMessageList: null
                        underageInfoList: null
                        withdrawalAccountChangesInCurrentCalendarYear: null
                example-with-basic-level:
                  value:
                    data:
                      - customerBasicInfo:
                          customerSerialId: '149952'
                          givenName: Filip
                          surname: Walldén
                          middleName: Ola
                          preferredName: Ola
                          ssn: '3504049135'
                          century: '19'
                        accountList:
                          - serialId: '209803'
                            accountNumber: '2655561'
                            balance: 13901
                            accountState: PENDING
                          - serialId: '209804'
                            accountNumber: '2655579'
                            balance: 21357
                            accountState: PENDING
                        mandate:
                          mandateSerialId: 63482cb7a39583711bf7586e
                          status: PENDING
                      - customerBasicInfo:
                          customerSerialId: '149951'
                          givenName: David
                          surname: Karlgren
                          middleName: null
                          ssn: '1510101379'
                          century: '20'
                        accountList:
                          - serialId: '209701'
                            accountNumber: '2655512'
                            balance: 111123
                            accountState: PENDING
                          - serialId: '209806'
                            accountNumber: '2655595'
                            balance: 30898
                            accountState: PENDING
                        mandate: null
                      - customerBasicInfo:
                          customerSerialId: null
                          givenName: null
                          surname: null
                          middleName: null
                          ssn: '6504042224'
                          century: '19'
                        accountList: []
                        mandate: null
        '400':
          description: Wrong request to Get mandate list for deposit consumer customer
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '401':
          description: Unauthorized.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '403':
          description: Prohibiting block.Please check the error message.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '500':
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              x-examples:
                example-1:
                  ssnList:
                    - '193504049135'
                    - '196504042224'
                    - '197309069289'
              properties:
                ssnList:
                  type: array
                  items:
                    type: string
                detailsLevel:
                  type: string
                  enum:
                    - FULL
                    - BASIC
              required:
                - ssnList
            examples:
              example-1:
                value:
                  ssnList:
                    - '193504049135'
                    - '195003072260'
                  detailsLevel: FULL
        description: ''
  /api/customer/v5/privateCustomers/{customerId}/directDebitMandate:
    post:
      tags:
        - Deposit Mandates
      summary: >-
        Create direct debit mandate for deposit consumer customer without
        consent signature
      description: |-
        ## General description
        Create direct debit mandate directly, without consent signature
        ## Allowed tokens
        Security Token
        ## Allowed roles
        Deposit Integrator Core, Trusted Party
        ## Changelog
        - v22.0.0 : Add field `bankName` in the mandate response
      operationId: ecf574ff-9bbd-4767-817d-84e6fc9f2531
      parameters:
        - name: customerId
          in: path
          description: The id of consumer customer.
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomerExternalAccountForUpdateV5'
        required: true
      responses:
        '201':
          description: create driect debit mandate created successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Mandate'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '403':
          description: Prohibiting block. Please check the error message.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      security:
        - Authorization: []
  /api/customer/v5/smeCategories:
    get:
      summary: Get SME categories by query parameters
      tags:
        - Loan Customers
      operationId: get-api-customer-v5-smeCategories
      description: >
        ## General description

        Get SME categories by query parameters, now support two parameters: key
        and productId.

        Return all SME categories if not pass any query parameters.

        ## Allowed VP token

        Security Token

        ## Allowed roles

        Trusted Party
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SMECategoryResponse'
              examples:
                example:
                  value:
                    - id: 61bae0ee082abb00a460d46c
                      key: NO_CATEGORY
                      name:
                        en: No category
                        sv: Ingen kategori
                      products:
                        - productName1
                        - productName2
                      description: The default legal entity category,
                      active: true
          description: >-
            Return a group of SME categories by query parameters, you receive an
            object with empty Array of SMECategory if nothing found.
        '400':
          $ref: '#/components/responses/Common-BadRequest-Response'
        '401':
          $ref: '#/components/responses/Common-Unauthorized-Response'
        '403':
          $ref: '#/components/responses/Common-Forbidden-Response'
        '500':
          $ref: '#/components/responses/Common-ServerError-Response'
      parameters:
        - schema:
            type: string
          in: query
          name: key
          description: The category key of the SME category
        - schema:
            type: string
          in: query
          name: productId
          description: The id deposit product
  /api/customer/v5/smeCategories/{id}:
    get:
      summary: Get SME legal entity categories by id
      tags:
        - Loan Customers
      responses:
        '200':
          description: Return SME category by id.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SMECategoryResponse'
              examples:
                example:
                  value:
                    id: 61bae0ee082abb00a460d46c
                    key: NO_CATEGORY
                    name:
                      en: No category
                      sv: Ingen kategori
                    products:
                      - productName1
                      - productName2
                    description: The default legal entity category,
                    active: true
        '400':
          $ref: '#/components/responses/Common-BadRequest-Response'
        '401':
          $ref: '#/components/responses/Common-Unauthorized-Response'
        '403':
          $ref: '#/components/responses/Common-Forbidden-Response'
        '404':
          description: Product Not Found
        '500':
          description: Internal Server Error
      operationId: get-api-customer-v5-smeCategories-id
      description: |
        ## General description
        Get SME legal entity categories by id
        ## Allowed VP token
        Security Token
        ## Allowed roles
        Trusted Party
  /api/customer/v5/smes:
    post:
      tags:
        - Loan Customers
        - Deposit Customers
      summary: Create SME Customer (LOAN & DEPOSIT)
      description: |
        ## General description
        Create SME Customer without any evaluation.
        ## Allowed VP token
        Security Token
        ## Allowed roles
        ### For deposit : Trusted Party, Deposit Integrator Core
        ### For loan : Trusted Party
        ## Additional information
        ### For deposit
         - organizationCountryCode, externalReference, VAT, VATId, LEI, parentCompanyOrgNumber, parentCompanyCountryCode, riskClassComment, businessTypeCode, businessTypeDescription, taxClassification are not supported.
         - Supported values of riskClass : LOW, MEDIUM, HIGH.
         - The format of the createDate/updateDate is "2021-03-01T14:00:10.35+08:00"
        ### For loan
         - predefinedExternalBankAccount, category is not supported.
         - Supported values of riskClass : LOW, NORMAL, HIGH.
         - The format of the createDate/updateDate is "2021-03-01 14:00:10"
        ## Upgrading guide
        ### For deposit
          - please keep use the current version.
        ### For loan, to upgrade to /api/customer/v6/smes
          - The field officialAddress.manuallyMaintained is not supported any more in the request & response body.
          - The format of fields createDate, updateDate are changed from "2021-03-01 14:00:10" to "2021-03-01T14:00:10.35+08:00".
          - More fields supported for officialAddress in /api/customer/v6/smes.
      operationId: 3b15159c-bc6f-4da6-902c-62d30acc6695
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BusinessCustomer'
        required: true
      responses:
        '201':
          description: Return created SME customer.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BusinessCustomerResponse'
        '400':
          description: Bad request to create SME customer.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '401':
          description: >-
            Unauthorized, currently this API doesn't support to response json
            when meet such code.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '403':
          description: Access denied, please check the error message
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '409':
          description: >-
            The organizational number already exists, return existed SME
            customer.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BusinessCustomerResponse'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      security:
        - Authorization: []
    get:
      tags:
        - Loan Customers
      summary: Search SME customer by different criteria
      description: |
        ## General description
        Get SME Customers by different query criteria
        ## Allowed VP token
        Security Token
        ## Allowed roles
        Trusted Party, Deposit Integrator Core
      operationId: e8d92377-4efa-47b6-8ec8-b052838b5bb6
      parameters:
        - name: organizationNumber
          in: query
          description: >-
            The organizationNumber of the SME customer, it is mandatory until we
            support the paging in the response.
          required: true
          schema:
            type: string
          example: 556744-7056
      responses:
        '200':
          description: >-
            Return a group of SME customers detail information, you receive an
            object with empty Array of smeCusomters if nothing found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BusinessCustomerAPIListResponse'
        '400':
          description: Bad request to get SME customer.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '401':
          description: >-
            Unauthorized, currently this API doesn't support to response json
            when meet such code.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '403':
          description: Access denied, please check the error message
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      security:
        - Authorization: []
  /api/customer/v5/smes/{smeId}/accountsWithCouponsAndHolders:
    get:
      tags:
        - Deposit Customers
      summary: >-
        Get deposit accounts include coupons and holders info for deposit SME
        customer
      description: >-
        ## Allowed VP token

        Access Token,Security Token

        ## Allowed roles

        Trusted Party, My Pages, AISP

        ## Changelog

        - v30.0.0 : Add a field `withdrawalFeeInPercentageByAccruedInterest` in
        the response.

        - v26.0.0 : Remove fields `delayedWithdrawalsEnabled`,
        `delayedWithdrawalsYear`, `delayedWithdrawalsDay` in the response

        - v23.0.0 :
            - Add an field `account.product.permitFreeWithdrawalFromInterestBalance` in the response.
            - Add an field `account.currentInterestBalance` in the response.
        - v18.0.0 : New fields `product.directWithdrawToExternalAccount` in
        response.

        - v15.0.0 : New fields `product.deltaInterestRate`,`kycAnswered` in
        response.

        - v14.0.0 : New fields `product.trustAccount`,`product.taxExempt` in
        response.
      operationId: 112201e8-a9c4-4784-bc94-59de0de55b58
      parameters:
        - name: smeId
          in: path
          description: The SME id what you want to query.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: >-
            Get deposit accounts with coupons data and holders information for
            SME.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AccountWithCouponAndHoldersForSME'
        '400':
          description: Wrong request to get deposit accounts with coupons and holders.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '401':
          description: Unauthorized.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '500':
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
  /api/customer/v5/smes/{smeId}/basicInformation:
    get:
      tags:
        - Deposit Customers
      summary: Get basic information for deposit SME customer
      description: |
        ## Allowed VP token
        Access Token,Security Token
        ## Allowed roles
        Trusted Party, My Pages, Deposit Integrator Core
      operationId: 71ebab7a-052d-49f5-8b53-630ee7322210
      responses:
        '200':
          description: Return predefined external bank account for SME.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/V4SmeRepresentativeBasicInformation'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
  /api/customer/v5/smes/{smeId}/depositAccounts:
    get:
      tags:
        - Deposit Accounts
      summary: Get deposit accounts for SME customer
      description: >-
        ## General description

        Get deposit accounts for SME customer

        ## Allowed VP token

        Access Token,Security Token

        ## Allowed roles

        Trusted Party, My Pages, AISP

        ## Changelog

        - v30.0.0 : Add a field `withdrawalFeeInPercentageByAccruedInterest` in
        the response.

        - v26.0.0 : Remove fields `delayedWithdrawalsEnabled`,
        `delayedWithdrawalsYear`, `delayedWithdrawalsDay` in the response

        - v23.0.0 :
            - Add an field `product.permitFreeWithdrawalFromInterestBalance` in the response.
            - Add an field `currentInterestBalance` in the response.
        - v18.0.0 : New fields `product.directWithdrawToExternalAccount` in
        response.

        - v15.0.0 : New fields `product.deltaInterestRate`,`kycAnswered` in
        response.

        - v14.0.0 : New fields `product.trustAccount`,`product.taxExempt` in
        response.
      operationId: df9d88de-4500-448f-b90d-de0f6d79f7ff
      responses:
        '200':
          description: Get the all deposit accounts list.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/V1Account'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
  /api/customer/v5/smes/{smeId}/documents:
    post:
      tags:
        - Deposit Customers-Document
      summary: Create documents for deposit SME customer
      description: |
        ## General description
        Create  documents for a specific SME customer.
        ## Allowed VP token
        Security Token
        ## Allowed roles
        Trusted Party, Deposit Integrator Core
      operationId: dac17acc-547e-4a66-9eba-a8db6ed9cadf
      parameters:
        - name: smeId
          in: path
          description: The SME id what you want to upload documents for.
          required: true
          schema:
            type: string
      requestBody:
        content:
          multipart/form-data:
            schema:
              required:
                - documentType
                - files
              type: object
              properties:
                documentType:
                  type: string
                  description: |
                    * DIRECT_DEBIT_CONSENT Direct debit consent
                    * KYC_DOCUMENT KYC-document
                    * TAX_YEARLY tax-yearly
                    * Others
                  enum:
                    - DIRECT_DEBIT_CONSENT
                    - KYC_DOCUMENT
                    - TAX_YEARLY
                    - OTHERS
                documentSignStatus:
                  type: string
                  description: |
                    * UNSIGNED Unsigned,default value.
                    * MANUAL_SIGNED  Manual signed.
                    * DIGITAL_SIGNED Digital signed.
                  default: UNSIGNED
                  enum:
                    - UNSIGNED
                    - MANUAL_SIGNED
                    - DIGITAL_SIGNED
                files:
                  type: array
                  items:
                    type: string
                    format: binary
                note:
                  type: string
                  description: Description of documents
                tags:
                  type: string
                  description: |
                    User defined tags
                    * {"any key": "any value", "any key": "any value", ...}
        required: true
      responses:
        '200':
          description: Documents uploaded successfully
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    fileName:
                      type: string
                      description: File name
                    documentId:
                      type: string
                      description: Document Id
        '400':
          description: >-
            Bad request. The parameters in the URL or request body are invalid.
            Please refer to the error message for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '401':
          description: >-
            Unauthorized. The token is invalid/expired or the SSN does not exist
            in the VP. Please refer to the error message for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '403':
          description: >-
            Forbidden. No access rights or access frequency too fast. Please
            refer to the error message for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '500':
          description: >-
            Internal server error. Please refer to the error message for
            details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      security:
        - Authorization: []
  /api/customer/v5/smes/{smeId}/documents/{documentId}:
    delete:
      tags:
        - Deposit Customers-Document
      summary: Delete document for deposit SME customer
      description: |
        ## General description
        Delete document for a specific SME customer.
        ## Allowed VP token
        Security Token
        ## Allowed roles
        Trusted Party, Deposit Integrator Core
      operationId: f19e83fe-94aa-4e05-bb69-bbada596b3c4
      parameters:
        - name: smeId
          in: path
          description: The SME id which the document belongs to.
          required: true
          schema:
            type: string
        - name: documentId
          in: path
          description: The document id what you want to delete.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Document successfully deleted.
          content:
            application/json:
              schema:
                type: object
                properties:
                  fileName:
                    type: string
                    description: File name
        '400':
          description: >-
            Bad request. The parameters in the URL or request body are invalid.
            Please refer to the error message for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '401':
          description: >-
            Unauthorized. The token is invalid/expired or the SSN does not exist
            in the VP. Please refer to the error message for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '403':
          description: >-
            Forbidden. No access rights or access frequency too fast. Please
            refer to the error message for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '500':
          description: >-
            Internal server error. Please refer to the error message for
            details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      security:
        - Authorization: []
  /api/customer/v5/smes/{smeId}/documents/{documentId}/metadata:
    patch:
      tags:
        - Deposit Customers-Document
      summary: Update document metadata for deposit SME customer
      description: >
        ## General description

        Update document metadata for the document that belongs to a specific SME
        customer

        ## Allowed VP token

        Security Token

        ## Allowed roles

        Trusted Party, Deposit Integrator Core
      operationId: 32b3e39c-37c9-4617-8a93-31e651b2d90b
      parameters:
        - name: smeId
          in: path
          description: The ID of the SME customer.
          required: true
          schema:
            type: string
        - name: documentId
          in: path
          description: The ID of the document.
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                signStatus:
                  type: string
                  enum:
                    - SIGNED
                    - UNSIGNED
                signType:
                  type: string
                  enum:
                    - MANUAL
                    - DIGITAL
                note:
                  type: string
                  description: Description of documents
                tags:
                  type: object
                  additionalProperties:
                    type: string
                  description: |
                    User defined tags
                    * {"any key": "any value", "any key": "any value", ...}
        required: true
      responses:
        '200':
          description: Metadata successfully updated.
          content:
            application/json:
              schema:
                type: object
                properties:
                  fileName:
                    type: string
                    description: File name
                  documentId:
                    type: string
                    description: Document Id
        '400':
          description: >-
            Bad request. The parameters in the URL or request body are invalid.
            Please refer to the error message for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '401':
          description: >-
            Unauthorized. The token is invalid/expired or the SSN does not exist
            in the VP. Please refer to the error message for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '403':
          description: >-
            Forbidden. No access rights or access frequency too fast. Please
            refer to the error message for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '500':
          description: >-
            Internal server error. Please refer to the error message for
            details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      security:
        - Authorization: []
  /api/customer/v5/smes/{smeId}/fatca:
    get:
      tags:
        - Deposit Customers-FATCA
      summary: Get FATCA info for deposit SME customer
      description: |
        ## Allowed VP token
        Access Token,Security Token
        ## Allowed roles
        Trusted Party, My Pages, Deposit Integrator Core
      operationId: 046c861a-f72f-4af4-b7f7-9daccb457a7b
      responses:
        '200':
          description: Get Fatca informations , related current login token.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/V1ForeignTaxation'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
  /api/customer/v5/smes/{smeId}/owners:
    post:
      tags:
        - Deposit Customers-SME owner
      summary: Create owner for deposit SME customer
      description: |
        ## Allowed VP token
        Access Token,Security Token
        ## Allowed roles
        Trusted Party, My Pages, Deposit Integrator Core
      operationId: ebe33c15-b7f3-4ad1-972a-f9adb3939059
      parameters:
        - name: smeId
          in: path
          description: The SME id what you want to query.
          required: true
          schema:
            type: number
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LegalEntityOwner'
        required: true
      responses:
        '201':
          description: Return created legal entity owner for SME.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LegalEntityOwner'
        '400':
          description: Wrong request to get legal entity owner.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '401':
          description: Unauthorized.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
    get:
      tags:
        - Deposit Customers-SME owner
      summary: Get all owners for deposit SME customer
      description: |
        ## Allowed VP token
        Access Token,Security Token
        ## Allowed roles
        Trusted Party, My Pages, Deposit Integrator Core
      operationId: e036ffee-5254-4454-b1ac-f944d9dc035f
      parameters:
        - name: smeId
          in: path
          description: The SME id what you want to query.
          required: true
          schema:
            type: number
      responses:
        '200':
          description: Return legal entity owners for SME.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/LegalEntityOwner'
        '400':
          description: Wrong request to get legal entity owners.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '401':
          description: Unauthorized.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
  /api/customer/v5/smes/{smeId}/owners/{ownerId}:
    get:
      tags:
        - Deposit Customers-SME owner
      summary: Get owner for deposit SME customer
      description: |
        ## Allowed VP token
        Access Token,Security Token
        ## Allowed roles
        Trusted Party, My Pages, Deposit Integrator Core
      operationId: e098391d-23fc-4182-9b1b-4b32a0ccacd5
      parameters:
        - name: smeId
          in: path
          description: The SME id what you want to query.
          required: true
          schema:
            type: number
        - name: ownerId
          in: path
          description: The owner id to get.
          required: true
          schema:
            type: number
      responses:
        '200':
          description: Return legal entity owner.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LegalEntityOwner'
        '400':
          description: Wrong request to update legal entity owner.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '401':
          description: Unauthorized.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
    put:
      tags:
        - Deposit Customers-SME owner
      summary: Update owner for deposit SME customer
      description: |
        ## Allowed VP token
        Access Token,Security Token
        ## Allowed roles
        Trusted Party, My Pages, Deposit Integrator Core
      operationId: bcf0a3a7-6951-4272-88b1-601b7034e00a
      parameters:
        - name: smeId
          in: path
          description: The SME id what you want to query.
          required: true
          schema:
            type: number
        - name: ownerId
          in: path
          description: The owner id to update.
          required: true
          schema:
            type: number
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LegalEntityOwner'
        required: true
      responses:
        '200':
          description: Return updated legal entity owner..
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LegalEntityOwner'
        '400':
          description: Wrong request to update legal entity owner.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '401':
          description: Unauthorized.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
    delete:
      tags:
        - Deposit Customers-SME owner
      summary: Delete owner for deposit SME customer
      description: |
        ## Allowed VP token
        Access Token,Security Token
        ## Allowed roles
        Trusted Party, My Pages, Deposit Integrator Core
      operationId: bd3a01c3-3d64-4268-b8fa-8b2fe2e66195
      parameters:
        - name: smeId
          in: path
          description: The SME id what you want to query.
          required: true
          schema:
            type: number
        - name: ownerId
          in: path
          description: The owner id to delete.
          required: true
          schema:
            type: number
      responses:
        '204':
          description: Legal entity owner deleted.
        '400':
          description: Wrong request to update legal entity owner.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '401':
          description: Unauthorized.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
  /api/customer/v5/smes/{smeId}/preRegisteredExternalAccounts:
    post:
      tags:
        - Deposit Customers-Bank account
      summary: Create predefined external bank account for deposit SME customer
      description: |
        ## Allowed VP token
        Security Token
        ## Allowed roles
        Trusted Party, Deposit Integrator Core
      operationId: a14c2797-66db-438d-9ff3-f34f31200dbf
      parameters:
        - name: smeId
          in: path
          description: The SME id what you want to query.
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomerExternalAccountForUpdateV5'
        required: true
      responses:
        '201':
          description: Create predefined external bank account successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerExternalAccountV5'
        '400':
          description: Bad request for invalid parameters or body.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '401':
          description: >-
            Unauthorized, currently this API doesn't support to response json
            when meet such code.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '403':
          description: Access denied, please check the error message
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '409':
          description: >-
            The organizational number already exists, return existed SME
            customer.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BusinessCustomerResponse'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      security:
        - Authorization: []
    get:
      tags:
        - Deposit Customers-Bank account
      summary: Get predefined external bank accounts for deposit SME customer
      description: |
        ## Allowed VP token
        Access Token,Security Token
        ## Allowed roles
        Trusted Party, My Pages, Deposit Integrator Core
      operationId: e8cad458-50c2-48dc-ad3c-4e2e54e9a3ff
      parameters:
        - name: smeId
          in: path
          description: The SME id what you want to query.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Return predefined external bank account.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CustomerExternalAccountV5'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
  /api/customer/v5/smes/{smeId}/todaysNumberOfAccountApplications:
    get:
      tags:
        - Deposit Customers
      summary: >-
        Get number of deposit account applications submitted today for deposit
        SME customer
      description: |
        ## Allowed VP token
        Access Token,Security Token
        ## Allowed roles
        Trusted Party, My Pages, Deposit Integrator Core
      operationId: 9f69e481-1b22-4886-b57b-b8d9b2218f35
      parameters:
        - name: smeId
          in: path
          description: The SME id what you want to query.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Get number of account applications submitted today for SME.
          content:
            application/json:
              schema:
                type: number
        '400':
          description: Wrong request togGet number of account applications submitted today.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '401':
          description: Unauthorized.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '500':
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
  /api/customer/v6/engagements:
    get:
      tags:
        - Loan Customers
      summary: Get engagements by given reference and reference type.
      description: |
        ## General description
          Get engagements by given reference and reference type. (LOAN ONLY)
        ## Allowed tokens
          Security Token
        ## Allowed roles
          Trusted Party
        ## Additional information
          - A person may have different type of engagements.
        ## Changelog
          - v21.0.0 : New field `referenceInterestRate` in response.
          - v18.0.0 : New field `offer` in response body.
      operationId: eb7fbab7-8cfd-4ee6-86a7-4400ff1f9ede
      parameters:
        - name: reference
          in: query
          description: PersonalId, only support the personal id without any formats.
          required: true
          schema:
            type: string
        - name: referenceType
          in: query
          description: The reference type
          required: true
          schema:
            type: string
            enum:
              - SSN
              - OTHERS
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerEngagementsResponseV6'
        '400':
          description: Invalid request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '401':
          description: >-
            Unauthorized, currently this API doesn't support to response json
            when meet such code.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '403':
          description: Access denied, please check the error message
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
  /api/customer/v6/privateCustomers/me/kyc-answers:
    post:
      tags:
        - Deposit Customers-KYC answer
      summary: >-
        Create answer of KYC questionnaire for deposit consumer customer
        restricted by access token (DEPOSIT ONLY)
      description: >
        ## General description

        Create answer of KYC questionnaire for deposit consumer customer
        restricted by access token. (DEPOSIT ONLY)

        ## Allowed VP token

        Access Token

        ## Allowed roles

        My Pages

        ## Changelog

        - v21.0.0 : API added.
      operationId: post-customer-v6-me-kyc-answers
      parameters: []
      requestBody:
        description: >-
          Some question answer is mandatory due to the forms definition, the
          value of the answer will be validated due to the type of the question
          item, the system return 400 when the validation fails.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/KycAnswersRequestBody'
        required: true
      responses:
        '200':
          description: Return the saved answers of consumer customer.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KycAnswersResponseV2'
        '400':
          description: Parameter invalid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '401':
          description: Unauthorized.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '403':
          description: Prohibiting block.Please check the error message.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      x-stoplight:
        id: 2818pn2mc76bu
      security:
        - Authorization: []
  /api/customer/v6/privateCustomers/me/kyc-answers/latest:
    get:
      tags:
        - Deposit Customers-KYC answer
      summary: >-
        Get the latest version of KYC answer for deposit consumer customer
        restricted by access token. (DEPOSIT ONLY)
      description: >
        ## General description

        Get the latest version of KYC answer v2 for deposit consumer customer
        restricted by access token. (DEPOSIT ONLY)

        ## Allowed VP token

        Access Token

        ## Allowed roles

        My Pages

        ## Changelog

        - v21.0.0: API added.
      operationId: get-customer-v6-me-kyc-answers
      parameters: []
      responses:
        '200':
          description: Return the saved answers of consumer customer.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KycAnswersResponseV2'
        '204':
          description: No content of questions.
        '400':
          description: Parameter invalid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '401':
          description: Unauthorized.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '403':
          description: Prohibiting block.Please check the error message.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      x-stoplight:
        id: ps5wckv0tgvc9
      security:
        - Authorization: []
  /api/customer/v6/privateCustomers/me/kyc-answers/{answerId}/invalidate:
    post:
      tags:
        - Deposit Customers-KYC answer
      summary: >-
        Mark KYC answer as invalid for deposit consumer customer restricted by
        access token (DEPOSIT ONLY)
      description: >
        ## General description

        Mark KYC answer as invalid for deposit consumer customer restricted by
        access token (DEPOSIT ONLY)

        ## Allowed VP token

        Access Token

        ## Allowed roles

        My Pages

        ## Changelog

        - v21.0.0: API added.
      operationId: mark-customer-v6-me-kyc-answers-invalidate
      parameters:
        - name: answerId
          in: path
          description: The id of answer.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Return the saved answers of consumer customer.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KycAnswersResponseV2'
        '400':
          description: Parameter invalid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '401':
          description: Unauthorized.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '403':
          description: Prohibiting block.Please check the error message.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      x-stoplight:
        id: ps5wckv0tgvc9
      security:
        - Authorization: []
  /api/customer/v6/privateCustomers/{customerId}/kyc-answers:
    post:
      tags:
        - Deposit Customers-KYC answer
      summary: >-
        Create answer of KYC questionnaire for deposit consumer customer
        (DEPOSIT ONLY)
      description: >
        ## General description

        Create answer of KYC questionnaire for deposit consumer customer
        (DEPOSIT ONLY)

        ## Allowed VP token

        Security Token

        ## Allowed roles

        Trusted Party, My Pages

        ## Changelog

        - v21.0.0 : API added.
      operationId: post-customer-v6-customerId-kyc-answers
      parameters:
        - name: customerId
          in: path
          description: The id of consumer customer.
          required: true
          schema:
            type: string
      requestBody:
        description: >-
          Some question answer is mandatory due to the forms definition, the
          value of the answer will be validated due to the type of the question
          item, the system return 400 when the validation fails.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/KycAnswersRequestBody'
        required: true
      responses:
        '200':
          description: Return the saved answers of consumer customer.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KycAnswersResponseV2'
        '400':
          description: Parameter invalid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '401':
          description: Unauthorized.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '403':
          description: Prohibiting block.Please check the error message.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      x-stoplight:
        id: 2818pn2mc76bu
      security:
        - Authorization: []
  /api/customer/v6/privateCustomers/{customerId}/kyc-answers/latest:
    get:
      tags:
        - Deposit Customers-KYC answer
      summary: >-
        Get the latest version of KYC answer for deposit consumer customer
        (DEPOSIT ONLY)
      description: >
        ## General description

        Get the latest version of KYC answer for deposit consumer customer
        (DEPOSIT ONLY)

        ## Allowed VP token

        Security Token

        ## Allowed roles

        Trusted Party, My Pages

        ## Changelog

        - v21.0.0: API added.
      operationId: get-customer-v6-customerId-kyc-answers
      parameters:
        - name: customerId
          in: path
          description: The id of consumer customer.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Return the saved answers of consumer customer.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KycAnswersResponseV2'
        '204':
          description: No content of questions.
        '400':
          description: Parameter invalid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '401':
          description: Unauthorized.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '403':
          description: Prohibiting block.Please check the error message.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      x-stoplight:
        id: ps5wckv0tgvc9
      security:
        - Authorization: []
  /api/customer/v6/privateCustomers/{customerId}/kyc-answers/{answerId}/invalidate:
    post:
      tags:
        - Deposit Customers-KYC answer
      summary: Mark KYC answer as invalid for deposit consumer customer (DEPOSIT ONLY)
      description: |
        ## General description
        Mark KYC answer as invalid for deposit consumer customer (DEPOSIT ONLY)
        ## Allowed VP token
        Security Token
        ## Allowed roles
        Trusted Party, My Pages
        ## Changelog
        - v21.0.0: API added.
      operationId: mark-customer-v6-customerId-kyc-answers-invalidate
      parameters:
        - name: customerId
          in: path
          description: The id of consumer customer.
          required: true
          schema:
            type: string
        - name: answerId
          in: path
          description: The id of answer.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Return the saved answers of consumer customer.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KycAnswersResponseV2'
        '400':
          description: Parameter invalid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '401':
          description: Unauthorized.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '403':
          description: Prohibiting block.Please check the error message.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      x-stoplight:
        id: ps5wckv0tgvc9
      security:
        - Authorization: []
  /api/customer/v6/sme/document/{documentId}: {}
  /api/customer/v6/smes:
    post:
      tags:
        - Loan Customers
      summary: Create loan SME Customer
      description: Create loan SME Customer without any evaluation.
      operationId: 1388194e-fa59-40aa-a0c2-8cfce7989092
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BusinessCustomerV2'
            examples:
              create loan SME request body:
                value:
                  organizationNumber: '5567447056'
                  organizationCountryCode: SE
                  companyName: Vilja Solutions AB
                  companyType: AB
                  externalReference: x-1234567
                  officialAddress:
                    streetAddress: string
                    supplementaryStreetAddress: string
                    region: string
                    zipCode: '10000'
                    city: string
                    country: SE
                    coAddress: string
                    apartmentNumber: string
                    propertyNumber: string
                    buildingName: string
                    floorNumber: string
                    complementingInformation: string
                  phone: '+468123456'
                  email: info@viljasolutions.com
                  web: www.viljasolutions.com
                  signatoriesText: Firman tecknas av VD
                  businessTypeCode: '62010'
                  businessTypeDescription: Programmering
                  taxClassification: F
                  VAT: true
                  VATId: 556744-7056-01
                  LEI: 54930084UKLVMY22DS16
                  employeeCount: 55
                  parentCompanyOrgNumber: '5567447056'
                  parentCompanyCountryCode: SE
                  groupMotherOrgNumber: '5567447056'
                  groupMotherCountryCode: SE
                  incorporationDate: '2019-08-24'
                  companyStatus: ACTIVE
                  riskClass: NORMAL
                  riskClassComment: This company is harmless
                  signatories:
                    combinations:
                      - signatoryPersons:
                          - name: Frida Kranstego
                            reference: '197705232382'
                  dynamicFields: {}
        required: true
      responses:
        '201':
          description: Return created SME customer.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BusinessCustomerResponseV2'
              examples:
                create loan SME response:
                  value:
                    id: 61b3039db74f7a439a4bfc0c
                    organizationNumber: '5567447056'
                    organizationCountryCode: SE
                    companyName: Vilja Solutions AB
                    companyType: AB
                    externalReference: x-1234567
                    phone: '+468123456'
                    email: info@viljasolutions.com
                    web: www.viljasolutions.com
                    businessTypeCode: '62010'
                    businessTypeDescription: Programmering
                    taxClassification: F
                    employeeCount: 55
                    parentCompanyOrgNumber: '5567447056'
                    parentCompanyCountryCode: SE
                    groupMotherOrgNumber: '5567447056'
                    groupMotherCountryCode: SE
                    incorporationDate: '2019-08-24'
                    companyStatus: ACTIVE
                    riskClass: NORMAL
                    riskClassComment: This company is harmless
                    signatoriesText: Firman tecknas av VD
                    signatories:
                      combinations:
                        - id: 61b3039db74f7a439a4bfc0d
                          signatoryPersons:
                            - id: 61b3039db74f7a439a4bfc0e
                              name: Frida Kranstego
                              reference: '197705232382'
                    schemaMetadata:
                      sensitive: PERSONAL
                      tags: []
                      selfRef:
                        refId: 61b3039db74f7a439a4bfc0c
                        uri: /api/customer/v6/smes/61b3039db74f7a439a4bfc0c
                    dynamicFieldsRef: 61b3039db74f7a439a4bfc0s
                    dynamicFields: {}
                    officialAddress:
                      streetAddress: string
                      zipCode: '10000'
                      city: string
                      country: SE
                      coAddress: string
                      region: string
                      apartmentNumber: string
                      propertyNumber: string
                      buildingName: string
                      floorNumber: string
                      complementingInformation: string
                      supplementaryStreetAddress: string
                    createTime: '2021-12-10T15:37:01.502+08:00'
                    updateTime: '2021-12-10T15:37:01.502+08:00'
                    VAT: true
                    VATId: 556744-7056-01
                    LEI: 54930084UKLVMY22DS16
        '400':
          description: Bad request to create SME customer.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '401':
          description: >-
            Unauthorized, currently this API doesn't support to response json
            when meet such code.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '403':
          description: Access denied, please check the error message
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '409':
          description: >-
            The organizational number already exists, return existed SME
            customer.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BusinessCustomerResponseV2'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
    get:
      tags:
        - Loan Customers
      summary: Get loan SME Customers by query parameters
      description: >-
        Get loan SME Customers by query parameters, now only support
        organizationNumber and organizationCountryCode.
      operationId: b06e4525-87ad-4f51-8133-a3cce19ba362
      parameters:
        - name: organizationNumber
          in: query
          description: >-
            The organizationNumber of the SME customer, it is mandatory until we
            support the paging in the response.
          required: true
          schema:
            type: string
          example: 556744-7056
        - name: organizationCountryCode
          in: query
          description: >-
            The organizationCountryCode of the SME customer, system default
            setting will be used if not provided.
          schema:
            type: string
          example: SE
      responses:
        '200':
          description: >-
            Return a group of SME customers detail information, you receive an
            object with empty Array of smeCusomters if nothing found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BusinessCustomerListResponse'
              examples:
                Get loan SME Customers with dynamic fields:
                  value:
                    smeCustomers:
                      - id: 61b3039db74f7a439a4bfc0c
                        organizationNumber: '5567447056'
                        organizationCountryCode: SE
                        companyName: Vilja Solutions AB
                        companyType: AB
                        externalReference: x-1234567
                        phone: '+468123456'
                        email: info@viljasolutions.com
                        web: www.viljasolutions.com
                        businessTypeCode: '62010'
                        businessTypeDescription: Programmering
                        taxClassification: F
                        employeeCount: 55
                        parentCompanyOrgNumber: '5567447056'
                        parentCompanyCountryCode: SE
                        groupMotherOrgNumber: '5567447056'
                        groupMotherCountryCode: SE
                        incorporationDate: '2019-08-24'
                        companyStatus: ACTIVE
                        riskClass: NORMAL
                        riskClassComment: This company is harmless
                        signatoriesText: Firman tecknas av VD
                        signatories:
                          combinations:
                            - id: 61b304a1b74f7a439a4bfc10
                              signatoryPersons:
                                - id: 61b304a1b74f7a439a4bfc11
                                  name: Frida Kranstego
                                  reference: '197705232382'
                        schemaMetadata:
                          sensitive: PERSONAL
                          tags: []
                          selfRef:
                            refId: 61b3039db74f7a439a4bfc0c
                            uri: /api/customer/v6/smes/61b3039db74f7a439a4bfc0c
                        dynamicFieldsRef: 61b303e233c6d26ee662bc54
                        dynamicFields:
                          name: This is name
                          description: This is description
                          rating: 5
                          recurrenceInterval: 30
                          email: abc@vilja.com
                          decisionReason: AGE
                          dueDate: '2021-12-23'
                        officialAddress:
                          streetAddress: string
                          zipCode: '10000'
                          city: string
                          country: SE
                          coAddress: string
                          region: string
                          apartmentNumber: string
                          propertyNumber: string
                          buildingName: string
                          floorNumber: string
                          complementingInformation: string
                          supplementaryStreetAddress: string
                        createTime: '2021-12-10T15:37:01.502+08:00'
                        updateTime: '2021-12-10T15:41:21.84+08:00'
                        VAT: true
                        VATId: 556744-7056-01
                        LEI: 54930084UKLVMY22DS16
        '400':
          description: Bad request to get SME customer.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '401':
          description: >-
            Unauthorized, currently this API doesn't support to response json
            when meet such code.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '403':
          description: Access denied, please check the error message
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
  /api/customer/v6/smes/{id}:
    get:
      tags:
        - Loan Customers
      summary: Get loan SME Customer by id
      description: Get loan SME Customer by id
      operationId: b973942e-b61b-4b9e-b045-01c0255207a9
      parameters:
        - name: id
          in: path
          description: The id of SME
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Return SME customer detail information.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BusinessCustomerResponseV2'
              examples:
                SME entity with dynamic fields:
                  value:
                    id: 61b3039db74f7a439a4bfc0c
                    organizationNumber: '5567447056'
                    organizationCountryCode: SE
                    companyName: Vilja Solutions AB
                    companyType: AB
                    externalReference: x-1234567
                    phone: '+468123456'
                    email: info@viljasolutions.com
                    web: www.viljasolutions.com
                    businessTypeCode: '62010'
                    businessTypeDescription: Programmering
                    taxClassification: F
                    employeeCount: 55
                    parentCompanyOrgNumber: '5567447056'
                    parentCompanyCountryCode: SE
                    groupMotherOrgNumber: '5567447056'
                    groupMotherCountryCode: SE
                    incorporationDate: '2019-08-24'
                    companyStatus: ACTIVE
                    riskClass: NORMAL
                    riskClassComment: This company is harmless
                    signatoriesText: Firman tecknas av VD
                    signatories:
                      combinations:
                        - id: 61b304a1b74f7a439a4bfc10
                          signatoryPersons:
                            - id: 61b304a1b74f7a439a4bfc11
                              name: Frida Kranstego
                              reference: '197705232382'
                    schemaMetadata:
                      sensitive: PERSONAL
                      tags: []
                      selfRef:
                        refId: 61b3039db74f7a439a4bfc0c
                        uri: /api/customer/v6/smes/61b3039db74f7a439a4bfc0c
                    dynamicFieldsRef: 61b303e233c6d26ee662bc54
                    dynamicFields:
                      name: This is name
                      description: This is description
                      rating: 5
                      recurrenceInterval: 30
                      email: abc@vilja.com
                      decisionReason: AGE
                      dueDate: '2021-12-23'
                    officialAddress:
                      streetAddress: string
                      zipCode: '10000'
                      city: string
                      country: SE
                      coAddress: string
                      region: string
                      apartmentNumber: string
                      propertyNumber: string
                      buildingName: string
                      floorNumber: string
                      complementingInformation: string
                      supplementaryStreetAddress: string
                    createTime: '2021-12-10T15:37:01.502+08:00'
                    updateTime: '2021-12-10T15:41:21.84+08:00'
                    VAT: true
                    VATId: 556744-7056-01
                    LEI: 54930084UKLVMY22DS16
        '400':
          description: Bad request to get SME customer.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '401':
          description: >-
            Unauthorized, currently this API doesn't support to response json
            when meet such code.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '403':
          description: Access denied, please check the error message
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
    patch:
      tags:
        - Loan Customers
      summary: Update loan SME Customer by id
      description: >-
        Update loan SME Customer by id. It does not support individual updates
        of object fields(officialAddress, signatories), If you want to update
        object field, please provide all child fields of this object.
      operationId: 36172afa-8441-4f38-b8cf-8a579209c4cb
      parameters:
        - name: id
          in: path
          description: The id of SME
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BusinessCustomerUpdateV2'
            examples:
              SME patch body:
                value:
                  companyName: Vilja Solutions AB
                  companyType: AB
                  externalReference: x-1234567
                  phone: '+468123456'
                  email: info@viljasolutions.com
                  web: www.viljasolutions.com
                  businessTypeCode: '62010'
                  businessTypeDescription: Programmering
                  taxClassification: F
                  employeeCount: 55
                  parentCompanyOrgNumber: '5567447056'
                  parentCompanyCountryCode: SE
                  groupMotherOrgNumber: '5567447056'
                  groupMotherCountryCode: SE
                  incorporationDate: '2019-08-24'
                  companyStatus: ACTIVE
                  riskClass: NORMAL
                  riskClassComment: This company is harmless
                  signatoriesText: Firman tecknas av VD
                  signatories:
                    combinations:
                      - signatoryPersons:
                          - name: Frida Kranstego
                            reference: '197705232382'
                  dynamicFields:
                    name: This is name
                    description: This is description
                    rating: 5
                    recurrenceInterval: 30
                    email: abc@vilja.com
                    decisionReason: AGE
                    dueDate: '2021-12-23'
                  officialAddress:
                    streetAddress: string
                    zipCode: '10000'
                    city: string
                    country: SE
                    coAddress: string
                    region: string
                    apartmentNumber: string
                    propertyNumber: string
                    buildingName: string
                    floorNumber: string
                    complementingInformation: string
                    supplementaryStreetAddress: string
                  VAT: true
                  VATId: 556744-7056-01
                  LEI: 54930084UKLVMY22DS16
        required: true
      responses:
        '200':
          description: Return updated SME customer.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BusinessCustomerResponseV2'
              examples:
                SME entity with dynamic fields:
                  value:
                    id: 61b3039db74f7a439a4bfc0c
                    organizationNumber: '5567447056'
                    organizationCountryCode: SE
                    companyName: Vilja Solutions AB
                    companyType: AB
                    externalReference: x-1234567
                    phone: '+468123456'
                    email: info@viljasolutions.com
                    web: www.viljasolutions.com
                    businessTypeCode: '62010'
                    businessTypeDescription: Programmering
                    taxClassification: F
                    employeeCount: 55
                    parentCompanyOrgNumber: '5567447056'
                    parentCompanyCountryCode: SE
                    groupMotherOrgNumber: '5567447056'
                    groupMotherCountryCode: SE
                    incorporationDate: '2019-08-24'
                    companyStatus: ACTIVE
                    riskClass: NORMAL
                    riskClassComment: This company is harmless
                    signatoriesText: Firman tecknas av VD
                    signatories:
                      combinations:
                        - id: 61b304a1b74f7a439a4bfc10
                          signatoryPersons:
                            - id: 61b304a1b74f7a439a4bfc11
                              name: Frida Kranstego
                              reference: '197705232382'
                    schemaMetadata:
                      sensitive: PERSONAL
                      tags: []
                      selfRef:
                        refId: 61b3039db74f7a439a4bfc0c
                        uri: /api/customer/v6/smes/61b3039db74f7a439a4bfc0c
                    dynamicFieldsRef: 61b303e233c6d26ee662bc54
                    dynamicFields:
                      name: This is name
                      description: This is description
                      rating: 5
                      recurrenceInterval: 30
                      email: abc@vilja.com
                      decisionReason: AGE
                      dueDate: '2021-12-23'
                    officialAddress:
                      streetAddress: string
                      zipCode: '10000'
                      city: string
                      country: SE
                      coAddress: string
                      region: string
                      apartmentNumber: string
                      propertyNumber: string
                      buildingName: string
                      floorNumber: string
                      complementingInformation: string
                      supplementaryStreetAddress: string
                    createTime: '2021-12-10T15:37:01.502+08:00'
                    updateTime: '2021-12-10T15:41:21.84+08:00'
                    VAT: true
                    VATId: 556744-7056-01
                    LEI: 54930084UKLVMY22DS16
        '400':
          description: Bad request to update SME customer.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '401':
          description: >-
            Unauthorized, currently this API doesn't support to response json
            when meet such code.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '403':
          description: Access denied, please check the error message
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
  /api/customer/v6/smes/{smeId}/admins:
    post:
      tags:
        - Loan Customers
      summary: Create admins for loan SME customer
      description: Create an admin.
      operationId: b76f44f9-2133-49d1-9333-1c7421456a2e
      parameters:
        - name: smeId
          in: path
          required: true
          schema:
            type: string
          description: smeId
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateAdminV6'
        required: true
      responses:
        '201':
          description: After created admin information.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdminV6'
        '400':
          description: >-
            Bad request. The parameters in the URL or request body are invalid.
            Please refer to the error message for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '401':
          description: >-
            Unauthorized. The token is invalid/expired or the SSN does not exist
            in the VP. Please refer to the error message for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '403':
          description: >-
            Forbidden. No access rights or access frequency too fast. Please
            refer to the error message for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '500':
          description: >-
            Internal server error. Please refer to the error message for
            details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
    get:
      tags:
        - Loan Customers
      summary: Get admins for loan SME customer
      description: Get all admins.
      operationId: 37a8bed7-4ffa-40ac-b173-1c566f4e4b38
      parameters:
        - name: smeId
          in: path
          required: true
          schema:
            type: string
          description: smeId
      responses:
        '200':
          description: The list of admins.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AdminV6'
        '400':
          description: >-
            Bad request. The parameters in the URL or request body are invalid.
            Please refer to the error message for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '401':
          description: >-
            Unauthorized. The token is invalid/expired or the SSN does not exist
            in the VP. Please refer to the error message for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '403':
          description: >-
            Forbidden. No access rights or access frequency too fast. Please
            refer to the error message for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '500':
          description: >-
            Internal server error. Please refer to the error message for
            details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
  /api/customer/v6/smes/{smeId}/admins/{id}:
    get:
      tags:
        - Loan Customers
      summary: Get admin by id for loan SME customer
      description: Get admin by id for loan SME customer
      operationId: cf550a2e-51b9-4dd2-8432-c2c650bc934a
      parameters:
        - name: smeId
          in: path
          required: true
          schema:
            type: string
          description: smeId
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: id
      responses:
        '200':
          description: Admin information.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdminV6'
        '400':
          description: >-
            Bad request. The parameters in the URL or request body are invalid.
            Please refer to the error message for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '401':
          description: >-
            Unauthorized. The token is invalid/expired or the SSN does not exist
            in the VP. Please refer to the error message for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '403':
          description: >-
            Forbidden. No access rights or access frequency too fast. Please
            refer to the error message for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '500':
          description: >-
            Internal server error. Please refer to the error message for
            details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
    patch:
      tags:
        - Loan Customers
      summary: Update admin for loan SME customer
      description: Update admin for loan SME customer
      operationId: eb6dfaeb-8ace-41f1-886e-cc56808fd30e
      parameters:
        - name: smeId
          in: path
          required: true
          schema:
            type: string
          description: smeId
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: id
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateAdminV6'
        required: true
      responses:
        '200':
          description: After created admin information.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdminV6'
        '400':
          description: >-
            Bad request. The parameters in the URL or request body are invalid.
            Please refer to the error message for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '401':
          description: >-
            Unauthorized. The token is invalid/expired or the SSN does not exist
            in the VP. Please refer to the error message for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '403':
          description: >-
            Forbidden. No access rights or access frequency too fast. Please
            refer to the error message for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '500':
          description: >-
            Internal server error. Please refer to the error message for
            details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
    delete:
      tags:
        - Loan Customers
      summary: Delete an admin by id (LOAN ONLY)
      description: Delete an admin by id.
      operationId: 08b0b80c-d80a-4cf3-b405-a76c0cd3bd7f
      parameters:
        - name: smeId
          in: path
          required: true
          schema:
            type: string
          description: smeId
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: id
      responses:
        '204':
          description: Delete admin successfully.
        '400':
          description: >-
            Bad request. The parameters in the URL or request body are invalid.
            Please refer to the error message for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '401':
          description: >-
            Unauthorized. The token is invalid/expired or the SSN does not exist
            in the VP. Please refer to the error message for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '403':
          description: >-
            Forbidden. No access rights or access frequency too fast. Please
            refer to the error message for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '500':
          description: >-
            Internal server error. Please refer to the error message for
            details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
  /api/customer/v6/smes/{smeId}/boardMembers:
    post:
      tags:
        - Loan Customers
      summary: Create board member for loan SME customer
      description: Create a board member.
      operationId: 6adc8c8a-0393-4c6a-8ab7-00d4614c1fb4
      parameters:
        - name: smeId
          in: path
          required: true
          schema:
            type: string
          description: smeId
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateBoardMemberV6'
        required: true
      responses:
        '201':
          description: After created board member information.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BoardMemberV6'
        '400':
          description: >-
            Bad request. The parameters in the URL or request body are invalid.
            Please refer to the error message for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '401':
          description: >-
            Unauthorized. The token is invalid/expired or the SSN does not exist
            in the VP. Please refer to the error message for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '403':
          description: >-
            Forbidden. No access rights or access frequency too fast. Please
            refer to the error message for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '500':
          description: >-
            Internal server error. Please refer to the error message for
            details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
    get:
      tags:
        - Loan Customers
      summary: Get board members for loan SME customer
      description: Get all board members.
      operationId: 49dc4864-e601-4d25-a14c-384d0b07f838
      parameters:
        - name: smeId
          in: path
          required: true
          schema:
            type: string
          description: smeId
      responses:
        '200':
          description: The list of board members.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BoardMemberV6'
        '400':
          description: >-
            Bad request. The parameters in the URL or request body are invalid.
            Please refer to the error message for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '401':
          description: >-
            Unauthorized. The token is invalid/expired or the SSN does not exist
            in the VP. Please refer to the error message for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '403':
          description: >-
            Forbidden. No access rights or access frequency too fast. Please
            refer to the error message for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '500':
          description: >-
            Internal server error. Please refer to the error message for
            details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
  /api/customer/v6/smes/{smeId}/boardMembers/{id}:
    get:
      tags:
        - Loan Customers
      summary: Get board member by id for loan SME customer
      description: Get a board member.
      operationId: 16f671e0-3b9e-49ca-9782-2372b243a434
      parameters:
        - name: smeId
          in: path
          required: true
          schema:
            type: string
          description: smeId
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: id
      responses:
        '200':
          description: Board member information.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BoardMemberV6'
        '400':
          description: >-
            Bad request. The parameters in the URL or request body are invalid.
            Please refer to the error message for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '401':
          description: >-
            Unauthorized. The token is invalid/expired or the SSN does not exist
            in the VP. Please refer to the error message for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '403':
          description: >-
            Forbidden. No access rights or access frequency too fast. Please
            refer to the error message for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '500':
          description: >-
            Internal server error. Please refer to the error message for
            details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
    patch:
      tags:
        - Loan Customers
      summary: Update board member by id for loan SME customer
      description: Update a board member.
      operationId: bb3bf2e0-86df-497d-821a-50775b2046eb
      parameters:
        - name: smeId
          in: path
          required: true
          schema:
            type: string
          description: smeId
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: id
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateBoardMemberV6'
        required: true
      responses:
        '200':
          description: After created board member information.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BoardMemberV6'
        '400':
          description: >-
            Bad request. The parameters in the URL or request body are invalid.
            Please refer to the error message for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '401':
          description: >-
            Unauthorized. The token is invalid/expired or the SSN does not exist
            in the VP. Please refer to the error message for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '403':
          description: >-
            Forbidden. No access rights or access frequency too fast. Please
            refer to the error message for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '500':
          description: >-
            Internal server error. Please refer to the error message for
            details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
    delete:
      tags:
        - Loan Customers
      summary: Delete board member by id for loan SME customer
      description: Delete a board member by id.
      operationId: 060fdc7c-7abc-4a04-8a1e-8bc73a2bb745
      parameters:
        - name: smeId
          in: path
          required: true
          schema:
            type: string
          description: smeId
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: id
      responses:
        '204':
          description: Delete board member successfully.
        '400':
          description: >-
            Bad request. The parameters in the URL or request body are invalid.
            Please refer to the error message for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '401':
          description: >-
            Unauthorized. The token is invalid/expired or the SSN does not exist
            in the VP. Please refer to the error message for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '403':
          description: >-
            Forbidden. No access rights or access frequency too fast. Please
            refer to the error message for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '500':
          description: >-
            Internal server error. Please refer to the error message for
            details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
  /api/customer/v6/smes/{smeId}/documents:
    post:
      tags:
        - Loan Customers
      summary: Create documents for loan SME customer
      description: Create documents for a specific SME customer.
      operationId: bb349b15-b05f-4559-8adf-96351ac81242
      parameters:
        - name: smeId
          in: path
          description: The SME id what you want to upload documents for.
          required: true
          schema:
            type: string
      requestBody:
        content:
          multipart/form-data:
            schema:
              required:
                - documentType
                - files
              type: object
              properties:
                documentType:
                  type: string
                  description: |
                    * PROMISSORY_NOTE Promissory note
                    * SALES_SLIP Sales slip
                    * DIRECT_DEBIT_CONSENT Direct debit consent
                    * ENTIRE_LIST_OF_COMPLEMENTS Entire list of complements
                    * LOAN_COMMITMENT Loan commitment
                    * PURCHASE_CONTRACT Purchase contract
                    * AMORTIZATION_VERIFICATION Amortization verification
                    * VALUATION Valuation
                    * POWER_OF_ATTORNEY Power of attorney
                    * CO_OP_ANNUAL_REPORT Co-op annual report
                    * PROPERTY_DATA Property data
                    * CERTIFICATE_OF_EMPLOYER Certificate of employer
                    * PAYSLIP Payslip
                    * STATEMENT Statement
                    * KYC_DOCUMENT KYC-document
                    * WELCOME_PACKAGE welcome package
                    * TAX_YEARLY tax-yearly
                    * Others
                  enum:
                    - PROMISSORY_NOTE
                    - SALES_SLIP
                    - DIRECT_DEBIT_CONSENT
                    - ENTIRE_LIST_OF_COMPLEMENTS
                    - LOAN_COMMITMENT
                    - PURCHASE_CONTRACT
                    - AMORTIZATION_VERIFICATION
                    - VALUATION
                    - POWER_OF_ATTORNEY
                    - CO_OP_ANNUAL_REPORT
                    - PROPERTY_DATA
                    - CERTIFICATE_OF_EMPLOYER
                    - PAYSLIP
                    - STATEMENT
                    - KYC_DOCUMENT
                    - WELCOME_PACKAGE
                    - TAX_YEARLY
                    - OTHERS
                documentSignStatus:
                  type: string
                  description: |
                    * UNSIGNED Unsigned,default value.
                    * MANUAL_SIGNED  Manual signed.
                    * DIGITAL_SIGNED Digital signed.
                  default: UNSIGNED
                  enum:
                    - UNSIGNED
                    - MANUAL_SIGNED
                    - DIGITAL_SIGNED
                files:
                  type: array
                  items:
                    type: string
                    format: binary
                note:
                  type: string
                  description: Description of documents
                tags:
                  type: string
                  description: |
                    User defined tags
                    * {"any key": "any value", "any key": "any value", ...}
        required: true
      responses:
        '200':
          description: Documents uploaded successfully
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    fileName:
                      type: string
                      description: File name
                    documentId:
                      type: string
                      description: Document Id
        '401':
          description: Access denied, please check the error message
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Oauth2TokenErrorResponse'
        '403':
          description: Forbidden, please check the error message
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
  /api/customer/v6/smes/{smeId}/documents/{documentId}:
    delete:
      tags:
        - Loan Customers
      summary: Delete document for loan SME customer
      description: Delete document for loan SME customer
      operationId: a96f0721-0be7-49a4-8574-d0b0bf72370b
      parameters:
        - name: smeId
          in: path
          description: The SME id which the document belongs to.
          required: true
          schema:
            type: string
        - name: documentId
          in: path
          description: The document id what you want to delete.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Document successfully deleted.
          content:
            application/json:
              schema:
                type: object
                properties:
                  fileName:
                    type: string
                    description: File name
        '401':
          description: Access denied, please check the error message
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Oauth2TokenErrorResponse'
        '403':
          description: Forbidden, please check the error message
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
  /api/customer/v6/smes/{smeId}/documents/{documentId}/metadata:
    patch:
      tags:
        - Loan Customers
      summary: Update document metadata for loan SME customer
      description: Update document metadata for loan SME customer
      operationId: 49fe0c50-9964-4e2f-ab4e-4482f36298b5
      parameters:
        - name: smeId
          in: path
          description: The ID of the SME customer.
          required: true
          schema:
            type: string
        - name: documentId
          in: path
          description: The ID of the document.
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                signStatus:
                  type: string
                  enum:
                    - SIGNED
                    - UNSIGNED
                signType:
                  type: string
                  enum:
                    - MANUAL
                    - DIGITAL
                note:
                  type: string
                  description: Description of documents
                tags:
                  type: object
                  additionalProperties:
                    type: string
                  description: |
                    User defined tags
                    * {"any key": "any value", "any key": "any value", ...}
        required: true
      responses:
        '200':
          description: Metadata successfully updated.
          content:
            application/json:
              schema:
                type: object
                properties:
                  fileName:
                    type: string
                    description: File name
                  documentId:
                    type: string
                    description: Document Id
        '401':
          description: Access denied, please check the error message
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Oauth2TokenErrorResponse'
        '403':
          description: Forbidden, please check the error message
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
  /api/customer/v6/smes/{smeId}/engagements:
    get:
      tags:
        - Loan Customers
      summary: Get the engagements for loan SME customer
      description: |
        ## General description
          Get the engagements of SME by SME ID
        ## Allowed tokens
          Security Token
        ## Allowed roles
          Trusted Party
        ## Additional information
          - Fields are only supported for credit accounts
            - creditLimit, availableCreditLimit
        ## Changelog
          - v21.0.0 : New field `referenceInterestRate` in response.
          - v18.0.0 : New field `offer` in response body.
      operationId: d9ed1f22-630b-48cc-8b4f-17f19e0e4c65
      responses:
        '200':
          description: The information of the engagement.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BusinessCustomerEngagementV6'
        '400':
          description: >-
            Bad request. The parameters in the URL or request body are invalid.
            Please refer to the error message for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '401':
          description: >-
            Unauthorized. The token is invalid/expired or the SSN does not exist
            in the VP. Please refer to the error message for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '403':
          description: >-
            Forbidden. No access rights or access frequency too fast. Please
            refer to the error message for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '500':
          description: >-
            Internal server error. Please refer to the error message for
            details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
  /api/customer/v6/smes/{smeId}/individuals:
    get:
      tags:
        - Loan Customers
      summary: Get all individuals for loan SME customer
      description: Get all the individuals.
      operationId: efc3f686-822f-4cb8-8fb4-235880a36074
      responses:
        '200':
          description: >-
            the individuals information, it contains several list of different
            type of each individual.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IndividualV6'
        '400':
          description: >-
            Bad request. The parameters in the URL or request body are invalid.
            Please refer to the error message for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '401':
          description: >-
            Unauthorized. The token is invalid/expired or the SSN does not exist
            in the VP. Please refer to the error message for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '403':
          description: >-
            Forbidden. No access rights or access frequency too fast. Please
            refer to the error message for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '500':
          description: >-
            Internal server error. Please refer to the error message for
            details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
  /api/customer/v6/smes/{smeId}/managementTeamIndividuals:
    post:
      tags:
        - Loan Customers
      summary: Create management team individuals for loan SME customer
      description: Create a management team individual.
      operationId: dfc503e2-3cdb-4863-92de-b1d9870c8a5f
      parameters:
        - name: smeId
          in: path
          required: true
          schema:
            type: string
          description: smeId
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateManagementTeamIndividualV6'
        required: true
      responses:
        '201':
          description: After created management team individual information.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ManagementTeamIndividualV6'
        '400':
          description: >-
            Bad request. The parameters in the URL or request body are invalid.
            Please refer to the error message for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '401':
          description: >-
            Unauthorized. The token is invalid/expired or the SSN does not exist
            in the VP. Please refer to the error message for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '403':
          description: >-
            Forbidden. No access rights or access frequency too fast. Please
            refer to the error message for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '500':
          description: >-
            Internal server error. Please refer to the error message for
            details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
    get:
      tags:
        - Loan Customers
      summary: Get management team individuals for loan SME customer
      description: Get all management team individuals.
      operationId: ecb6699a-0657-4d9a-bd63-4e115297f2e0
      parameters:
        - name: smeId
          in: path
          required: true
          schema:
            type: string
          description: smeId
      responses:
        '200':
          description: The list of management team individuals.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ManagementTeamIndividualV6'
        '400':
          description: >-
            Bad request. The parameters in the URL or request body are invalid.
            Please refer to the error message for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '401':
          description: >-
            Unauthorized. The token is invalid/expired or the SSN does not exist
            in the VP. Please refer to the error message for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '403':
          description: >-
            Forbidden. No access rights or access frequency too fast. Please
            refer to the error message for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '500':
          description: >-
            Internal server error. Please refer to the error message for
            details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
  /api/customer/v6/smes/{smeId}/managementTeamIndividuals/{id}:
    get:
      tags:
        - Loan Customers
      summary: Get management team individuals by id for loan SME customer
      description: Get a management team individual.
      operationId: 68404e0f-4520-4e3f-bfdf-343fedee5a56
      parameters:
        - name: smeId
          in: path
          required: true
          schema:
            type: string
          description: smeId
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: id
      responses:
        '200':
          description: Management team individual information.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ManagementTeamIndividualV6'
        '400':
          description: >-
            Bad request. The parameters in the URL or request body are invalid.
            Please refer to the error message for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '401':
          description: >-
            Unauthorized. The token is invalid/expired or the SSN does not exist
            in the VP. Please refer to the error message for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '403':
          description: >-
            Forbidden. No access rights or access frequency too fast. Please
            refer to the error message for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '500':
          description: >-
            Internal server error. Please refer to the error message for
            details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
    patch:
      tags:
        - Loan Customers
      summary: Update management team individuals by id for loan SME customer
      description: Update a management team individual.
      operationId: 4f77f44a-9efb-480e-832c-f86fd01f4c8b
      parameters:
        - name: smeId
          in: path
          required: true
          schema:
            type: string
          description: smeId
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: smeId
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateManagementTeamIndividualV6'
        required: true
      responses:
        '200':
          description: After created board member information.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ManagementTeamIndividualV6'
        '400':
          description: >-
            Bad request. The parameters in the URL or request body are invalid.
            Please refer to the error message for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '401':
          description: >-
            Unauthorized. The token is invalid/expired or the SSN does not exist
            in the VP. Please refer to the error message for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '403':
          description: >-
            Forbidden. No access rights or access frequency too fast. Please
            refer to the error message for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '500':
          description: >-
            Internal server error. Please refer to the error message for
            details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
    delete:
      tags:
        - Loan Customers
      summary: Delete management team individuals by id for loan SME customer
      description: Delete a management team individual by id.
      operationId: 0e3319a6-be07-4334-9ac6-2b4b77584e5f
      parameters:
        - name: smeId
          in: path
          required: true
          schema:
            type: string
          description: smeId
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: smeId
      responses:
        '204':
          description: Delete management team individual successfully.
        '400':
          description: >-
            Bad request. The parameters in the URL or request body are invalid.
            Please refer to the error message for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '401':
          description: >-
            Unauthorized. The token is invalid/expired or the SSN does not exist
            in the VP. Please refer to the error message for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '403':
          description: >-
            Forbidden. No access rights or access frequency too fast. Please
            refer to the error message for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '500':
          description: >-
            Internal server error. Please refer to the error message for
            details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
  /api/customer/v6/smes/{smeId}/notes:
    post:
      tags:
        - Loan Customers
      summary: Create customer note for SME customer
      description: Create customer note for SME customer
      operationId: b6209ff8-8e4c-409b-a808-7143d224649a
      parameters:
        - name: smeId
          in: path
          required: true
          schema:
            type: string
          description: smeId
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SmeApplicationNote'
        required: true
      responses:
        '200':
          description: Note created.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SMECustomerNoteResponse'
        '401':
          description: Unauthorized.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '403':
          description: Access denied, please check the error message
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
    get:
      tags:
        - Loan Customers
      summary: Get customer notes for SME customer
      description: Get customer notes for SME customer
      operationId: 0d96cdaa-addc-46fc-b66a-9f5ea0465bce
      responses:
        '200':
          description: Get credit or loan application for SME.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SMECustomerNoteResponse'
        '401':
          description: Unauthorized.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '403':
          description: Access denied, please check the error message
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
  /api/customer/v6/smes/{smeId}/ultimateBeneficialOwners:
    post:
      tags:
        - Loan Customers
      summary: Create ultimate beneficial owners for loan SME customer
      description: Create an ultimate beneficial owner.
      operationId: 437a1e81-af0d-4868-a0f0-e322cb6799c2
      parameters:
        - name: smeId
          in: path
          required: true
          schema:
            type: string
          description: smeId
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateUltimateBeneficialOwnerV6'
        required: true
      responses:
        '201':
          description: After created ultimate beneficial owner information.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UltimateBeneficialOwnerV6'
        '400':
          description: >-
            Bad request. The parameters in the URL or request body are invalid.
            Please refer to the error message for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '401':
          description: >-
            Unauthorized. The token is invalid/expired or the SSN does not exist
            in the VP. Please refer to the error message for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '403':
          description: >-
            Forbidden. No access rights or access frequency too fast. Please
            refer to the error message for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '500':
          description: >-
            Internal server error. Please refer to the error message for
            details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
    get:
      tags:
        - Loan Customers
      summary: Get ultimate beneficial owners for loan SME customer
      description: Get all ultimate beneficial owners.
      operationId: 6849e13a-d8e3-47b9-9ab6-c78a3fad3804
      parameters:
        - name: smeId
          in: path
          required: true
          schema:
            type: string
          description: smeId
      responses:
        '200':
          description: The list of ultimate beneficial owners.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UltimateBeneficialOwnerV6'
        '400':
          description: >-
            Bad request. The parameters in the URL or request body are invalid.
            Please refer to the error message for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '401':
          description: >-
            Unauthorized. The token is invalid/expired or the SSN does not exist
            in the VP. Please refer to the error message for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '403':
          description: >-
            Forbidden. No access rights or access frequency too fast. Please
            refer to the error message for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '500':
          description: >-
            Internal server error. Please refer to the error message for
            details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
  /api/customer/v6/smes/{smeId}/ultimateBeneficialOwners/{id}:
    get:
      tags:
        - Loan Customers
      summary: Get ultimate beneficial owners by id for loan SME customer
      description: Get an ultimate beneficial owner.
      operationId: 63e2ca18-a46b-4f51-8738-6e55221582a8
      parameters:
        - name: smeId
          in: path
          required: true
          schema:
            type: string
          description: smeId
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: id
      responses:
        '200':
          description: Ultimate beneficial owner information.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UltimateBeneficialOwnerV6'
        '400':
          description: >-
            Bad request. The parameters in the URL or request body are invalid.
            Please refer to the error message for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '401':
          description: >-
            Unauthorized. The token is invalid/expired or the SSN does not exist
            in the VP. Please refer to the error message for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '403':
          description: >-
            Forbidden. No access rights or access frequency too fast. Please
            refer to the error message for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '500':
          description: >-
            Internal server error. Please refer to the error message for
            details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
    patch:
      tags:
        - Loan Customers
      summary: Update ultimate beneficial owners by id for loan SME customer
      description: Update an ultimate beneficial owner.
      operationId: 29bf56e3-6f78-4d2d-9a88-bc6442e3fa6b
      parameters:
        - name: smeId
          in: path
          required: true
          schema:
            type: string
          description: smeId
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: id
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateUltimateBeneficialOwnerV6'
        required: true
      responses:
        '200':
          description: After created ultimate beneficial owner information.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UltimateBeneficialOwnerV6'
        '400':
          description: >-
            Bad request. The parameters in the URL or request body are invalid.
            Please refer to the error message for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '401':
          description: >-
            Unauthorized. The token is invalid/expired or the SSN does not exist
            in the VP. Please refer to the error message for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '403':
          description: >-
            Forbidden. No access rights or access frequency too fast. Please
            refer to the error message for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '500':
          description: >-
            Internal server error. Please refer to the error message for
            details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
    delete:
      tags:
        - Loan Customers
      summary: Delete ultimate beneficial owners by id for loan SME customer
      description: Delete an ultimate beneficial owner by id.
      operationId: 491868a1-aab1-4d02-a9fa-fe332ba2a0a4
      parameters:
        - name: smeId
          in: path
          required: true
          schema:
            type: string
          description: smeId
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: smeId
      responses:
        '204':
          description: Delete ultimate beneficial owner successfully.
        '400':
          description: >-
            Bad request. The parameters in the URL or request body are invalid.
            Please refer to the error message for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '401':
          description: >-
            Unauthorized. The token is invalid/expired or the SSN does not exist
            in the VP. Please refer to the error message for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '403':
          description: >-
            Forbidden. No access rights or access frequency too fast. Please
            refer to the error message for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '500':
          description: >-
            Internal server error. Please refer to the error message for
            details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
  /api/deposit/v1/externalParties/documents:
    post:
      tags:
        - ExternalParties
      summary: Upload file (DEPOSIT ONLY)
      description: |
        ## Allowed VP token
        Security Token
        ## Allowed roles
        Trusted Party
        ## Changelog
        - v14.0.0 : API added.
      parameters:
        - name: X-AUTH-TOKEN
          in: header
          description: Security token
          required: true
          schema:
            type: string
      operationId: deposit-external-parties-upload-document
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                correlationId:
                  type: string
                  required: false
                file:
                  type: string
                  format: binary
        description: The api enables uploading a file.
        required: true
      responses:
        '201':
          description: File uploaded successfully.
          content:
            application/json:
              schema:
                type: object
                items:
                  $ref: '#/components/schemas/DocumentSubmitResponseAPI'
        '400':
          description: Wrong request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '403':
          description: Prohibiting block. Please check the error message.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
  /api/deposit/v5/accounts:
    post:
      tags:
        - Deposit Accounts
      summary: Create deposit account
      description: >-
        ## Allowed VP token

        Access Token,Security Token

        ## Allowed roles

        Trusted Party, My Pages, Deposit Integrator Core

        Create deposit accountCreate deposit account

        ## Changelog

        - v30.0.0 : Add a field `withdrawalFeeInPercentageByAccruedInterest` in
        the response.

        - v26.0.0 : Remove fields `delayedWithdrawalsEnabled`,
        `delayedWithdrawalsYear`, `delayedWithdrawalsDay` in the response

        - v23.0.0 :
            - Add an field `currentInterestBalance` in the response.
            - Add an field `product.permitFreeWithdrawalFromInterestBalance` in the response.
        - v18.0.0 : New fields `product.directWithdrawToExternalAccount` in
        response.

        - v15.0.0 : New fields `product.deltaInterestRate`,`kycAnswered` in
        response.

        - v14.0.0 : New fields `product.trustAccount`,`product.taxExempt` in
        response.
      operationId: 9e162f25-a513-4859-9221-733d4b1b6a77
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DepositCreateAccountBody'
        required: true
        description: ''
      responses:
        '201':
          description: Account information.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/V1Account'
        '202':
          description: >-
            Accept account creation request, but requires manual review in the
            backend.
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
  /api/deposit/v5/accounts/search:
    get:
      tags:
        - Deposit Accounts
      summary: Search account by account number. (v5) (DEPOSIT ONLY)
      description: >-
        ## Allowed VP token

        Access Token, Security Token

        ## Allowed roles

        My Pages, Trusted Party, Deposit Integrator Core

        ## Changelog

        - v30.0.0 : Add a field `withdrawalFeeInPercentageByAccruedInterest` in
        the response.

        - v26.0.0 : Remove fields `delayedWithdrawalsEnabled`,
        `delayedWithdrawalsYear`, `delayedWithdrawalsDay` in the response

        - v23.0.0 :
            - Add an field `currentInterestBalance` in the response.
            - Add an field `product.permitFreeWithdrawalFromInterestBalance` in the response.
        - v22.0.0 : API added.
      operationId: searchDepositAccountByAccountNumber
      parameters:
        - name: accountNumber
          in: query
          description: The account number of account to query.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Account information.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/V1AccountSearchResultAPI'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      security:
        - X-AUTH-TOKEN: []
        - Authorization: []
        - accessTokenCookie: []
  /api/deposit/v5/accounts/{accountId}:
    put:
      tags:
        - Deposit Accounts
      summary: Update deposit account by id
      description: >-
        ## General description

        Update deposit account by id (v5) (DEPOSIT ONLY)

        ## Changelog

        - v30.0.0 : Add a field `withdrawalFeeInPercentageByAccruedInterest` in
        the response.

        - v26.0.0 : Remove fields `delayedWithdrawalsEnabled`,
        `delayedWithdrawalsYear`, `delayedWithdrawalsDay` in the response

        - v23.0.0 :
            - Add an field `currentInterestBalance` in the response.
            - Add an field `product.permitFreeWithdrawalFromInterestBalance` in the response.
        - v18.0.0 : New fields `product.directWithdrawToExternalAccount` in
        response.

        - v15.0.0: New fields `product.deltaInterestRate`,`kycAnswered` in
        response.

        - v14.0.0 : New fields `product.trustAccount`,`product.taxExempt` in
        response.
      operationId: 07b940b4-5780-45ea-8739-4e3b906773e8
      parameters:
        - name: X-AUTH-TOKEN
          in: header
          description: Access token
          required: true
          schema:
            type: string
        - name: accountId
          in: path
          description: The id of account that need to update nick name.
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DepositUpdateNickNameAccountBody'
        required: true
      responses:
        '200':
          description: Update the nick name for account.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/V1Account'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
  /api/deposit/v5/accounts/{accountId}/historicalInterestRates:
    get:
      tags:
        - Deposit Accounts
      summary: Get historical interest rates for a deposit account
      description: |-
        ## General description
        Get historical interest rates for a deposit account
        ## Allowed VP token
        Access Token
        ## Allowed roles
        My Pages
        ## Changelog
        - v28.0.0 : API added.
      operationId: getHistoricalInterestRatesForDepositAccount
      parameters:
        - name: accountId
          in: path
          description: The id of account for which to get historical interest rates.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Get the all historical interest rates for account list.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AccountHistoricalInterest'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      security:
        - X-AUTH-TOKEN: []
        - Authorization: []
        - accessTokenCookie: []
  /api/deposit/v5/accounts/{accountId}/charges:
    get:
      tags:
        - Deposit Accounts-Transfer
      summary: Calculate charges of close/transfer/withdraw on a deposit account
      description: |
        ## Allowed VP token
        Access Token, Security Token
        ## Allowed roles
        Trusted Party, My Pages, AISP
      operationId: 219a57be-e041-4b3d-ad85-f8fed784a8bb
      parameters:
        - name: accountId
          in: path
          description: The account id what you want to query,such as 50001
          required: true
          schema:
            type: string
        - name: operation
          in: query
          description: Indicate which operation would you like to calculate the charge for
          required: true
          schema:
            type: string
            enum:
              - close
              - transfer
              - withdraw
        - name: amount
          in: query
          description: Decimal, it is required in transfer, withdraw
          schema:
            type: number
        - name: serialIdOfExternalAccount
          in: query
          description: >-
            The serial id of external account, it is sequence, from 1 to
            9223372036854775807. It is required in withdraw, close
          schema:
            type: string
        - name: serialIdOfToAccount
          in: query
          description: The serial id of account, such as 50002, it is required in transfer
          schema:
            type: string
      responses:
        '200':
          description: Calculate charges successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DepositChargesCalcAccount'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
  /api/deposit/v5/accounts/{accountId}/close:
    post:
      tags:
        - Deposit Accounts-Closure
      summary: Close deposit account by id
      description: |
        ## Allowed VP token
        Access Token,Security Token
        ## Allowed roles
        Trusted Party, My Pages, Deposit Integrator Core
      operationId: 81712f4d-06d5-4eeb-9e82-1dbdf112abc3
      parameters:
        - name: accountId
          in: path
          description: The id of close account.
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DepositCloseAccountBody'
        required: true
      responses:
        '200':
          description: Close account successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DepositCloseAccount'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
  /api/deposit/v5/accounts/{accountId}/closingProcesses/signUrl:
    post:
      tags:
        - Deposit Accounts-Closure
      summary: Close deposit account with signature. (DEPOSIT ONLY)
      description: |
        ## Allowed VP token
        Access Token
        ## Allowed roles
        My Pages
        ## Changelog
        - v15.0.0 : New query parameter `companyRepresentativeId`.
        - v14.0.0 : API added.
      operationId: startAccountClosureProcessWithSignUrl
      parameters:
        - name: X-AUTH-TOKEN
          in: header
          description: Access token
          required: true
          schema:
            type: string
        - name: Accept-Language
          in: header
          description: The locale to be used on signature page
          required: false
          schema:
            type: string
        - name: accountId
          in: path
          description: The id of account to close.
          required: true
          schema:
            type: string
        - name: companyRepresentativeId
          in: query
          description: The company representative id what you want to query.
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CloseAccountSignUrlAPI'
        required: true
      responses:
        '200':
          description: >-
            The URL to be signed is prepared successfully and is included in the
            body of the response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SignTextMessageResult'
        '400':
          description: Wrong request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '403':
          description: Prohibiting block. Please check the error message.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
  /api/deposit/v5/accounts/{accountId}/closingProcesses/{requestId}:
    get:
      tags:
        - Deposit Accounts-Closure
      summary: Get status of deposit account closing process. (DEPOSIT ONLY)
      description: |
        ## Allowed VP token
        Access Token
        ## Allowed roles
        My Pages
        ## Changelog
        - v14.0.0 : API added.
      operationId: checkStatusOfAccountClosureProcessWithSignUrl
      parameters:
        - name: X-AUTH-TOKEN
          in: header
          description: Access token
          required: true
          schema:
            type: string
        - name: accountId
          in: path
          description: The id of account to close.
          required: true
          schema:
            type: string
        - name: requestId
          in: path
          description: The id of signature request
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Status of account closing process.
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/SignTextMessageStatusResult'
                  - $ref: '#/components/schemas/DepositCloseAccount'
        '400':
          description: Wrong request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '403':
          description: Prohibiting block. Please check the error message.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
  /api/deposit/v5/accounts/{accountId}/externalWithdrawal:
    post:
      tags:
        - Deposit Accounts-Transfer
      summary: Create an external withdrawal from trusted parties.
      description: >-
        Create an external withdrawal from trusted parties. (v5) (DEPOSIT ONLY)
        (Trusted party role)
      operationId: e78ee902-46d8-4d4d-b0fe-fe7216a6e3fc
      parameters:
        - name: X-AUTH-TOKEN
          in: header
          description: Security token
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DepositAccountExternalWithdrawal'
        required: true
      responses:
        '200':
          description: Returns the execution result
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string
                  amount:
                    type: number
                    format: double
                  withdrawFee:
                    type: number
                    format: double
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
  /api/deposit/v5/accounts/{accountId}/externalWithdrawal/validation:
    post:
      tags:
        - Deposit Accounts-Transfer
      summary: Validate the availability of withdrawal from a deposit account
      description: >-
        Validate the availability of withdrawal from a deposit account (v5)
        (DEPOSIT ONLY) (Trusted party role)
      operationId: 9be56fbf-599f-4461-b8cd-8e80612cae42
      parameters:
        - name: X-AUTH-TOKEN
          in: header
          description: Security token
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DepositAccountExternalWithdrawalValidation'
        required: true
      responses:
        '200':
          description: Return the verification result
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string
                  amount:
                    type: number
                    format: double
                  withdrawFee:
                    type: number
                    format: double
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
  /api/deposit/v5/accounts/{accountId}/notice:
    post:
      tags:
        - Deposit Accounts
      summary: Active give notice to deposit account
      description: >-
        ## General description

        Active give notice to an deposit account. (v5) (DEPOSIT ONLY)

        ## Changelog

        - v30.0.0 : Add a field `withdrawalFeeInPercentageByAccruedInterest` in
        the response.

        - v26.0.0 : Remove fields `delayedWithdrawalsEnabled`,
        `delayedWithdrawalsYear`, `delayedWithdrawalsDay` in the response

        - v23.0.0 :
            - Add an field `currentInterestBalance` in the response.
            - Add an field `product.permitFreeWithdrawalFromInterestBalance` in the response.
        - v18.0.0 : New fields `product.directWithdrawToExternalAccount` in
        response.

        - v15.0.0 : New fields `product.deltaInterestRate`,`kycAnswered` in
        response.

        - v14.0.0 : New fields `product.trustAccount`,`product.taxExempt` in
        response.
      operationId: f7873d92-5628-4b55-bf6c-64f3133500b2
      parameters:
        - name: X-AUTH-TOKEN
          in: header
          description: Access token
          required: true
          schema:
            type: string
        - name: accountId
          in: path
          description: The id of close account.
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DepositNoticeAccountBody'
        required: true
      responses:
        '200':
          description: Notice of account was successful.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/V1Account'
        '400':
          description: Wrong request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '403':
          description: Prohibiting block. Please check the error message.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
  /api/deposit/v5/accounts/{accountId}/onetimeDirectDebitDeposit:
    post:
      tags:
        - Deposit Mandates
      summary: Create one-time direct debit on deposit account
      description: |
        ## General description
        Create one time direct debit on a deposit account.
        ## Changelog
        - v22.0.0 : 
          - Add field `sendWithdrawRequestDate` in the response.
      operationId: 3286eea5-e834-4581-b566-50448aba5049
      parameters:
        - name: accountId
          in: path
          description: The id of direct debit deposit account.
          required: true
          schema:
            type: string
        - name: X-AUTH-TOKEN
          in: header
          description: Access token
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DepositOnetimeDirectDebitDepositBody'
        required: true
      responses:
        '200':
          description: Create one time direct debit deposit successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OnetimeSavings'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
  /api/deposit/v5/accounts/{accountId}/pendingTransactions:
    get:
      tags:
        - Deposit Accounts-Transfer
      summary: Get pending transactions for deposit account
      description: Get pending transactions by accountId. (v5) (DEPOSIT ONLY)
      operationId: 9cbbdcec-0be9-4235-8406-7d0c5e8f29ff
      parameters:
        - name: X-AUTH-TOKEN
          in: header
          description: Access token
          required: true
          schema:
            type: string
        - name: accountId
          in: path
          description: The account id what you want to query, such as 50001
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Get transactions successfully.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PendingTransaction'
        '400':
          description: Wrong request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '403':
          description: Prohibiting block. Please check the error message.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
  /api/deposit/v5/accounts/{accountId}/pendingTransactions/{transactionId}:
    delete:
      tags:
        - Deposit Accounts-Transfer
      summary: Delete a pending transaction for deposit account
      description: Delete a pending transaction. (v5) (DEPOSIT ONLY)
      operationId: b6dff2e4-9a12-4d3b-9810-1155d96ba03e
      parameters:
        - name: X-AUTH-TOKEN
          in: header
          description: Access token
          required: true
          schema:
            type: string
        - name: accountId
          in: path
          description: The account id what you want to query, such as 50001
          required: true
          schema:
            type: string
        - name: transactionId
          in: path
          description: The transaction id what you want to query, such as 50001
          required: true
          schema:
            type: number
        - name: companyRepresentativeId
          in: query
          description: >-
            The company representative id. Required when requester is company
            representative.
          schema:
            type: string
      responses:
        '204':
          description: The pending transaction deleted successfully.
        '400':
          description: Wrong request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '403':
          description: Prohibiting block. Please check the error message.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
  /api/deposit/v5/accounts/{accountId}/pendingTransactions/{transactionId}/approve:
    post:
      tags:
        - Deposit Accounts-Transfer
      summary: Approve the pending transaction for deposit account
      description: Approve the pending transaction. (v5) (DEPOSIT ONLY)
      operationId: 494ac4a5-074f-452e-8885-004eefa95807
      parameters:
        - name: X-AUTH-TOKEN
          in: header
          description: Access token
          required: true
          schema:
            type: string
        - name: accountId
          in: path
          description: The account id what you want to query, such as 50001
          required: true
          schema:
            type: string
        - name: transactionId
          in: path
          description: The transaction id what you want to query, such as 50001
          required: true
          schema:
            type: number
      responses:
        '204':
          description: The pending transaction approved successfully.
        '400':
          description: Wrong request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '403':
          description: Prohibiting block. Please check the error message.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
  /api/deposit/v5/accounts/{accountId}/pendingTransactions/{transactionId}/closingApprovalProcesses/signUrl:
    post:
      tags:
        - Deposit Accounts-Closure
      summary: >-
        Approve the pending transaction (deposit account closure) with
        signature. (DEPOSIT ONLY)
      description: |
        ## Allowed VP token
        Access Token
        ## Allowed roles
        My Pages
        ## Changelog
        - v14.0.0 : API added.
      operationId: startPendingTransactionAccountClosureProcessWithSignUrl
      parameters:
        - name: X-AUTH-TOKEN
          in: header
          description: Access token
          required: true
          schema:
            type: string
        - name: Accept-Language
          in: header
          description: The locale to be used on signature page
          required: false
          schema:
            type: string
        - name: accountId
          in: path
          description: The id of account to close.
          required: true
          schema:
            type: string
        - name: transactionId
          in: path
          description: The id of transaction to approve.
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApprovePendingTransactionSignUrlAPI'
        required: true
      responses:
        '200':
          description: >-
            The URL to be signed is prepared successfully and is included in the
            body of the response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SignTextMessageResult'
        '400':
          description: Wrong request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '403':
          description: Prohibiting block. Please check the error message.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
  /api/deposit/v5/accounts/{accountId}/pendingTransactions/{transactionId}/closingApprovalProcesses/{requestId}:
    get:
      tags:
        - Deposit Accounts-Closure
      summary: >-
        Get status of the pending transaction (deposit account closure) consent
        signature. (DEPOSIT ONLY)
      description: |
        ## Allowed VP token
        Access Token
        ## Allowed roles
        My Pages
        ## Changelog
        - v14.0.0 : API added.
      operationId: checkStatusOfPendingTransactionAccountClosureProcessWithSignUrl
      parameters:
        - name: X-AUTH-TOKEN
          in: header
          description: Access token
          required: true
          schema:
            type: string
        - name: accountId
          in: path
          description: The id of account to close.
          required: true
          schema:
            type: string
        - name: transactionId
          in: path
          description: The id of transaction to approve.
          required: true
          schema:
            type: string
        - name: requestId
          in: path
          description: The id of signature request
          required: true
          schema:
            type: string
      responses:
        '200':
          description: >-
            Status of the pending transaction (account closure) consent
            signature.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SignTextMessageStatusResult'
        '204':
          description: Approval process of account closure is finished.
        '400':
          description: Wrong request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '403':
          description: Prohibiting block. Please check the error message.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
  /api/deposit/v5/accounts/{accountId}/pendingTransactions/{transactionId}/ignoreNotification:
    put:
      tags:
        - Deposit Accounts-Transfer
      summary: Ignore notification of pending transaction for deposit account
      description: Ignore notification for the pending transaction. (v5) (DEPOSIT ONLY)
      operationId: 880b5ba3-f1e0-46ba-a2a9-2e03294db425
      parameters:
        - name: X-AUTH-TOKEN
          in: header
          description: Access token
          required: true
          schema:
            type: string
        - name: accountId
          in: path
          description: The account id what you want to query, such as 50001
          required: true
          schema:
            type: string
        - name: transactionId
          in: path
          description: The transaction id what you want to query, such as 50001
          required: true
          schema:
            type: number
      responses:
        '204':
          description: Notification for the pending transaction set to ignore.
        '400':
          description: Wrong request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '403':
          description: Prohibiting block. Please check the error message.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
  /api/deposit/v5/accounts/{accountId}/pendingTransactions/{transactionId}/reject:
    post:
      tags:
        - Deposit Accounts-Transfer
      summary: Reject the pending transaction for deposit account
      description: Reject the pending transaction. (v5) (DEPOSIT ONLY)
      operationId: 82c18b0f-5713-4d59-8583-d0da3bf49b48
      parameters:
        - name: X-AUTH-TOKEN
          in: header
          description: Access token
          required: true
          schema:
            type: string
        - name: accountId
          in: path
          description: The account id what you want to query, such as 50001
          required: true
          schema:
            type: string
        - name: transactionId
          in: path
          description: The transaction id what you want to query, such as 50001
          required: true
          schema:
            type: number
      responses:
        '204':
          description: The pending transaction rejected successfully.
        '400':
          description: Wrong request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '403':
          description: Prohibiting block. Please check the error message.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
  /api/deposit/v5/accounts/{accountId}/transactions:
    get:
      tags:
        - Deposit Accounts-Transactions
      summary: Get transactions for deposit account
      description: |
        ## Allowed VP token
        Access Token,Security Token
        ## Allowed roles
        My Pages, Trusted Party, Deposit Integrator Core
      operationId: e6c5d65b-03a8-4e04-9b61-0f2320fcc76b
      parameters:
        - name: accountId
          in: path
          description: The account id what you want to query,such as 50001
          required: true
          schema:
            type: string
        - name: startDate
          in: query
          description: The start date what you want to query. format is yyyy-MM-dd
          schema:
            type: string
        - name: endDate
          in: query
          description: The end date what you want to query. format is yyyy-MM-dd
          schema:
            type: string
        - name: countPerPage
          in: query
          description: The transactions total count number in per page.
          schema:
            type: integer
            default: 10
        - name: currentPage
          in: query
          description: The page number.
          schema:
            type: integer
            default: 1
        - name: sortOrder
          in: query
          description: ASC, DESC
          schema:
            type: string
      responses:
        '200':
          description: Get transactions successfully.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DepositAccountTransactions'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
  /api/deposit/v5/accounts/{accountId}/transfer:
    post:
      tags:
        - Deposit Accounts-Transfer
      summary: Transfer money between deposit accounts.
      description: Transfer money between deposit accounts. (v5) (DEPOSIT ONLY)
      operationId: a4c4c2c6-d2e7-43d2-8814-3aac53fb047a
      parameters:
        - name: X-AUTH-TOKEN
          in: header
          description: Access token
          required: true
          schema:
            type: string
        - name: accountId
          in: path
          description: The id of transfer account.
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DepositTransferAccountBody'
        required: true
      responses:
        '200':
          description: Transfer successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DepositTransferAccount'
              examples:
                response example:
                  value:
                    success: true
                    amount: 1000
                    withdrawFee: 5
        '202':
          description: >-
            Transfer action accepted, return the response with
            pendingTransactionId.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DepositTransferAccount'
              examples:
                delay transfer response example:
                  value:
                    success: true
                    amount: 1000
                    withdrawFee: 5
                    pendingTransactionId: '101'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
  /api/deposit/v5/accounts/{accountId}/withdrawal:
    post:
      tags:
        - Deposit Accounts-Transfer
      summary: Create withdrawal from a deposit account
      description: |
        ## Allowed VP token
        Access Token,Security Token
        ## Allowed roles
        Trusted Party, My Pages, PISP
        ## Changelog
        - v26.2.0 : New request header `Request-Id`.
        - v26.2.0 : New http response with http code `429`.
      operationId: b68a3f6c-647f-4c70-a7e7-09154495cbbc
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DepositAccountWithdrawal'
        required: true
      responses:
        '200':
          description: Returns the execution result
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string
                  translationKey:
                    $ref: '#/components/schemas/ErrorMessageTranslationKey'
                  amount:
                    type: number
                    format: double
                  withdrawFee:
                    type: number
                    format: double
        '429':
          description: Duplicate request found by checking the Request-Id
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
              examples:
                Example 1:
                  value:
                    message: API rate limit exceeded
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      parameters:
        - schema:
            type: string
            maxLength: 36
          in: header
          name: Request-Id
          description: >-
            Request-Id expires after 24 hours as default. After this time
            period, requests using duplicate keys will be treated as new
            requests. Request body duplicated check expires after 3 minutes as
            default. You can get the actual expired time by speaking to the
            Customer Success Manager. We recommend using request id to
            distinguish duplicate requests. Otherwise, the same request body is
            not allowed to be repeated within a period of time, and there is a
            certain probability that it will fail, although if you want to
            withdraw the same amount twice at the same time.
  /api/deposit/v5/accounts/{accountId}/getDelayedTime:
    get:
      tags:
        - Deposit Accounts-Transfer
      summary: Get delayed withdrawal and transfer time from a deposit account
      description: |
        ## Allowed VP token
        Access Token,Security Token
        ## Allowed roles
        Trusted Party, My Pages, PISP, Deposit Integrator Core
      operationId: get-delayed-time-from-deposit-account
      parameters:
        - name: accountId
          in: path
          description: The id of the from account.
          required: true
          schema:
            type: string
        - name: toAccountId
          in: query
          description: >-
            Skip this target account id parameter if you withdrawal the money
            out of VP system
          schema:
            type: string
      responses:
        '200':
          description: Returns the delayed time information
          content:
            application/json:
              schema:
                type: object
                properties:
                  delayedTime:
                    type: integer
                  timeUnit:
                    type: string
                    enum:
                      - DAYS
                  delayed:
                    type: boolean
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
  /api/deposit/v5/directDebitMandates/me/agreementProcesses/signUrl:
    post:
      tags:
        - Deposit Mandates
      summary: Create deposit direct debit mandate with signature (DEPOSIT ONLY)
      description: |
        ## Allowed VP token
        Access Token
        ## Allowed roles
        My Pages
        ## Changelog
        - v14.0.0 : API added.
      operationId: startDirectDebitCreationProcessWithSignUrl
      parameters:
        - name: X-AUTH-TOKEN
          in: header
          description: Access token
          required: true
          schema:
            type: string
        - name: Accept-Language
          in: header
          description: The locale to be used on signature page
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateMandateSignUrlRequest'
        required: true
      responses:
        '200':
          description: >-
            The URL to be signed is prepared successfully and is included in the
            body of the response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SignTextMessageResult'
        '400':
          description: Wrong request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '403':
          description: Prohibiting block. Please check the error message.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
  /api/deposit/v5/directDebitMandates/me/agreementProcesses/{requestId}:
    get:
      tags:
        - Deposit Mandates
      summary: >-
        Get status of deposit direct debit mandate agreement process (DEPOSIT
        ONLY)
      description: |-
        ## Allowed VP token
        Access Token
        ## Allowed roles
        My Pages
        ## Changelog
        - v22.0.0 : Add field `bankName` in the mandate response
        - v14.0.0 : API added.
      operationId: checkStatusOfDirectDebitCreationProcessWithSignUrl
      parameters:
        - name: X-AUTH-TOKEN
          in: header
          description: Access token
          required: true
          schema:
            type: string
        - name: requestId
          in: path
          description: The id of signature request
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Status for direct debit mandate agreement process.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MandateSignStatusAPI'
        '400':
          description: Wrong request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '403':
          description: Prohibiting block. Please check the error message.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
  /api/deposit/v5/directDebitMandates/me/monthlySavings:
    post:
      tags:
        - Deposit Mandates
      summary: Create monthly savings for deposit account restricted by access token
      description: >-
        Create monthly savings on deposit account restricted by access token
        (v5) (DEPOSIT ONLY)
      operationId: 84f13f06-e55d-4562-85f1-6c843fb17e61
      parameters:
        - name: X-AUTH-TOKEN
          in: header
          description: Access token
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateMonthlySavings'
        required: true
      responses:
        '200':
          description: Monthly savings created successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MonthlySavings'
        '400':
          description: Wrong request to get create monthly savings.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '401':
          description: Unauthorized.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '403':
          description: Prohibiting block.Please check the error message.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '500':
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
  /api/deposit/v5/directDebitMandates/me/monthlySavings/nextDirectDebitExecutionDate:
    get:
      tags:
        - Deposit Mandates
      summary: >-
        Get next direct debit execution date for deposit customer restricted by
        access token
      description: Get next direct debit execution date. (v5) (DEPOSIT ONLY)
      operationId: b5715864-1e0b-4ac3-a6bc-f596e59d60aa
      parameters:
        - name: X-AUTH-TOKEN
          in: header
          description: Access token
          required: true
          schema:
            type: string
        - name: performDayEachMonth
          in: query
          description: Day of month to execute direct debit
          required: true
          schema:
            type: string
        - name: monthlySavingsReferenceId
          in: query
          description: >-
            Reference id of monthly savings for which next direct debit
            execution date is requested for given perform day of month
          schema:
            type: string
      responses:
        '200':
          description: Account information.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NextDirectDebitExecutionDate'
        '400':
          description: Wrong request to get next direct debit execution date.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '401':
          description: Unauthorized.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '403':
          description: Prohibiting block.Please check the error message.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '500':
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
  /api/deposit/v5/directDebitMandates/me/monthlySavings/{referenceId}:
    put:
      tags:
        - Deposit Mandates
      summary: Update monthly savings for deposit customer restricted by access token
      description: Update monthly savings. (v5) (DEPOSIT ONLY)
      operationId: fddbf808-ae3d-4fab-8a32-bf23d5128de2
      parameters:
        - name: X-AUTH-TOKEN
          in: header
          description: Access token
          required: true
          schema:
            type: string
        - name: referenceId
          in: path
          description: Reference id of monthly savings.
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EditMonthlySavings'
        required: true
      responses:
        '200':
          description: Monthly savings updated successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MonthlySavings'
        '400':
          description: Wrong request to edit monthly savings.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '401':
          description: Unauthorized.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '403':
          description: Prohibiting block.Please check the error message.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '500':
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
    delete:
      tags:
        - Deposit Mandates
      summary: Delete monthly savings for deposit customer restricted by access token
      description: Delete monthly savings. (v5) (DEPOSIT ONLY)
      operationId: c555cb00-d410-4f58-9a68-c3851bbc51e9
      parameters:
        - name: X-AUTH-TOKEN
          in: header
          description: Access token
          required: true
          schema:
            type: string
        - name: referenceId
          in: path
          description: Reference id of monthly savings.
          required: true
          schema:
            type: string
      responses:
        '204':
          description: Monthly savings deleted successfully.
        '400':
          description: Wrong request to edit monthly savings.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '401':
          description: Unauthorized.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '403':
          description: Prohibiting block.Please check the error message.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '500':
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
  /api/deposit/v5/products:
    get:
      tags:
        - Deposit Products
      summary: Get deposit products
      description: >-
        ## Allowed VP token

        Access Token,Security Token

        ## Allowed roles

        Trusted Party, My Pages, Deposit Integrator Core

        ## Changelog

        - v30.0.0 : Add a field `withdrawalFeeInPercentageByAccruedInterest` in
        the response.

        - v26.0.0 : Remove fields `delayedWithdrawalsEnabled`,
        `delayedWithdrawalsYear`, `delayedWithdrawalsDay` in the response

        - v23.0.0 : Add an field `permitFreeWithdrawalFromInterestBalance` in
        the response.

        - v18.0.0 : New fields `directWithdrawToExternalAccount` in response.

        - v15.0.0 : New field `deltaInterestRate` in response.

        - v14.0.0 : New fields `trustAccount`,`taxExempt` in response.
      operationId: a2e6cee0-2caa-4e33-96a8-08a8c14a063e
      parameters:
        - name: companyFlag
          in: query
          description: >-
            Company for *true*, otherwise for *false*, if missed, will query all
            products.
          schema:
            type: string
      responses:
        '200':
          description: Get all consumer customer products or company products.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DepositProduct'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
  /api/deposit/v5/products/{productId}/termsAndConditions:
    get:
      tags:
        - Deposit Products
      summary: Get terms and conditions file for deposit product
      description: |
        ## Allowed VP token
        Access Token,Security Token
        ## Allowed roles
        Trusted Party, My Pages, Deposit Integrator Core
      operationId: 8ed0284d-3671-4798-b3f0-c344c7509d2a
      parameters:
        - name: productId
          in: path
          description: The id of the product.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Terms and conditions file for specific product
          headers:
            content-disposition:
              schema:
                type: string
                description: File name
          content:
            application/octet-stream:
              schema:
                type: string
                format: binary
        '401':
          description: Unauthorized.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '404':
          description: Product with specific id does not exist.
          content:
            application/octet-stream:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
  /api/deposit/v6/accounts/{accountId}/kyc-answers:
    post:
      tags:
        - Deposit Accounts-KYC answer
      summary: Create KYC Answers for deposit account. (DEPOSIT ONLY)
      description: |
        ## General description
        Create KYC Answers for deposit account by accountId. (DEPOSIT ONLY)
        ## Allowed VP token
        Access Token
        ## Allowed roles
        My Pages
        ## Changelog
        - v21.0.0: API added.
      operationId: post-deposit-v6-accounts-kyc-answers
      parameters:
        - name: accountId
          in: path
          description: The account id what you want to query,such as 50001
          required: true
          schema:
            type: string
      requestBody:
        description: >-
          Some question answer is mandatory due to the forms definition, the
          value of the answer will be validated due to the type of the question
          item, the system return 400 when the validation fails.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/KycAnswersRequestBody'
        required: true
      responses:
        '200':
          description: Return the saved answers of account.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KycAnswersResponseV2'
        '400':
          description: Parameter invalid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '401':
          description: Unauthorized.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '403':
          description: Prohibiting block.Please check the error message.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      x-stoplight:
        id: 0j43t3ey15wjt
      security:
        - Authorization: []
  /api/deposit/v6/accounts/{accountId}/kyc-answers/latest:
    get:
      tags:
        - Deposit Accounts-KYC answer
      summary: Get the latest KYC answer of a deposit account. (DEPOSIT ONLY)
      description: |
        ## General description
        Get the latest KYC answer of a deposit account. (DEPOSIT ONLY)
        ## Allowed VP token
        Access Token
        ## Allowed roles
        My Pages
        ## Changelog
        - v21.0.0: API added.
      operationId: get-deposit-v6-accounts-kyc-answers
      parameters: []
      responses:
        '200':
          description: Return the saved answers of deposit account.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KycAnswersResponseV2'
        '204':
          description: No content of questions.
        '400':
          description: Parameter invalid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '401':
          description: Unauthorized.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '403':
          description: Prohibiting block.Please check the error message.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      x-stoplight:
        id: o8x85685g37bh
      security:
        - Authorization: []
  /api/deposit/v6/accounts/{accountId}/questionnaires/latest/kyc:
    get:
      tags:
        - KYC
      summary: Get the latest KYC of a deposit account. (DEPOSIT ONLY)
      description: |
        ## General description
        Get the latest KYC of a deposit account. (DEPOSIT ONLY)
        ## Allowed VP token
        Access Token
        ## Allowed roles
        My Pages
        ## Changelog
        - v23.0.0: API added.
      operationId: get-deposit-v6-accounts-questionnaires-latest-kyc
      parameters: []
      responses:
        '200':
          description: Return questionnaires list information.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KycQuestionnaireResponse'
        '204':
          description: No content of questions.
        '400':
          description: Parameter invalid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '401':
          description: Unauthorized.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '403':
          description: Prohibiting block.Please check the error message.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      security:
        - Authorization: []
  /api/document/v1/signRequests:
    post:
      tags:
        - Signing
      summary: Initiate document signing process
      description: Initiate document signing process if possible
      operationId: 810d6068-c57f-435e-a729-8cf69b75f095
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SignRequest'
        required: true
      responses:
        '200':
          description: Return the created sign request ID .
          content:
            application/json:
              schema:
                type: string
        '400':
          description: Request validation failed, please check the error message
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
    get:
      tags:
        - Signing
      summary: Query for document signing process information
      description: Query for document signing process information
      operationId: 7e63b130-c556-4b43-847c-1430b617d236
      parameters:
        - name: documentId
          in: query
          description: Document ID
          schema:
            type: string
        - name: applicationId
          in: query
          description: Application ID
          schema:
            type: string
      responses:
        '200':
          description: Return the found sign request information.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SignRequestInfo'
        '400':
          description: Request validation failed, please check the error message
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
  /api/document/v1/signRequests/{id}:
    get:
      tags:
        - Signing
      summary: Get document signing request
      description: Get document signing request
      operationId: fcfd1089-48ed-4373-8d2b-c0d2f0d97542
      parameters:
        - name: id
          in: path
          description: Sign request ID
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Return the sign request information.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SignRequestInfo'
        '400':
          description: Request validation failed, please check the error message
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
    delete:
      tags:
        - Signing
      summary: Cancel document signing process
      description: Initiate document signing process if possible
      operationId: 95ad172f-a146-4047-bf58-5bfcabd08143
      parameters:
        - name: id
          in: path
          description: Sign request ID
          required: true
          schema:
            type: string
      responses:
        '204':
          description: Sign process is cancelled
        '400':
          description: Request validation failed, please check the error message
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
  /api/identity/v1/ssn/formatted:
    get:
      tags:
        - Identity
      summary: >-
        Get the SSN formatted with '-' and optionally masked. Exact formatting
        depends on VP installation country. (DEPOSIT ONLY)
      description: >-
        Get the SSN formatted with '-' and optionally masked. Exact formatting
        depends on VP installation country. (DEPOSIT ONLY)
      operationId: 40424fba-6383-49d0-ad99-8081b92470b5
      parameters:
        - name: X-AUTH-TOKEN
          in: header
          description: Predefined token
          required: true
          schema:
            type: string
        - name: ssn
          in: query
          description: SSN
          schema:
            type: string
        - name: mask
          in: query
          description: Mask the middle part of SSN with '****'.
          schema:
            type: boolean
            default: false
      responses:
        '200':
          description: Return the SSN formatted string.
          content:
            application/json:
              schema:
                type: string
        '400':
          description: Parameter invalid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '401':
          description: Unauthorized.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
  /api/kyc/v1/configuration:
    get:
      tags:
        - KYC
      summary: Get the level of the KYC questionnaire. (DEPOSIT ONLY)
      description: Get the level of the KYC questionnaire. (DEPOSIT ONLY)
      operationId: eb2e2636-639f-4724-97e9-12a07242b3e7
      parameters:
        - name: X-AUTH-TOKEN
          in: header
          description: Predefined token (with My Pages role)
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Return the configuration related to current kyc.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KycConfigurationResponse'
        '400':
          description: Parameter invalid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '401':
          description: Unauthorized.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '403':
          description: Prohibiting block.Please check the error message.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
  /api/kyc/v1/questionnaires/latest:
    get:
      tags:
        - KYC
      summary: >-
        Get the currently defined set of questions and answer alternatives.
        (DEPOSIT ONLY)
      description: >-
        Get the currently defined set of questions and answer alternatives.
        (DEPOSIT ONLY)
      operationId: 7e114614-de77-4bfc-a89d-d611c8733977
      parameters:
        - name: X-AUTH-TOKEN
          in: header
          description: Predefined token (with My Pages role)
          required: true
          schema:
            type: string
        - name: questionnaireLevel
          in: query
          schema:
            type: string
          description: >-
            CUSTOMER_LEVEL or ACCOUNT_LEVEL, parameter is required when
            questionnaire configuration is set to ACCOUNTS_AND_CUSTOMER
      responses:
        '200':
          description: Return questionnaires list information.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KycQuestionnaireResponse'
        '204':
          description: No content of questions.
        '400':
          description: Parameter invalid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '401':
          description: Unauthorized.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '403':
          description: Prohibiting block.Please check the error message.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
  /api/kyc/v2/dictionaries/{dictionaryId}:
    get:
      tags:
        - KYC
      summary: Get questionnaire dictionary by dictionaryId. (DEPOSIT ONLY)
      description: |
        ## General description
        Get questionnaire dictionary by dictionaryId. (DEPOSIT ONLY)
        ## Allowed VP token
        Security Token
        ## Allowed roles
        My Pages
        ## Changelog
        - v21.0.0: API added.
      operationId: get-kyc-v2-dictionaries-by-id
      parameters: []
      responses:
        '200':
          description: Return questionnaire dictionnary information.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KycDictionary'
              examples:
                example-1:
                  value:
                    id: countryList
                    values:
                      - type: SINGLE_CHOICE_DROP_DOWN
                        text: string
                        textTranslationKey: string
                        translations:
                          - {}
                        order: 0
        '201':
          description: Created
        '204':
          description: No content of questions.
        '400':
          description: Parameter invalid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '401':
          description: Unauthorized.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '403':
          description: Prohibiting block.Please check the error message.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      x-stoplight:
        id: 0vnronhh9qmyg
      security:
        - Authorization: []
  /api/loan/v1/products:
    get:
      tags:
        - Loan Products
      summary: Get all loan products
      description: |-
        ## General description
        Get all loan products by security token
        ## Allowed tokens
        Security Token
        ## Allowed roles
        Trusted Party, Broker
        ## Additional information
        Broker role can only get the LIMITED scope response
        ## Changelog
          - v31.0.0 :
            - Add new fields `calendarBasedInvoicePeriod`  in the FULL scope response
          - v29.0.0 : 
            - New enum value `CUSTOM_AMOUNTS` for the field `paymentAgreementType` in the FULL scope response
      operationId: get-all-loan-products-v1
      parameters:
        - name: scope
          in: query
          description: The scope fields of the response
          schema:
            default: LIMITED
            enum:
              - LIMITED
              - FULL
      responses:
        '200':
          description: Get all loan products successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AllLoanProducts-Response-v1'
              examples:
                LIMITED scope response:
                  value:
                    data:
                      - id: '50'
                        productName: biyearlyFloatingPossibleAnnuity
                        countryCode: SE
                        offerSchemaReferences: []
                        customerType: BUSINESS
                        discontinued: false
                        description: ''
                        maxLoanAmount: null
                        minLoanAmount: null
                        baseInterestRate: 0.1
                        invoicingPeriod: BI_YEARLY
                        dueDay: 0
                        startupFee: 0
                        externalBankAccountMandatory: true
                        loanType: TERM_LOAN
                        maxTenorLength: 120
                        minTenorLength: 6
                        amortizationMethod: ANNUITY
                        floatingStatement: true
                        residualAmountType: FINAL_INVOICE
                        productType: LOAN
                      - id: 6164f3ddb9b2bf417c953170
                        productName: smeCredit
                        countryCode: SE
                        offerSchemaReferences:
                          - refId: 6576a580590a9168ca9a8477
                            uri: null
                        customerType: BUSINESS
                        discontinued: false
                        description: Description
                        maxLoanAmount: 500000
                        minLoanAmount: 600
                        baseInterestRate: 0.12
                        invoicingPeriod: MONTHLY
                        dueDay: 28
                        startupFee: 0
                        minimumAmountLimit: 100
                        minimumAmountRate: 0.1
                        trancheFeeRate: 0
                        availableTrancheTypes:
                          - PURCHASE
                          - CASH_WITHDRAWAL
                        productType: REVOLVING
                FULL scope response:
                  value:
                    data:
                      - id: '50'
                        productName: biyearlyFloatingPossibleAnnuity
                        countryCode: SE
                        offerSchemaReferences: []
                        customerType: BUSINESS
                        discontinued: false
                        description: ''
                        maxLoanAmount: null
                        minLoanAmount: null
                        baseInterestRate: 0.1
                        invoicingPeriod: BI_YEARLY
                        dueDay: 0
                        startupFee: 0
                        firstStatementType: POSSIBLE_STATEMENT
                        generalLedgerAccount: ''
                        productVersionId: '1'
                        effectiveDate: '2023-10-08'
                        version: 1
                        createDateTime: '2023-09-26T10:37:18.589+08:00'
                        capitalizeStartupFeeType: CAPITALIZED
                        statementFee: 0
                        directDebitFee: 0
                        documentTemplateConfigurations: []
                        gracePeriod: 3
                        lateInterestRateFixed: false
                        lateInterestRate: 0.2
                        reminderDayAfterDueDate: 3
                        reminderFee: 10
                        latePaymentFee: 10
                        collectionFee: 10
                        collectionFeeAccount: 20
                        maxAmountToCredit: null
                        promiseToPayPeriod: 3
                        promiseToPayGracePeriod: 3
                        checkerForManualDecisionChange: false
                        allowApproverCommentForManualDecisionChange: false
                        collectAccountAsInternalOtherLoan: false
                        finalDisbursementCreditCheck: false
                        latePaymentStatementItemTypeGroups:
                          - ADMINISTRATIVE_FEE
                          - AMORTIZATION
                          - COLLECTION_FEE
                          - DEED_FEE
                          - DIRECT_DEBIT_FEE
                          - E_INVOICE_FEE
                          - FULL_INSURANCE_PREMIE
                          - INTEREST
                          - INTEREST_BEFORE_FIRST_STATEMENT
                          - LATE_PAYMENT_FEE
                          - LATE_PAYMENT_INTEREST
                          - LIFE_INSURANCE_PREMIE
                          - PAYMENT_PLAN_FEE
                          - PREPAYMENT
                          - REMINDER_FEE
                          - ROUNDING
                          - SERVICE_FEE
                          - SERVICE_FEE_BEFORE_FIRST_STATEMENT
                          - SPECIAL_LEASING_FEE_BEFORE_FIRST_STATEMENT
                          - STARTUP_FEE
                          - STARTUP_FEE_AMORTIZATION
                          - STATEMENT_FEE
                          - TERMINATION_LETTER_FEE
                          - TITLE_DEED_FEE
                          - TRANCHE_ADMINISTRATIVE_FEE
                          - TRANCHE_STARTUP_FEE
                          - UNPAID_AMOUNT_FROM_STATEMENT
                          - VALUATION_FEE
                        accountOCRGenerationRule: acc.accountNumber
                        prefixOfAccountNumber: '7'
                        invoiceTypeInSummary: ALL
                        includeOverdueAmountsInWithdrawalRequest: false
                        productCollectionAgency:
                          collectionAgencyId: 5e478c877ac18b2c6f6c4a50
                          collectionAgencyName: StandardCollectionAgency
                          overDueToSetStatementToCollection: 1
                          minAmountToSentToCollection: 1
                          maxAmountToSentToCollection: null
                          statementItemsToBeSentToCollection:
                            - ADMINISTRATIVE_FEE
                            - AMORTIZATION
                            - COLLECTION_FEE
                            - DEED_FEE
                            - DIRECT_DEBIT_FEE
                            - E_INVOICE_FEE
                            - FULL_INSURANCE_PREMIE
                            - INTEREST
                            - INTEREST_BEFORE_FIRST_STATEMENT
                            - LATE_PAYMENT_FEE
                            - LATE_PAYMENT_INTEREST
                            - LIFE_INSURANCE_PREMIE
                            - PAYMENT_PLAN_FEE
                            - PREPAYMENT
                            - REMINDER_FEE
                            - ROUNDING
                            - SERVICE_FEE
                            - SERVICE_FEE_BEFORE_FIRST_STATEMENT
                            - SPECIAL_LEASING_FEE_BEFORE_FIRST_STATEMENT
                            - STARTUP_FEE
                            - STARTUP_FEE_AMORTIZATION
                            - STATEMENT_FEE
                            - TERMINATION_LETTER_FEE
                            - TITLE_DEED_FEE
                            - TRANCHE_ADMINISTRATIVE_FEE
                            - TRANCHE_STARTUP_FEE
                            - UNPAID_AMOUNT_FROM_STATEMENT
                            - VALUATION_FEE
                          collectionStatementsToSetAccountToCollection: null
                          unpaidStatementsToSetAccountToCollection: 1
                          minAmountToSentToCollectionForAccount: 1
                          createStatementAtCollectionState: false
                          invoiceOverDueToSetAccountToCollection: null
                          writeOffAccountWhenSendToCollection: false
                        fundingSourceSchemaReference:
                          refId: 6164f2f6f7b5fb7fd755d888
                          uri: null
                        externalBankAccountMandatory: true
                        loanType: TERM_LOAN
                        referenceRateType: null
                        amortizationMethod: ANNUITY
                        interestCalculationDays: null
                        annuityType: ANNUITY_DUE
                        floatingStatement: true
                        maxTenorLength: 120
                        minTenorLength: 6
                        capitalizeCompensationType: CAPITALIZED
                        brokenPeriodCompensationType: INTEREST
                        maxAmountToCure: null
                        residualAmountType: FINAL_INVOICE
                        residualAmountCalculationRule: null
                        lastCalenderMonth: false
                        statementTransactionPeriodDay: null
                        feeTypeToUseInCalculation: STATEMENT_FEE
                        daysPriorToDueDateForProducingStatement: 10
                        withdrawalRequestAdvanceInDays: 10
                        displayPaymentPlan: true
                        serviceFeeRate: null
                        serviceFee: 0
                        amountToUseInCalculationServiceFee: null
                        paymentAgreements:
                          - id: 1
                            paymentAgreementType: AMORTIZATION_FREE_MONTH
                            administrationFee: 10
                            scriptRule: ''
                            extendTotalTenor: true
                            sendStatement: null
                            enableForCustomer: true
                          - id: 2
                            paymentAgreementType: PAYMENT_FREE_MONTH
                            administrationFee: 10
                            scriptRule: ''
                            extendTotalTenor: false
                            sendStatement: true
                            enableForCustomer: true
                          - id: 3
                            paymentAgreementType: PAYMENT_PROGRAM_CHANGE
                            administrationFee: 10
                            scriptRule: ''
                            extendTotalTenor: null
                            sendStatement: null
                            enableForCustomer: true
                        valuationFee: null
                        valuationFeeType: null
                        baseDeedFee: null
                        deedFeeRate: null
                        safetyMargin: null
                        titleDeedFeeRate: null
                        titleDeedFeeAmount: null
                        productTerminationLetter:
                          enable: false
                          oldestNonCollectionInvoiceOverDueDays: null
                          numberOfOverDueNonCollectionInvoices: null
                          protectFromReminder: null
                          terminationLetterFee: null
                          dueAfterDays: null
                        effectiveRateStrategy: DEFAULT
                        effectiveRateInflation: null
                        considerCoApplicantAsGuarantor: false
                        applicableForVat: false
                        vatInterestRateType: NONE
                        vatRepaymentType: null
                        vatInterestRate: null
                        calendarBasedInvoicePeriod: false
                        einvoiceFee: null
                        productType: LOAN
                      - id: 6258c85b1e40355a8fe60716
                        productName: consumerCredit
                        countryCode: SE
                        offerSchemaReferences:
                          - refId: 6576a580590a9168ca9a8477
                            uri: null
                        customerType: CONSUMER
                        discontinued: false
                        description: ''
                        maxLoanAmount: null
                        minLoanAmount: null
                        baseInterestRate: 0.12
                        invoicingPeriod: MONTHLY
                        dueDay: 28
                        startupFee: 0
                        firstStatementType: WHOLE_STATEMENT_PERIOD
                        generalLedgerAccount: ''
                        productVersionId: 6258c85b1e40355a8fe60717
                        effectiveDate: '2023-09-26'
                        version: 1
                        createDateTime: '2022-04-15T09:20:27.273+08:00'
                        capitalizeStartupFeeType: FIRST_STATEMENT
                        statementFee: null
                        directDebitFee: null
                        documentTemplateConfigurations: []
                        gracePeriod: 5
                        lateInterestRateFixed: false
                        lateInterestRate: 0.21
                        reminderDayAfterDueDate: 5
                        reminderFee: null
                        latePaymentFee: null
                        collectionFee: null
                        collectionFeeAccount: null
                        maxAmountToCredit: null
                        promiseToPayPeriod: 5
                        promiseToPayGracePeriod: 5
                        checkerForManualDecisionChange: false
                        allowApproverCommentForManualDecisionChange: false
                        collectAccountAsInternalOtherLoan: false
                        finalDisbursementCreditCheck: false
                        latePaymentStatementItemTypeGroups:
                          - ADMINISTRATIVE_FEE
                          - AMORTIZATION
                          - COLLECTION_FEE
                          - DEED_FEE
                          - DIRECT_DEBIT_FEE
                          - E_INVOICE_FEE
                          - FULL_INSURANCE_PREMIE
                          - INTEREST
                          - INTEREST_BEFORE_FIRST_STATEMENT
                          - LATE_PAYMENT_FEE
                          - LATE_PAYMENT_INTEREST
                          - LIFE_INSURANCE_PREMIE
                          - PAYMENT_PLAN_FEE
                          - PREPAYMENT
                          - REMINDER_FEE
                          - ROUNDING
                          - SERVICE_FEE
                          - SERVICE_FEE_BEFORE_FIRST_STATEMENT
                          - STARTUP_FEE
                          - STARTUP_FEE_AMORTIZATION
                          - STATEMENT_FEE
                          - TITLE_DEED_FEE
                          - TRANCHE_ADMINISTRATIVE_FEE
                          - TRANCHE_STARTUP_FEE
                          - UNPAID_AMOUNT_FROM_STATEMENT
                          - VALUATION_FEE
                        accountOCRGenerationRule: acc.accountNumber
                        prefixOfAccountNumber: '8'
                        invoiceTypeInSummary: ALL
                        includeOverdueAmountsInWithdrawalRequest: false
                        productCollectionAgency:
                          collectionAgencyId: 5e478c877ac18b2c6f6c4a50
                          collectionAgencyName: StandardCollectionAgency
                          overDueToSetStatementToCollection: null
                          minAmountToSentToCollection: 1
                          maxAmountToSentToCollection: null
                          statementItemsToBeSentToCollection:
                            - ADMINISTRATIVE_FEE
                            - ADJUSTMENT_ADMINISTRATIVE_FEE
                            - AMORTIZATION
                            - COLLECTION_FEE
                            - ADJUSTMENT_COLLECTION_FEE
                            - ADJUSTMENT_DEED_FEE
                            - DIRECT_DEBIT_FEE
                            - ADJUSTMENT_DIRECT_DEBIT_FEE
                            - E_INVOICE_FEE
                            - ADJUSTMENT_E_INVOICE_FEE
                            - FULL_INSURANCE_PREMIE
                            - ADJUSTMENT_FULL_INSURANCE_PREMIE
                            - INTEREST
                            - ADJUSTMENT_INTEREST
                            - INTEREST_BEFORE_FIRST_STATEMENT
                            - LATE_PAYMENT_FEE
                            - ADJUSTMENT_LATE_PAYMENT_FEE
                            - LATE_PAYMENT_INTEREST
                            - ADJUSTMENT_LATE_PAYMENT_INTEREST
                            - LIFE_INSURANCE_PREMIE
                            - ADJUSTMENT_LIFE_INSURANCE_PREMIE
                            - PAYMENT_PLAN_FEE
                            - ADJUSTMENT_PAYMENT_PLAN_FEE
                            - PREPAYMENT
                            - REMINDER_FEE
                            - ADJUSTMENT_REMINDER_FEE
                            - ROUNDING
                            - SERVICE_FEE
                            - ADJUSTMENT_SERVICE_FEE
                            - SERVICE_FEE_BEFORE_FIRST_STATEMENT
                            - STARTUP_FEE
                            - ADJUSTMENT_STARTUP_FEE
                            - STARTUP_FEE_AMORTIZATION
                            - STATEMENT_FEE
                            - ADJUSTMENT_STATEMENT_FEE
                            - ADJUSTMENT_TITLE_DEED_FEE
                            - TRANCHE_ADMINISTRATIVE_FEE
                            - TRANCHE_STARTUP_FEE
                            - UNPAID_AMOUNT_FROM_STATEMENT
                            - VALUATION_FEE
                            - ADJUSTMENT_VALUATION_FEE
                          collectionStatementsToSetAccountToCollection: null
                          unpaidStatementsToSetAccountToCollection: null
                          minAmountToSentToCollectionForAccount: 1
                          createStatementAtCollectionState: true
                          invoiceOverDueToSetAccountToCollection: null
                        fundingSourceSchemaReference:
                          refId: 6164f2f6f7b5fb7fd755d888
                          uri: null
                        trancheBlockGracePeriod: null
                        minimumAmountLimit: 100
                        minimumAmountRate: 0.1
                        cutOffDay: 10
                        fallbackToProductGracePeriod: 5
                        trancheSlipRequired: true
                        minimumTrancheAmount: null
                        trancheFeeCapitalizeType: CAPITALIZED
                        trancheFeeRate: 0
                        minimumTrancheFee: 0
                        exceedCreditLimitAllowedFees: []
                        checkerForPeriodicTrancheLimitChange: false
                        immediateDisbursementOfExternallyRequestedCashWithdrawal: true
                        availableTrancheTypes:
                          - PURCHASE
                          - CASH_WITHDRAWAL
                        productType: REVOLVING
        '400':
          description: >-
            Bad request. The parameters in the URL or request body are invalid.
            Please refer to the error message for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '401':
          description: >-
            Unauthorized. The token is invalid/expired or the SSN does not exist
            in the VP. Please refer to the error message for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '403':
          description: >-
            Forbidden. No access rights or access frequency too fast. Please
            refer to the error message for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '500':
          description: >-
            Internal server error. Please refer to the error message for
            details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
  /api/loan/v5/accounts:
    get:
      tags:
        - Loan Accounts
      summary: Get loan accounts by query parameters (v5)
      description: >
        ## General description

        Get account list with query parameters, sorted in reverse order of
        createDate.

        ## Changelog

        - v27.0.0 : New fields `documents`, `insurances`, `assetIds`,
        `appliedTenorInMonth`, `startupFee`, `serviceFee`, `valuationFee` in
        response.

        - v24.0.0 : New fields `residualAmountType` and `residualAmount` in
        response.

        - v21.0.0 : New field `referenceInterestRate` in response.

        - v17.0.0 : New field `offerId` in response.
      operationId: e3f56895-d31a-4339-aa57-3e11d9f6f59d
      parameters:
        - name: mobilePhone
          in: query
          required: true
          schema:
            type: string
          description: mobile phone
      responses:
        '200':
          description: Account retrieved successfully.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RegularLoanAccount'
        '400':
          description: >-
            Bad request. The parameters in the URL or request body are invalid.
            Please refer to the error message for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '401':
          description: >-
            Unauthorized. The token is invalid/expired or the SSN does not exist
            in the VP. Please refer to the error message for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '403':
          description: >-
            Forbidden. No access rights or access frequency too fast. Please
            refer to the error message for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '500':
          description: >-
            Internal server error. Please refer to the error message for
            details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
  /api/loan/v5/accounts/me/{accountId}:
    get:
      tags:
        - Loan Accounts
      summary: Get loan account restricted by access token (v5)
      description: >
        ## General description

        Get loan account restricted by access token, only support Regular Loan

        ## Changelog

        - v27.0.0 : New fields `documents`, `insurances`, `assetIds`,
        `appliedTenorInMonth`, `startupFee`, `serviceFee`, `valuationFee` in
        response.

        - v24.0.0 : New fields `residualAmountType` and `residualAmount` in
        response.

        - v21.0.0 : New field `referenceInterestRate` in response.

        - v17.0.0 : New field `offerId` in response.
      operationId: 6b9c0574-e084-471f-8b71-a3c64227c6f0
      responses:
        '200':
          description: Account successfully retrieved.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RegularLoanAccount'
        '400':
          description: >-
            Bad request. The parameters in the URL or request body are invalid.
            Please refer to the error message for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '401':
          description: >-
            Unauthorized. The token is invalid/expired or the SSN does not exist
            in the VP. Please refer to the error message for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '403':
          description: >-
            Forbidden. No access rights or access frequency too fast. Please
            refer to the error message for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '500':
          description: >-
            Internal server error. Please refer to the error message for
            details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      security:
        - Authorization: []
        - accessTokenCookie: []
    patch:
      summary: Update loan account by id  restricted by access token (v5)
      operationId: patch-loan-accounts-by-accountId-V5
      responses:
        '200':
          $ref: '#/components/responses/LoanAccount-Response-V5'
        '400':
          description: >-
            Bad request. The parameters in the URL or request body are invalid.
            Please refer to the error message for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '401':
          description: >-
            Unauthorized. The token is invalid/expired or the SSN does not exist
            in the VP. Please refer to the error message for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '403':
          description: >-
            Forbidden. No access rights or access frequency too fast. Please
            refer to the error message for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '500':
          description: >-
            Internal server error. Please refer to the error message for
            details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      description: |
        ## General description
           Only support regular Loan
        ## Allowed roles
           My Pages, Mortgage Front
        ## Additional information
          - Fields are only supported for regular accounts whose statement type is floating
            - dueDay
          - Fields are only supported for regular accounts
            - offerId
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                dueDay:
                  type: integer
                  description: >-
                    The account due day (range 1 ~ 31) is only for accounts of
                    products configured with floating statement.
                offerId:
                  type: string
                  description: A valid offer id.
            examples:
              example:
                value:
                  dueDay: 28
                  offerId: '1'
        description: Patch update account request body
      tags:
        - Loan Accounts
      parameters: []
      security:
        - Authorization: []
        - accessTokenCookie: []
  /api/loan/v5/accounts/me/{accountId}/disbursementAccount:
    post:
      tags:
        - Loan Accounts
      summary: >-
        Create disbursement account for loan account restricted by access token
        (v5)
      description: Add disbursement account.
      operationId: bbba14f7-0c45-479f-b1da-be251477bd5b
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DisbursementAccountV1'
        required: true
      responses:
        '200':
          description: Create successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DisbursementAccountV1'
        '400':
          description: >-
            Bad request. The parameters in the URL or request body are invalid.
            Please refer to the error message for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '401':
          description: >-
            Unauthorized. The token is invalid/expired or the SSN does not exist
            in the VP. Please refer to the error message for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '403':
          description: >-
            Forbidden. No access rights or access frequency too fast. Please
            refer to the error message for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '500':
          description: >-
            Internal server error. Please refer to the error message for
            details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      security:
        - Authorization: []
        - accessTokenCookie: []
    get:
      tags:
        - Loan Accounts
      summary: >-
        Get disbursement account for loan account restricted by access token
        (v5)
      description: Get disbursement account.
      operationId: b62de3df-375f-4d21-8393-16e221484b5d
      responses:
        '200':
          description: Disbursement account retrieved successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DisbursementAccountV1'
        '400':
          description: >-
            Bad request. The parameters in the URL or request body are invalid.
            Please refer to the error message for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '401':
          description: >-
            Unauthorized. The token is invalid/expired or the SSN does not exist
            in the VP. Please refer to the error message for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '403':
          description: >-
            Forbidden. No access rights or access frequency too fast. Please
            refer to the error message for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '500':
          description: >-
            Internal server error. Please refer to the error message for
            details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      security:
        - Authorization: []
        - accessTokenCookie: []
    put:
      tags:
        - Loan Accounts
      summary: Update disbursement account for loan account restricted by access token
      description: Modify disbursement account.
      operationId: be95b864-2398-4209-a652-27024c7dbe14
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DisbursementAccountV1'
        required: true
      responses:
        '200':
          description: Modify successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DisbursementAccountV1'
        '400':
          description: >-
            Bad request. The parameters in the URL or request body are invalid.
            Please refer to the error message for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '401':
          description: >-
            Unauthorized. The token is invalid/expired or the SSN does not exist
            in the VP. Please refer to the error message for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '403':
          description: >-
            Forbidden. No access rights or access frequency too fast. Please
            refer to the error message for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '500':
          description: >-
            Internal server error. Please refer to the error message for
            details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      security:
        - Authorization: []
        - accessTokenCookie: []
  /api/loan/v5/accounts/me/{accountId}/paymentPlans:
    get:
      tags:
        - Loan Accounts
      summary: Get payment plans for a loan account restricted by access token (v5)
      description: >-
        "Get payment plans for a loan account restricted by access token (v5)"

        ## Changelog

        - v27.0.0: New invoice statementStatus `REVERSED` in the response.

        - v25.0.0 : Add new fields `rounding`, `vatAmount` and
        `totalAmountIncludeVat` in the response.
      operationId: b64e6d9d-363d-4e4f-b74b-db45be24543c
      parameters:
        - name: sortOrder
          in: query
          description: Sort by due date.
          schema:
            type: string
            default: DESC
            enum:
              - ASC
              - DESC
      responses:
        '200':
          description: Get payment plan successfully.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PaymentPlanItem'
        '400':
          description: >-
            Bad request. The parameters in the URL or request body are invalid.
            Please refer to the error message for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '401':
          description: >-
            Unauthorized. The token is invalid/expired or the SSN does not exist
            in the VP. Please refer to the error message for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '403':
          description: >-
            Forbidden. No access rights or access frequency too fast. Please
            refer to the error message for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '500':
          description: >-
            Internal server error. Please refer to the error message for
            details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      security:
        - Authorization: []
        - accessTokenCookie: []
  /api/loan/v5/accounts/me/{accountId}/remainingDebt:
    get:
      tags:
        - Loan Accounts
      summary: Calculate remaining debts for loan account (v5)
      description: >-
        Calculate remaining debt

        ## Changelog

        - v25.0.0 : Add new fields `reduceRemainingPrincipalVat`, `interestVat`,
        `upcomingStatementFeeVat`, `upcomingInsuranceFeeVat` and `serviceFeeVat`
        in the response.
      operationId: 4b115c31-9a61-42dd-bfda-ba2bb7b8c0a7
      parameters:
        - name: preSettleDate
          in: query
          description: Pre-settle date, format is yyyy-MM-dd
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Remaining debt successfully retrieved.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RemainingDebtForLoanAccount'
        '400':
          description: >-
            Bad request. The parameters in the URL or request body are invalid.
            Please refer to the error message for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '401':
          description: >-
            Unauthorized. The token is invalid/expired or the SSN does not exist
            in the VP. Please refer to the error message for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '403':
          description: >-
            Forbidden. No access rights or access frequency too fast. Please
            refer to the error message for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '500':
          description: >-
            Internal server error. Please refer to the error message for
            details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      security:
        - Authorization: []
        - accessTokenCookie: []
  /api/loan/v5/accounts/me/{accountId}/specialPaymentAgreements:
    post:
      tags:
        - Loan Accounts
      summary: >-
        Request special payment agreement for loan account restricted by access
        token
      description: |
        ## General description
        Request special payment agreement (LOAN ONLY)
        ## Changelog
        - v29.0.0 : 
          - New `paymentAgreementType` enum value `CUSTOM_AMOUNTS`
          - New field `amortization` in the request, required if `paymentAgreementType` is `CUSTOM_AMOUNTS`
      operationId: a0505aaf-d213-491c-af50-519881b942da
      parameters:
        - name: Accept-Language
          in: header
          description: The response message language.
          schema:
            type: string
        - name: accountId
          in: path
          description: The id of account.
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SpecialPaymentAgreementRequest'
        required: true
      responses:
        '200':
          description: Create special payment agreement.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '400':
          description: >-
            Bad request. The parameters in the URL or request body are invalid.
            Please refer to the error message for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '401':
          description: >-
            Unauthorized. The token is invalid/expired or the SSN does not exist
            in the VP. Please refer to the error message for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '403':
          description: >-
            Forbidden. No access rights or access frequency too fast. Please
            refer to the error message for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '500':
          description: >-
            Internal server error. Please refer to the error message for
            details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      security:
        - Authorization: []
        - accessTokenCookie: []
    get:
      tags:
        - Loan Accounts
      summary: >-
        Get special payment agreement for loan account restricted by access
        token
      description: |
        ## General description
        Get special payment agreements for specific account
        ## Changelog 
        - v29.0.0 : 
          - New `paymentAgreementType` enum value `CUSTOM_AMOUNTS`
          - New field `amortization` in the response, only if `paymentAgreementType` is `CUSTOM_AMOUNTS`
        - v20.0.0: New fields `startMonth`, `endMonth` in response
      operationId: 366172d3-d240-4224-b913-709457f18b91
      responses:
        '200':
          description: Get special payment agreements successfully.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SpecialPaymentAgreement'
        '400':
          description: >-
            Bad request. The parameters in the URL or request body are invalid.
            Please refer to the error message for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '401':
          description: >-
            Unauthorized. The token is invalid/expired or the SSN does not exist
            in the VP. Please refer to the error message for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '403':
          description: >-
            Forbidden. No access rights or access frequency too fast. Please
            refer to the error message for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '500':
          description: >-
            Internal server error. Please refer to the error message for
            details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      security:
        - Authorization: []
        - accessTokenCookie: []
  /api/loan/v5/accounts/me/{accountId}/specialPaymentAgreements/paymentProgramChange:
    post:
      tags:
        - Loan Accounts
      summary: Payment program change for loan account restricted by access token.
      description: Apply to payment program change
      operationId: paymentprogramchangev5
      parameters:
        - name: Accept-Language
          in: header
          description: The response message language.
          schema:
            type: string
        - name: accountId
          in: path
          description: The id of account.
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              required:
                - tenorChangeTo
              type: object
              properties:
                tenorChangeTo:
                  type: integer
                  description: The request value of payment program change.
                  example: 10
                administrativeFee:
                  type: string
                  description: >-
                    This is a administrative fee from api, if you set a value
                    then will ignore the fee which has been set in product.
                  example: '200'
        required: true
      responses:
        '200':
          description: Payment program change successfully updated.
        '400':
          description: >-
            Bad request. The parameters in the URL or request body are invalid.
            Please refer to the error message for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '401':
          description: >-
            Unauthorized. The token is invalid/expired or the SSN does not exist
            in the VP. Please refer to the error message for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '403':
          description: >-
            Forbidden. No access rights or access frequency too fast. Please
            refer to the error message for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '500':
          description: >-
            Internal server error. Please refer to the error message for
            details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      security:
        - Authorization: []
        - accessTokenCookie: []
  /api/loan/v5/accounts/me/{accountId}/specialPaymentAgreements/{specialPaymentAgreementId}:
    delete:
      tags:
        - Loan Accounts
      summary: >-
        Delete special payment agreement for loan account restricted by access
        token
      description: Cancel special payment agreement (LOAN ONLY)
      operationId: a9543ed5-c24f-4028-b897-61b3373a79c1
      parameters:
        - name: Accept-Language
          in: header
          description: The response message language.
          schema:
            type: string
        - name: accountId
          in: path
          description: The id of account.
          required: true
          schema:
            type: string
        - name: specialPaymentAgreementId
          in: path
          description: The id of special payment agreement.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Cancel special payment agreement successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '400':
          description: >-
            Bad request. The parameters in the URL or request body are invalid.
            Please refer to the error message for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '401':
          description: >-
            Unauthorized. The token is invalid/expired or the SSN does not exist
            in the VP. Please refer to the error message for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '403':
          description: >-
            Forbidden. No access rights or access frequency too fast. Please
            refer to the error message for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '500':
          description: >-
            Internal server error. Please refer to the error message for
            details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      security:
        - Authorization: []
        - accessTokenCookie: []
  /api/loan/v5/accounts/me/{accountId}/statementChannel:
    put:
      tags:
        - Loan Accounts
      summary: >-
        Update statement channel for loan account restricted by access token
        (v5)
      description: Update the statement channel
      operationId: 3e10fff1-7e9a-4f74-b996-fadb4151f432
      requestBody:
        content:
          application/json:
            schema:
              required:
                - statementChannel
              type: object
              properties:
                statementChannel:
                  $ref: '#/components/schemas/StatementChannel'
        required: true
      responses:
        '200':
          description: Account statement channel successfully updated.
        '400':
          description: >-
            Bad request. The parameters in the URL or request body are invalid.
            Please refer to the error message for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '401':
          description: >-
            Unauthorized. The token is invalid/expired or the SSN does not exist
            in the VP. Please refer to the error message for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '403':
          description: >-
            Forbidden. No access rights or access frequency too fast. Please
            refer to the error message for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '500':
          description: >-
            Internal server error. Please refer to the error message for
            details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      security:
        - Authorization: []
        - accessTokenCookie: []
  /api/loan/v5/accounts/me/{accountId}/statements:
    get:
      tags:
        - Loan Accounts
      summary: Get statements for loan account restricted by access token (v5)
      description: >
        ## General description

        Get statements for loan account restricted by access token (v5) (LOAN
        ONLY).

        ## Changelog

        - v31.0.0: New field `reminder` in the response.

        - v27.0.0: New invoice status `REVERSED` in the response.
      operationId: 15cccec9-e8a7-45bd-b526-c16a84aa16a8
      parameters:
        - name: sortOrder
          in: query
          description: Sort by due date.
          schema:
            type: string
            default: DESC
            enum:
              - ASC
              - DESC
        - name: statementType
          in: query
          description: Multiple intervals by comma(,)
          schema:
            $ref: '#/components/schemas/StatementType'
      responses:
        '200':
          description: Get statements successfully.
          headers:
            totalCount:
              schema:
                type: integer
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StatementV2'
        '400':
          description: >-
            Bad request. The parameters in the URL or request body are invalid.
            Please refer to the error message for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '401':
          description: >-
            Unauthorized. The token is invalid/expired or the SSN does not exist
            in the VP. Please refer to the error message for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '403':
          description: >-
            Forbidden. No access rights or access frequency too fast. Please
            refer to the error message for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '500':
          description: >-
            Internal server error. Please refer to the error message for
            details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      security:
        - Authorization: []
        - accessTokenCookie: []
  /api/loan/v5/accounts/me/{accountId}/transactions:
    get:
      tags:
        - Loan Accounts
      summary: Get transactions for loan account restricted by access token (v5)
      description: (LOAN ONLY)
      operationId: 0a1e5fc3-358e-428c-be0b-5be7869052a7
      parameters:
        - name: startDate
          in: query
          description: format is yyyy-MM-dd
          schema:
            type: string
            format: date
        - name: endDate
          in: query
          description: format is yyyy-MM-dd
          schema:
            type: string
            format: date
        - name: countPerPage
          in: query
          description: Size per page
          schema:
            type: integer
            format: int32
            default: 10
        - name: currentPage
          in: query
          required: true
          schema:
            type: integer
            format: int32
            default: 1
          description: current page number
        - name: sortOrder
          in: query
          description: Sorting is based on transactionDate
          schema:
            type: string
            default: DESC
            enum:
              - ASC
              - DESC
        - name: shownInStatement
          in: query
          description: >-
            Indicate if only the transactions shown in the statement file will
            be retrived
          schema:
            type: boolean
        - name: excludeTransactionTypes
          in: query
          description: >-
            Indicate what type of transactions will be excluded,multiple
            intervals by comma(,);
          schema:
            type: string
      responses:
        '200':
          description: Get transactions successfully.
          headers:
            totalCount:
              schema:
                type: integer
          content:
            application/hal+json:
              schema:
                type: object
                properties:
                  _links:
                    type: object
                    properties:
                      self:
                        $ref: '#/components/schemas/href'
                      first:
                        $ref: '#/components/schemas/href'
                      prev:
                        $ref: '#/components/schemas/href'
                      next:
                        $ref: '#/components/schemas/href'
                      last:
                        $ref: '#/components/schemas/href'
                  currentPage:
                    type: integer
                    format: int32
                  total:
                    type: integer
                    format: int32
                  _embedded:
                    type: object
                    properties:
                      transactions:
                        $ref: '#/components/schemas/Transactions'
        '400':
          description: >-
            Bad request. The parameters in the URL or request body are invalid.
            Please refer to the error message for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '401':
          description: >-
            Unauthorized. The token is invalid/expired or the SSN does not exist
            in the VP. Please refer to the error message for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '403':
          description: >-
            Forbidden. No access rights or access frequency too fast. Please
            refer to the error message for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '500':
          description: >-
            Internal server error. Please refer to the error message for
            details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      security:
        - Authorization: []
        - accessTokenCookie: []
  /api/loan/v5/applications/me/simulate:
    post:
      tags:
        - Applications
      summary: Estimate the cost and effective interest of a new loan application (v5)
      description: Loan term simulate calculation (LOAN ONLY)
      operationId: 5c4af178-d511-47ab-9605-c9b3433bd2fc
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoanApplicationSimulationRequest'
        required: true
      responses:
        '200':
          description: Application simulate successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoanApplicationSimulationResponse'
        '400':
          description: >-
            Bad request. The parameters in the URL or request body are invalid.
            Please refer to the error message for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '401':
          description: >-
            Unauthorized. The token is invalid/expired or the SSN does not exist
            in the VP. Please refer to the error message for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '403':
          description: >-
            Forbidden. No access rights or access frequency too fast. Please
            refer to the error message for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '500':
          description: >-
            Internal server error. Please refer to the error message for
            details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      security:
        - Authorization: []
        - accessTokenCookie: []
  /api/loan/v5/applications/me/{applicationId}/notes:
    post:
      tags:
        - Applications
      summary: Add note for loan application restricted by access token
      description: Add note to loan application (LOAN ONLY)
      operationId: d8caac21-1888-4b19-8ffe-b2a9ed7a28de
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApplicationNote'
        required: true
      responses:
        '200':
          description: Application note created successfully
        '400':
          description: >-
            Bad request. The parameters in the URL or request body are invalid.
            Please refer to the error message for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '401':
          description: >-
            Unauthorized. The token is invalid/expired or the SSN does not exist
            in the VP. Please refer to the error message for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '403':
          description: >-
            Forbidden. No access rights or access frequency too fast. Please
            refer to the error message for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '500':
          description: >-
            Internal server error. Please refer to the error message for
            details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      security:
        - Authorization: []
        - accessTokenCookie: []
  /api/loan/v5/applications/me/{applicationId}/preconditions:
    get:
      tags:
        - Applications
      operationId: e7e6a1d0-89aa-46d7-a465-8e9757267f8b
      parameters:
        - name: applicationId
          in: path
          description: The id of application
          required: true
          schema:
            type: string
        - name: forLoanState
          in: query
          description: >-
            Filter by the specified state of loan, if missing,it will return all
            of preconditions
          schema:
            $ref: '#/components/schemas/ApplicationState'
      responses:
        '200':
          description: Return the preconditions list of the specific application.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PreconditionResponse'
        '204':
          description: No content of the answer for customer.
        '400':
          description: Parameter invalid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '401':
          description: Unauthorized.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '403':
          description: Prohibiting block.Please check the error message.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      security:
        - Authorization: []
        - accessTokenCookie: []
      summary: Get loan application preconditions restricted by access token
      description: Get loan application preconditions restricted by access token
  /api/loan/v5/applications/me/{applicationId}/preconditions/{preconditionId}:
    patch:
      tags:
        - Applications
      summary: Update precondition for loan application restricted by access token
      description: >-
        The API is only allow to patch the state of a precondition from
        REQUESTED to SUBMITTED
      operationId: 0f586cf0-816d-4c75-b461-a99f88686f10
      parameters:
        - name: applicationId
          in: path
          description: The id of application
          required: true
          schema:
            type: string
        - name: preconditionId
          in: path
          description: The id of precondition
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PreconditionRequestBody'
        required: true
      responses:
        '200':
          description: Return the preconditions list of the specific application.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Precondition'
        '400':
          description: >-
            Parameter invalid. It returns error of type `NotAllowUpdate` when
            the precondition / loan application is not allowed to update.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '401':
          description: Unauthorized.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '403':
          description: Prohibiting block.Please check the error message.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      security:
        - Authorization: []
        - accessTokenCookie: []
  /api/loan/v5/applications/me/{applicationId}/updateState:
    post:
      tags:
        - Applications
      summary: Update application state (v5)
      description: Update application state (LOAN ONLY)
      operationId: db0274a1-692d-4db0-81c1-b3601869cda7
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateApplicationStateRequest'
            examples:
              example-1:
                value:
                  applicationState: PN_SENT
        required: true
      responses:
        '200':
          description: Update application state successfully
        '400':
          description: >-
            Bad request. The parameters in the URL or request body are invalid.
            Please refer to the error message for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '401':
          description: >-
            Unauthorized. The token is invalid/expired or the SSN does not exist
            in the VP. Please refer to the error message for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '403':
          description: >-
            Forbidden. No access rights or access frequency too fast. Please
            refer to the error message for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '500':
          description: >-
            Internal server error. Please refer to the error message for
            details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      security:
        - Authorization: []
        - accessTokenCookie: []
  /api/loan/v5/applications/me/{id}:
    get:
      tags:
        - Applications
      operationId: 757662c1-c921-4322-b85c-bd66f346d828
      parameters:
        - name: id
          in: path
          description: The id of application
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Application details information
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoanApplicationDetails'
        '400':
          description: >-
            Bad request. The parameters in the URL or request body are invalid.
            Please refer to the error message for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '401':
          description: >-
            Unauthorized. The token is invalid/expired or the SSN does not exist
            in the VP. Please refer to the error message for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '403':
          description: >-
            Forbidden. No access rights or access frequency too fast. Please
            refer to the error message for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '500':
          description: >-
            Internal server error. Please refer to the error message for
            details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      security:
        - Authorization: []
        - accessTokenCookie: []
      summary: Get loan application info restricted by access token
      description: >
        ## General description

        Get loan application info restricted by access token

        ## Changelog

        - v26.0.0 : New fields `brokerName`, `assetIds` in the response.

        - v21.0.0 : New field `referenceInterestRate` in response.

        - v19.0.0  : New fields `residualAmountType`, `residualAmount`,
        `residualAmountNotAllowToBeOverwrittenByRule`, `reservedAccountNumber`
        in response body.

        - v18.0.0 : New field `administrativeAreaName` in response.

        - v16.0.0 : New field `appliedOfferId` in response.
  /api/loan/v5/applications/submit:
    post:
      tags:
        - Applications
      summary: Submit loan application (v5)
      description: >
        ## General description

        Process loan application (LOAN ONLY)

        ## Changelog

        - v20.0.0 : Update vatRepaymentType `SPECIFIC_MONTH` to
        `NUMBER_OF_MONTHS`, update vatRepaymentMonth type from `string` to
        `integer`

        - v19.0.0  : New fields `residualAmount`,
        `residualAmountNotAllowToBeOverwrittenByRule` in request body. New field
        `reservedAccountNumber` in response body.

        - v18.0.0 : New field `administrativeAreaName` in request body.

        - v16.0.0 : New fields `vatInformation`,`appliedOfferID` in request
        body.

        - v15.0.0 : New fields `externalPartyId`,`salesPerson` in request body.
      operationId: 4708f129-bca6-478a-b446-6e174eb54557
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoanApplicationRequestForV5'
            examples:
              example-1:
                value:
                  appliedProductID: string
                  appliedOfferID: string
                  externalReference: string
                  desiredLoan: 0
                  desiredPaybackTime: 0
                  credits:
                    - sum: 0
                      rate: 0
                      paybackTime: 0
                      bank: string
                      monthlyCost: 0
                      typeOfCredit: string
                      externalLoanAccountNumber: string
                      validForCollateral: true
                      amortization: 0
                      receiverType: SE-CLEARING
                      receiverAccount: string
                      messageInfo: string
                      ocrReference: string
                      needSettle: true
                      settleAmount: 0
                  mainApplicant:
                    personalID: string
                    givenName: string
                    surName: string
                    email: string
                    phonePrimary: string
                    phoneHome: string
                    phoneDay: string
                    propertyType: string
                    propertyCost: 0
                    maritalStatus: string
                    children: 0
                    address:
                      careOf: string
                      address: string
                      postalCode: string
                      city: string
                      country: string
                      region: string
                      apartmentNumber: string
                      propertyNumber: string
                      buildingName: string
                      floorNumber: string
                      complementingInformation: string
                    employer:
                      employer: string
                      employmentType: FULL
                      isManagementTeamMember: true
                      salary: 0
                      netSalary: 0
                      employedAt: string
                      employerEndDate: string
                      referencePhone: string
                    selfAssessedPEP: 'NULL'
                    selfAssessedPepDescription: string
                    nationality: string
                    otherIncomes:
                      - type: string
                        period: string
                        value: 0
                    educationLevel: string
                  coApplicant:
                    personalID: string
                    givenName: string
                    surName: string
                    email: string
                    phonePrimary: string
                    phoneHome: string
                    phoneDay: string
                    propertyType: string
                    propertyCost: 0
                    maritalStatus: string
                    children: 0
                    address:
                      careOf: string
                      address: string
                      postalCode: string
                      city: string
                      country: string
                      region: string
                      apartmentNumber: string
                      propertyNumber: string
                      buildingName: string
                      floorNumber: string
                      complementingInformation: string
                    employer:
                      employer: string
                      employmentType: FULL
                      isManagementTeamMember: true
                      salary: 0
                      netSalary: 0
                      employedAt: string
                      employerEndDate: string
                      referencePhone: string
                    selfAssessedPEP: 'NULL'
                    selfAssessedPepDescription: string
                    nationality: string
                    otherIncomes:
                      - type: string
                        period: string
                        value: 0
                    educationLevel: string
                  extras:
                    property1: string
                    property2: string
                  campaigns:
                    property1: string
                    property2: string
                  disbursementAccount:
                    type: SE-CLEARING
                    number: string
                  comments:
                    - string
                  statementChannel: PAPER
                  preferredDueDay: 0
                  downgradeAccepted: true
                  downgradeAmount: 0
                  reasonForCredit:
                    - string
                  applicationCategory: NEW
                  administrativeAreaName: administrativeAreaName
                  residualAmount: 0
                  residualAmountNotAllowToBeOverwrittenByRule: true
        required: true
      responses:
        '201':
          description: Application created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoanApplicationResponse'
        '400':
          description: >-
            Bad request. The parameters in the URL or request body are invalid.
            Please refer to the error message for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '401':
          description: >-
            Unauthorized. The token is invalid/expired or the SSN does not exist
            in the VP. Please refer to the error message for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '403':
          description: >-
            Forbidden. No access rights or access frequency too fast. Please
            refer to the error message for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '500':
          description: >-
            Internal server error. Please refer to the error message for
            details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
  /api/loan/v5/applications/{applicationId}/cancel:
    put:
      tags:
        - Applications
      summary: Cancel loan application by id (v5)
      description: Cancel the application (LOAN ONLY)
      operationId: 00e7018c-a2ba-47c9-91e3-43e1a47dce2b
      responses:
        '200':
          description: Application successfully cancelled
        '400':
          description: >-
            Bad request. The parameters in the URL or request body are invalid.
            Please refer to the error message for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '401':
          description: >-
            Unauthorized. The token is invalid/expired or the SSN does not exist
            in the VP. Please refer to the error message for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '403':
          description: >-
            Forbidden. No access rights or access frequency too fast. Please
            refer to the error message for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '500':
          description: >-
            Internal server error. Please refer to the error message for
            details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
  /api/loan/v5/applications/{applicationId}/documents:
    post:
      tags:
        - Applications
      summary: Create documents for loan application (v5)
      description: Add documents to loan application (LOAN ONLY)
      operationId: 8034d839-89b2-4f64-bb6f-338eaeef9480
      requestBody:
        content:
          multipart/form-data:
            schema:
              required:
                - documentType
                - files
              type: object
              properties:
                documentType:
                  type: string
                  description: |
                    * PROMISSORY_NOTE Promissory note.
                    * SALES_SLIP Sales slip.
                    * DIRECT_DEBIT_CONSENT Direct debit consent.
                    * ENTIRE_LIST_OF_COMPLEMENTS Entire list of complements.
                    * OTHERS Others.
                  enum:
                    - PROMISSORY_NOTE
                    - SALES_SLIP
                    - DIRECT_DEBIT_CONSENT
                    - ENTIRE_LIST_OF_COMPLEMENTS
                    - OTHERS
                documentSignStatus:
                  type: string
                  description: |
                    * UNSIGNED Unsigned,default value.
                    * MANUAL_SIGNED  Manual signed.
                    * DIGITAL_SIGNED Digital signed.
                  default: UNSIGNED
                  enum:
                    - UNSIGNED
                    - MANUAL_SIGNED
                    - DIGITAL_SIGNED
                files:
                  type: array
                  items:
                    type: string
                    format: binary
        required: true
      responses:
        '201':
          description: Documents created successfully
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    documentId:
                      type: string
                      description: Document Id
                    fileName:
                      type: string
                      description: File name
        '400':
          description: >-
            Bad request. The parameters in the URL or request body are invalid.
            Please refer to the error message for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '401':
          description: >-
            Unauthorized. The token is invalid/expired or the SSN does not exist
            in the VP. Please refer to the error message for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '403':
          description: >-
            Forbidden. No access rights or access frequency too fast. Please
            refer to the error message for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '500':
          description: >-
            Internal server error. Please refer to the error message for
            details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
  /api/loan/v5/applications/{applicationId}/sign:
    post:
      tags:
        - Signing
      summary: sign application pn (LOAN ONLY)
      description: sign application pn by application id
      operationId: b78988f4-a014-446e-afb2-fcdd99c057bd
      requestBody:
        description: sign pn request
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SignPNBody'
      responses:
        '200':
          description: get signURL success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SignPNResponse'
        '400':
          description: >-
            Bad request. The parameters in the URL or request body are invalid.
            Please refer to the error message for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '401':
          description: >-
            Unauthorized. The token is invalid/expired or the SSN does not exist
            in the VP. Please refer to the error message for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '403':
          description: >-
            Forbidden. No access rights or access frequency too fast. Please
            refer to the error message for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '500':
          description: >-
            Internal server error. Please refer to the error message for
            details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      callbacks:
        callback from lfp if notificationURL is valid:
          http://notification.com:
            post:
              requestBody:
                content:
                  application/json:
                    schema:
                      required:
                        - signSessionId
                        - signStatus
                      type: object
                      properties:
                        accountId:
                          type: string
                          description: >-
                            if sign application is credit application will have
                            accountId, if it is regular application, will not
                            hava accountId
                          example: '6122336'
                        signSessionId:
                          type: string
                          example: 5d13356d9194be001661755b
                        signStatus:
                          type: string
                          enum:
                            - SUCESS
                            - FAIL
                            - REJECT
                required: true
              responses:
                '200':
                  description: Your server returns this code if it accepts the callback
  /api/loan/v5/applications/{id}:
    patch:
      tags:
        - Applications
      summary: Update loan application by ID and trigger re-evaluation (V5)
      description: >
        ## General description

        Update loan application by ID and trigger re-evaluation (V5)

        ## Allowed tokens

        Security Token

        ## Allowed roles

        E_COMMERCE, APPLICATION_SUBMITTER

        ## Changelog

        - v19.0.0  : New fields `residualAmount`,
        `residualAmountNotAllowToBeOverwrittenByRule` in request body. New field
        `reservedAccountNumber` in response body.

        - v18.0.0 : New fields `externalPartyId`,
        `administrativeAreaName`,`salesPerson` in request body.

        - v16.0.0 : New fields `vatInformation`,`appliedOfferID` in request
        body.
      operationId: updateLoanApplicationFroWebV5
      requestBody:
        $ref: '#/components/requestBodies/LoanApplication-Patch-Request'
      responses:
        '200':
          description: Application successfully updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoanApplicationResponse'
        '400':
          $ref: '#/components/responses/Common-BadRequest-Response'
        '401':
          $ref: '#/components/responses/Common-Unauthorized-Response'
        '403':
          $ref: '#/components/responses/Common-Forbidden-Response'
        '500':
          $ref: '#/components/responses/Common-ServerError-Response'
      security:
        - Authorization: []
  /api/loan/v5/applications/{id}/credits:
    post:
      tags:
        - Applications
      summary: Create credit info for loan application
      description: >
        ## General description

        Add credit info to loan application when in status PENDING, BID and
        PN_CREATED

        ## Allowed VP token

        Access Token

        ## Allowed roles

        My Pages
      operationId: add-credit-v5-saijgfjd-fdsfd
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Credit'
            examples:
              example-1:
                value:
                  sum: 0
                  rate: 0
                  paybackTime: 0
                  bank: string
                  monthlyCost: 0
                  typeOfCredit: string
                  externalLoanAccountNumber: string
                  validForCollateral: true
                  amortization: 0
                  receiverType: SE-CLEARING
                  receiverAccount: string
                  messageInfo: string
                  ocrReference: string
                  needSettle: true
                  settleAmount: 0
        required: true
        description: ''
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Credit'
              examples:
                example-1:
                  value:
                    id: '123'
                    sum: 0
                    rate: 0
                    paybackTime: 0
                    bank: string
                    monthlyCost: 0
                    typeOfCredit: string
                    externalLoanAccountNumber: string
                    validForCollateral: true
                    amortization: 0
                    receiverType: SE-CLEARING
                    receiverAccount: string
                    messageInfo: string
                    ocrReference: string
                    needSettle: true
                    settleAmount: 0
        '401':
          description: >-
            Unauthorized. The token is invalid/expired or the SSN does not exist
            in the VP. Please refer to the error message for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '403':
          description: >-
            Forbidden. No access rights or access frequency too fast. Please
            refer to the error message for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '404':
          description: Application not found
        '500':
          description: >-
            Internal server error. Please refer to the error message for
            details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
  /api/loan/v5/applications/{id}/credits/{creditId}:
    patch:
      summary: Update credit info for loan application
      operationId: patch-creditd-vp-dasdakhf-dsadsad
      responses:
        '200':
          description: OK
        '401':
          description: Unauthorized
        '404':
          description: Application or credit not found
        '500':
          description: Internal Server Error
        '501':
          description: Not Implemented
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Credit'
            examples:
              example-1:
                value:
                  sum: 0
                  rate: 0
                  paybackTime: 0
                  bank: string
                  monthlyCost: 0
                  typeOfCredit: string
                  externalLoanAccountNumber: string
                  validForCollateral: true
                  amortization: 0
                  receiverType: SE-CLEARING
                  receiverAccount: string
                  messageInfo: string
                  ocrReference: string
                  needSettle: true
                  settleAmount: 0
      description: >
        ## General description

        Patch credit for loan application when in status PENDING, BID and
        PN_CREATED

        ## Allowed VP token

        Access Token

        ## Allowed roles

        My Pages
      tags:
        - Applications
    delete:
      summary: Remove credit info for loan application
      operationId: delete-credit-v5-fdsajjhjk
      responses:
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '404':
          description: Application not found
        '500':
          description: Internal Server Error
        '501':
          description: Not Implemented
      description: >
        ## General description

        Delete credit from loan application when in status PENDING, BID and
        PN_CREATED

        ## Allowed VP token

        Access Token

        ## Allowed roles

        My Pages
      tags:
        - Applications
  /api/loan/v6/applications/{applicationId}/signRequests:
    post:
      tags:
        - Signing
        - Applications
      summary: Initiate sign process for application (LOAN ONLY)
      description: Initiate promissory note signing process if possible (LOAN ONLY)
      operationId: ba67a930-5636-4f77-8225-ce4749ec8688
      parameters:
        - name: applicationId
          in: path
          description: The application ID
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoanApplicationSignRequest'
        required: true
      responses:
        '200':
          description: Return the sign request information.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoanApplicationSignRequestInfo'
        '400':
          description: Request validation failed, please check the error message
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
    get:
      tags:
        - Signing
        - Applications
      summary: Get sign process information for application
      description: >-
        Returns promissory note signing process information if exists (LOAN
        ONLY)
      operationId: e7d686f6-4549-4583-b432-be1cf9794ca7
      parameters:
        - name: applicationId
          in: path
          description: The application ID
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Return the sign request information.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoanApplicationSignRequestInfo'
        '400':
          description: Request validation failed, please check the error message
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
    delete:
      tags:
        - Signing
        - Applications
      summary: Cancel sign process for application (LOAN ONLY)
      description: >-
        Cancel promissory note signing process for applicant identified using
        login token (LOAN ONLY)
      operationId: d16d4f5a-5185-4ec4-ad5c-1aeb2f0f7cc5
      parameters:
        - name: applicationId
          in: path
          description: The application ID
          required: true
          schema:
            type: string
      responses:
        '204':
          description: Sign process is cancelled
        '400':
          description: Request validation failed, please check the error message
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
  /api/loan/v8/accounts:
    post:
      tags:
        - Loan Accounts
      summary: Create loan account for SME
      description: |
        ## General description
        Create a regular account for SME(accountHolder.type must be SME).
        ## Changelog
        - v24.0.0 : 
          - New field `residualAmount` in request body.
          - New fields `residualAmountType` and `residualAmount` in response body.
        - v17.0.0 : New field `offerId` in request body & response.
      operationId: 3127a008-9f91-483a-88c0-3690c4568039
      responses:
        '201':
          $ref: '#/components/responses/SmeLoanAccount-ForCreation-Response-V8'
        '400':
          description: Wrong request to create account.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '401':
          description: Unauthorized.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '403':
          description: Access denied, please check the error message
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      requestBody:
        $ref: '#/components/requestBodies/SmeLoanAccount-Post-V8'
  /api/loan/v8/accounts/bulkUpdate:
    post:
      tags:
        - Loan Accounts
      summary: Bulk update loan or credit accounts
      description: >-
        Bulk update accounts' state to OPEN or WRITTEN_OFF for all types of
        loans and credit accounts include private individual and SME.
      operationId: 5c018e1f-8b32-4459-9bd1-d1f333554c64
      requestBody:
        content:
          application/json:
            schema:
              required:
                - accountNumbers
                - state
              type: object
              properties:
                state:
                  $ref: '#/components/schemas/AccountState'
                accountNumbers:
                  type: array
                  description: >-
                    The account numbers what you want to update their account
                    state, such as 7100001
                  items:
                    type: string
        required: true
      responses:
        '200':
          description: Request successful.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/bulkUpdateResponseV8'
        '400':
          description: >-
            Bad request. The parameters in the URL or request body are invalid.
            Please refer to the error message for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '401':
          description: >-
            Unauthorized. The token is invalid/expired or the SSN does not exist
            in the VP. Please refer to the error message for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '403':
          description: >-
            Forbidden. No access rights or access frequency too fast. Please
            refer to the error message for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '500':
          description: >-
            Internal server error. Please refer to the error message for
            details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
  /api/loan/v8/accounts/{accountId}:
    get:
      tags:
        - Loan Accounts
      summary: Get loan account for SME by id
      description: >
        ## General description
          Get SME account by id
        ## Allowed tokens
          Security Token
        ## Allowed roles
          Trusted Party
        ## Changelog

        - v27.0.0 : New fields `insurances`, `assetIds`, `appliedTenorInMonth`,
        `startupFee`, `serviceFee`, `valuationFee` in the response.

        - v25.0.0 : New fields `totalVat`, `totalPaidVat`, and
        `totalPaidVatThisYear` in the response.

        - v24.0.0 : New fields `residualAmountType` and `residualAmount` in
        response.

        - v21.0.0 : New field `referenceInterestRate` in response.

        - v17.0.0 : New field `offerId` in response.


        ## Additional information
          - Fields are only supported for regular accounts
            - insurances, assetIds, appliedTenorInMonth, serviceFee, valuationFee
            - totalVat, totalPaidVat, totalPaidVatThisYear
            - approvedTenorInMonth, remainingTenorInMonth, disbursementDate, offerId
          - Fields are only supported for credit accounts
            - creditLimit, availableCreditLimit, blockedStatus
      operationId: 4da6883b-727d-4d14-b655-862fe1838597
      responses:
        '200':
          $ref: '#/components/responses/SmeLoanAccount-Response-V8'
        '400':
          description: >-
            Bad request. The parameters in the URL or request body are invalid.
            Please refer to the error message for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '401':
          description: >-
            Unauthorized. The token is invalid/expired or the SSN does not exist
            in the VP. Please refer to the error message for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '403':
          description: >-
            Forbidden. No access rights or access frequency too fast. Please
            refer to the error message for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '500':
          description: >-
            Internal server error. Please refer to the error message for
            details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
    patch:
      summary: Update loan SME account by id
      operationId: patch-api-loan-v8-accounts-accountId
      responses:
        '200':
          $ref: '#/components/responses/SmeLoanAccount-Response-V8'
        '400':
          description: >-
            Bad request. The parameters in the URL or request body are invalid.
            Please refer to the error message for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '401':
          description: >-
            Unauthorized. The token is invalid/expired or the SSN does not exist
            in the VP. Please refer to the error message for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '403':
          description: >-
            Forbidden. No access rights or access frequency too fast. Please
            refer to the error message for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '500':
          description: >-
            Internal server error. Please refer to the error message for
            details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      description: >
        ## General description
          Update SME account by id
        ## Allowed tokens
          Security Token
        ## Allowed roles
          Trusted Party
        ## Changelog

        - v27.0.0 : New fields `insurances`, `assetIds`, `appliedTenorInMonth`,
        `startupFee`, `serviceFee`, `valuationFee` in the response.

        - v25.0.0 : New fields `totalVat`, `totalPaidVat`, and
        `totalPaidVatThisYear` in the response.

        - v24.0.0 : New fields `residualAmountType` and `residualAmount` in
        response.

        - v21.0.0 : New field `referenceInterestRate` in response.

        - v17.0.0 : New field `offerId` in request body & response.


        ## Additional information
          - Fields are only supported for regular accounts whose statement type is floating
            - dueDay
          - Fields are only supported for regular accounts
            - offerId
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                dueDay:
                  type: integer
                  description: >
                    The account due day (range 1 ~ 31) is only for accounts of
                    products configured with floating statement

                    It supports r7. For r8, r9 and r10 are not supported, and
                    r11+ is supported
                  example: 28
                offerId:
                  type: string
                  description: offer id, only support regular account
                  example: '1'
        description: Update loan account request body
      tags:
        - Loan Accounts
      security:
        - Authorization: []
  /api/loan/v8/accounts/{accountId}/disbursementAccount:
    post:
      tags:
        - Loan Accounts
      summary: Create disbursement account for loan or credit SME account
      description: |
        ## General description
        Create disbursement account for loan or credit SME account
        ## Changelog
        - v15.0.0: Support SME credit account.
      operationId: bb6a807c-38ab-43d8-b0da-d0365a18e507
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DisbursementAccountV1'
        required: true
      responses:
        '200':
          description: Create successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DisbursementAccountV1'
        '400':
          description: >-
            Bad request. The parameters in the URL or request body are invalid.
            Please refer to the error message for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '401':
          description: >-
            Unauthorized. The token is invalid/expired or the SSN does not exist
            in the VP. Please refer to the error message for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '403':
          description: >-
            Forbidden. No access rights or access frequency too fast. Please
            refer to the error message for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '500':
          description: >-
            Internal server error. Please refer to the error message for
            details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
    get:
      tags:
        - Loan Accounts
      summary: Get disbursement account for loan or credit SME account
      description: |
        ## General description
        Get disbursement account for loan or credit SME account
        ## Changelog
        - v15.0.0 : Support SME credit account.
      operationId: e7ec74e8-2c00-419d-b1f6-20766dfc12d8
      responses:
        '200':
          description: Disbursement account retrieved successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DisbursementAccountV1'
        '400':
          description: >-
            Bad request. The parameters in the URL or request body are invalid.
            Please refer to the error message for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '401':
          description: >-
            Unauthorized. The token is invalid/expired or the SSN does not exist
            in the VP. Please refer to the error message for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '403':
          description: >-
            Forbidden. No access rights or access frequency too fast. Please
            refer to the error message for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '500':
          description: >-
            Internal server error. Please refer to the error message for
            details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
    put:
      tags:
        - Loan Accounts
      summary: Update disbursement account for loan or credit SME account
      description: |
        ## General description
        Update disbursement account for loan or credit SME account
        ## Changelog
        - v15.0.0: Support SME credit account.
      operationId: ea90aeee-782d-4b77-b00a-68ffda78da93
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DisbursementAccountV1'
        required: true
      responses:
        '200':
          description: Modify successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DisbursementAccountV1'
        '400':
          description: >-
            Bad request. The parameters in the URL or request body are invalid.
            Please refer to the error message for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '401':
          description: >-
            Unauthorized. The token is invalid/expired or the SSN does not exist
            in the VP. Please refer to the error message for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '403':
          description: >-
            Forbidden. No access rights or access frequency too fast. Please
            refer to the error message for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '500':
          description: >-
            Internal server error. Please refer to the error message for
            details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
  /api/loan/v8/accounts/{accountId}/disbursements:
    get:
      summary: Get disbursements of a loan account for SME customer
      tags:
        - Loan Accounts
      responses:
        '200':
          $ref: '#/components/responses/Disbursements-Response'
        '400':
          $ref: '#/components/responses/Common-BadRequest-Response'
        '401':
          $ref: '#/components/responses/Common-Unauthorized-Response'
        '403':
          $ref: '#/components/responses/Common-Forbidden-Response'
        '500':
          $ref: '#/components/responses/Common-ServerError-Response'
      operationId: getLoanDisbursementsV8
      description: |
        ## General description
        Get disbursements of a loan account for SME customer

        ## Allowed VP token
        Security Token

        ## Allowed roles
        Trusted Party
      parameters: []
  /api/loan/v8/accounts/{accountId}/disbursements/{disbursementId}:
    patch:
      summary: Update disbursements by id of a loan account for SME customer
      operationId: updateLoanDisbursementV8
      responses:
        '200':
          $ref: '#/components/responses/Disbursement-Response'
        '400':
          $ref: '#/components/responses/Common-BadRequest-Response'
        '401':
          $ref: '#/components/responses/Common-Unauthorized-Response'
        '403':
          $ref: '#/components/responses/Common-Forbidden-Response'
        '500':
          $ref: '#/components/responses/Common-ServerError-Response'
      tags:
        - Loan Accounts
      parameters: []
      description: |
        ## General description
        Update disbursements by id of a loan account for SME customer

        ## Allowed VP token
        Security Token

        ## Allowed roles
        Trusted Party
      requestBody:
        $ref: '#/components/requestBodies/Disbursement-Patch'
    delete:
      summary: Remove disbursements by id of a loan account for SME customer
      operationId: removeLoanDisbursementV8
      responses:
        '204':
          description: >-
            Remove disbursements by id of a loan account for SME customer
            successfully.
        '400':
          $ref: '#/components/responses/Common-BadRequest-Response'
        '401':
          $ref: '#/components/responses/Common-Unauthorized-Response'
        '403':
          $ref: '#/components/responses/Common-Forbidden-Response'
        '500':
          $ref: '#/components/responses/Common-ServerError-Response'
      tags:
        - Loan Accounts
      description: |
        ## General description
        Remove disbursements by id of a loan account for SME customer

        ## Allowed VP token
        Security Token

        ## Allowed roles
        Trusted Party
      parameters: []
  /api/loan/v8/accounts/{accountId}/documents/{documentId}/download:
    get:
      tags:
        - Loan Accounts
      summary: Download document for loan SME account
      description: |
        ## General description
          Download document by document id for SME account
        ## Allowed tokens
          Security Token
        ## Allowed roles
          Trusted Party
        ## Additional information
          Document id could be retrieved by 'GET /api/loan/v8/accounts/{accountId}'
      operationId: 4a818cc8-1723-42f5-9b0c-25e0c1b7dcd2
      responses:
        '200':
          description: Download document successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InputStream'
        '400':
          description: >-
            Bad request. The parameters in the URL or request body are invalid.
            Please refer to the error message for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '401':
          description: >-
            Unauthorized. The token is invalid/expired or the SSN does not exist
            in the VP. Please refer to the error message for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '403':
          description: >-
            Forbidden. No access rights or access frequency too fast. Please
            refer to the error message for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '500':
          description: >-
            Internal server error. Please refer to the error message for
            details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
  /api/loan/v8/accounts/{accountId}/invoices:
    get:
      tags:
        - Loan Accounts
      summary: Get invoices for loan or credit SME account
      description: |
        ## General description
          Get invoices information for SME regular loan and credit accounts
        ## Allowed tokens
          Security Token
        ## Allowed roles
          Trusted Party
        ## Changelog
        - v31.0.0: New field `reminder` in the response.
        - v27.0.0: New invoice status `REVERSED` in the response.
        - v25.0.0 : Add a new field `vatAmount` in the response.
      operationId: cad7b347-2b06-467c-a92d-6eebf80e3e83
      parameters:
        - name: asc
          in: query
          description: >-
            Sort parameter, sort the invoices in ascending order, please do not
            provide the param desc at the same time. Currently only support the
            dueDate.
          schema:
            type: string
          example: dueDate
        - name: desc
          in: query
          description: >-
            Sort parameter, sort the invoices in descending order, please do not
            provide the param asc at the same time. Currently only support the
            dueDate.
          schema:
            type: string
          example: dueDate
        - name: invoiceTypes
          in: query
          description: Multiple intervals by comma(,)
          schema:
            $ref: '#/components/schemas/InvoiceType'
      responses:
        '200':
          description: Get invoices successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvoicesResponse'
        '400':
          description: >-
            Bad request. The parameters in the URL or request body are invalid.
            Please refer to the error message for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '401':
          description: >-
            Unauthorized. The token is invalid/expired or the SSN does not exist
            in the VP. Please refer to the error message for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '403':
          description: >-
            Forbidden. No access rights or access frequency too fast. Please
            refer to the error message for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '500':
          description: >-
            Internal server error. Please refer to the error message for
            details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
  /api/loan/v8/accounts/{accountId}/paymentPlans:
    get:
      tags:
        - Loan Accounts
      summary: Get payment plans for loan or credit SME accounts
      description: >
        ## General description
          Get payment plans for SME regular loan and credit accounts
        ## Allowed tokens
          Security Token
        ## Allowed roles
          Trusted Party
        ## Changelog

        - v27.0.0: New invoice invoiceStatus `REVERSED` in the response.

        - v25.0.0 : New fields `rounding`, `vatAmount` and
        `totalAmountIncludeVat` in the response for SME loan accounts.

        - v14.0.0 : New request header `forceCreate`.
      operationId: fb99449f-9cf6-4ff3-abe0-8b799517f0c7
      parameters:
        - name: asc
          in: query
          description: >-
            Sort parameter, sort payment plans in ascending order, please do not
            provide the param desc at the same time. Currently only support the
            dueDate.
          schema:
            type: string
          example: dueDate
        - name: desc
          in: query
          description: >-
            Sort parameter, sort payment plans in descending order, please do
            not provide the param asc at the same time. Currently only support
            the dueDate.
          schema:
            type: string
          example: dueDate
        - schema:
            type: string
          in: query
          description: Force to create payment plan ignore cache
          name: forceCreate
      responses:
        '200':
          description: Get payment plans successfully.
          content:
            application/json:
              schema:
                discriminator:
                  propertyName: accountType
                oneOf:
                  - $ref: '#/components/schemas/BUSINESS_REGULAR_ACCOUNT'
                  - $ref: '#/components/schemas/BUSINESS_CREDIT_ACCOUNT'
        '400':
          description: >-
            Bad request. The parameters in the URL or request body are invalid.
            Please refer to the error message for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '401':
          description: >-
            Unauthorized. The token is invalid/expired or the SSN does not exist
            in the VP. Please refer to the error message for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '403':
          description: >-
            Forbidden. No access rights or access frequency too fast. Please
            refer to the error message for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '500':
          description: >-
            Internal server error. Please refer to the error message for
            details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
  /api/loan/v8/accounts/{accountId}/specialPaymentAgreements:
    post:
      tags:
        - Loan Accounts
      summary: Request special payment agreement for the SME regular account
      description: |
        ## General description
        Request special payment agreement for the SME regular account
        ## Allowed tokens
        Security Token
        ## Allowed roles
        Trusted Party
        ## Changelog
          - v29.0.0 : 
            - New `paymentAgreementType` enum value `CUSTOM_AMOUNTS`
            - New field `amortization` in the request, required if `paymentAgreementType` is `CUSTOM_AMOUNTS`
      operationId: 093d5696-aef1-49ea-b8ca-4285505c1f77
      parameters:
        - name: Accept-Language
          in: header
          description: The response message language.
          schema:
            type: string
        - name: accountId
          in: path
          description: The id of account.
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SpecialPaymentAgreementRequest'
        required: true
      responses:
        '200':
          description: Create special payment agreement.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '400':
          description: >-
            Bad request. The parameters in the URL or request body are invalid.
            Please refer to the error message for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '401':
          description: >-
            Unauthorized. The token is invalid/expired or the SSN does not exist
            in the VP. Please refer to the error message for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '403':
          description: >-
            Forbidden. No access rights or access frequency too fast. Please
            refer to the error message for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '412':
          description: >-
            Precondition failed. The parameters in the URL or request body are
            invalid. Please refer to the error message for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '500':
          description: >-
            Internal server error. Please refer to the error message for
            details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
    get:
      tags:
        - Loan Accounts
      summary: Get special payment agreement for the loan SME account
      description: |
        ## General description
        Get special payment agreement for the SME regular account
        ## Allowed tokens
        Security Token
        ## Allowed roles
        Trusted Party
        ## Changelog
        - v29.0.0 : 
          - New `paymentAgreementType` enum value `CUSTOM_AMOUNTS`
          - New field `amortization` in the response, only if `paymentAgreementType` is `CUSTOM_AMOUNTS`
        - v20.0.0: New fields `startMonth`, `endMonth` in response
      operationId: 30fcab7c-5f1f-4dd5-a677-0dd03ba919d9
      responses:
        '200':
          description: Get special payment agreements successfully.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SpecialPaymentAgreement'
        '400':
          description: >-
            Bad request. The parameters in the URL or request body are invalid.
            Please refer to the error message for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '401':
          description: >-
            Unauthorized. The token is invalid/expired or the SSN does not exist
            in the VP. Please refer to the error message for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '403':
          description: >-
            Forbidden. No access rights or access frequency too fast. Please
            refer to the error message for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '404':
          description: >-
            The account is not found, currently this API doesn't support to
            response json when meet such code.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '500':
          description: >-
            Internal server error. Please refer to the error message for
            details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
  /api/loan/v8/accounts/{accountId}/specialPaymentAgreements/paymentProgramChange:
    post:
      tags:
        - Loan Accounts
      summary: Payment program change for loan SME account
      description: Apply to regular account payment program change for SME
      operationId: a900b863-091c-43c8-b8db-76de46b4218a
      parameters:
        - name: Accept-Language
          in: header
          description: 'The response message language: en, sv.'
          schema:
            type: string
        - name: accountId
          in: path
          description: The id of account.
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              required:
                - tenorChangeTo
              type: object
              properties:
                tenorChangeTo:
                  type: integer
                  description: The request value of payment program change.
                  example: 10
                administrativeFee:
                  type: number
                  description: >-
                    This is a administrative fee from api, if you set a value
                    then will ignore the fee which has been set in product.
                  example: 200
        required: true
      responses:
        '200':
          description: Payment program change successfully updated.
        '400':
          description: >-
            Bad request. The parameters in the URL or request body are invalid.
            Please refer to the error message for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '401':
          description: >-
            Unauthorized. The token is invalid/expired or the SSN does not exist
            in the VP. Please refer to the error message for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '403':
          description: >-
            Forbidden. No access rights or access frequency too fast. Please
            refer to the error message for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '500':
          description: >-
            Internal server error. Please refer to the error message for
            details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
  /api/loan/v8/accounts/{accountId}/specialPaymentAgreements/{specialPaymentAgreementId}:
    delete:
      tags:
        - Loan Accounts
      summary: Cancel special payment agreement for the SME regular account
      description: |
        ## General description
        Cancel special payment agreement for the SME regular account
        ## Allowed tokens
        Security Token
        ## Allowed roles
        Trusted Party
      operationId: 9e1f3923-0de6-4ffb-aece-c3c002315754
      parameters:
        - name: Accept-Language
          in: header
          description: The response message language.
          schema:
            type: string
        - name: accountId
          in: path
          description: The id of account.
          required: true
          schema:
            type: string
        - name: specialPaymentAgreementId
          in: path
          description: The id of special payment agreement.
          required: true
          schema:
            type: string
      responses:
        '204':
          description: Cancel special payment agreement successfully.
        '400':
          description: >-
            Bad request. The parameters in the URL or request body are invalid.
            Please refer to the error message for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '401':
          description: >-
            Unauthorized. The token is invalid/expired or the SSN does not exist
            in the VP. Please refer to the error message for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '403':
          description: >-
            Forbidden. No access rights or access frequency too fast. Please
            refer to the error message for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '500':
          description: >-
            Internal server error. Please refer to the error message for
            details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
  /api/loan/v8/accounts/{accountId}/statementChannel:
    put:
      tags:
        - Loan Accounts
      summary: Update statement channel for loan SME account
      description: Update the regular account statement channel for SME (LOAN ONLY)
      operationId: ac90d324-6739-4789-9a64-3f69c849e3c5
      requestBody:
        content:
          application/json:
            schema:
              required:
                - statementChannel
              type: object
              properties:
                statementChannel:
                  $ref: '#/components/schemas/StatementChannel'
        required: true
      responses:
        '200':
          description: Account statement channel successfully updated.
        '400':
          description: >-
            Bad request. The parameters in the URL or request body are invalid.
            Please refer to the error message for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '401':
          description: >-
            Unauthorized. The token is invalid/expired or the SSN does not exist
            in the VP. Please refer to the error message for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '403':
          description: >-
            Forbidden. No access rights or access frequency too fast. Please
            refer to the error message for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '500':
          description: >-
            Internal server error. Please refer to the error message for
            details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
  /api/loan/v8/accounts/{accountId}/tranches:
    post:
      tags:
        - Loan Accounts
      summary: Create tranches for credit SME account
      description: |-
        ## General description
        Create a tranche for an SME account.
        ## Changelog
        - v18.0.0 : New http response with http code `429`.
      operationId: 2b95a815-1a66-4625-a96b-f0f931ee6e21
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SMETrancheRequest'
        required: true
      responses:
        '201':
          description: Return the created tranche for the SME account
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SMETranche'
        '400':
          description: Wrong request to create tranches
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '401':
          description: Unauthorized.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '403':
          description: Access denied, please check the error message
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '429':
          description: Duplicate request found by checking the Request-Id
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
              examples:
                Example 1:
                  value:
                    message: API rate limit exceeded
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      parameters:
        - schema:
            type: string
            maxLength: 36
          in: header
          name: Request-Id
          description: >-
            Request-Id expires after twelve hours as default. After this time
            period, requests using duplicate keys will be treated as new
            requests. You can get the actual expired time by speaking to the
            Customer Success Manager.
    get:
      tags:
        - Loan Accounts
      summary: Get tranches for credit SME account
      description: |
        ## General description
        get all tranches by accountId for SME account.
        ## Changelog
        - v15.0.0 : New request header `Request-Id`.
      operationId: 7ceece65-c405-4e69-a2a3-647dcdfe96cc
      responses:
        '200':
          description: Return all the tranches of the account
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SMETranchesResponse'
        '400':
          description: Wrong request to get tranches
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '401':
          description: Unauthorized.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '403':
          description: Access denied, please check the error message
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
  /api/loan/v8/accounts/{accountId}/transactions:
    get:
      tags:
        - Loan Accounts
      summary: Get transactions for loan or credit SME account by query parameters
      description: >
        ## General description

        Get SME account transactions by different query criterias.

        ## Allowed tokens

        Security Token

        ## Allowed roles

        Trusted Party

        ## Additional information

        The default sort order is sorting the account transactions by
        transactionDate in descending order.
      operationId: 80d12360-863a-4fc8-9a59-370576d2845f
      parameters:
        - name: startDate
          in: query
          description: format is yyyy-MM-dd
          schema:
            type: string
            format: date
        - name: endDate
          in: query
          description: format is yyyy-MM-dd
          schema:
            type: string
            format: date
        - name: shownInStatement
          in: query
          description: >-
            Indicate if only the transactions shown in the statement file will
            be retrived
          schema:
            type: boolean
        - name: excludeTransactionTypes
          in: query
          description: >-
            Indicate what type of transactions will be excluded,multiple
            intervals by comma(,);
          schema:
            type: string
        - name: page
          in: query
          description: Pagination parameter, the given page number.
          schema:
            type: number
            default: 1
        - name: size
          in: query
          description: Pagination parameter, the data size per page.
          schema:
            type: number
            default: 10
        - name: asc
          in: query
          description: >-
            Sort parameter, sort the account transactions in ascending order,
            don't provide the param `desc` at the same time. Currently only
            support the transactionDate.
          schema:
            type: string
          example: transactionDate
        - name: desc
          in: query
          description: >-
            Sort parameter, sort the account transactions in descending order,
            don't provide the param `asc` at the same time. Currently only
            support the transactionDate.
          schema:
            type: string
          example: transactionDate
      responses:
        '206':
          description: >-
            Return partial account transactions, you receive an object with
            empty Array of account transactions if nothing found.
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/AccountTransactionListResponseV8'
        '400':
          description: Bad request to get account transactions.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '401':
          description: >-
            Unauthorized, currently this API doesn't support to response json
            when meet such code.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '403':
          description: Access denied, please check the error message
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
  /api/loan/v8/applications:
    post:
      tags:
        - Applications
      summary: Create loan application for SME
      description: >
        ## General description

        Create an application for SME without any evaluation.

        ## Changelog

        - v26.0.0
          - New field `assets` in the request.
          - New field `assetIds` in the response.
         - v20.0.0 : new field `guarantees.guarantorCategory` in request and response.
        - v19.0.0  
            - New field `dynamicFields` in request body & response.
            - New field `residualAmountType` in response.
            - New fields `residualAmount`, `residualAmountNotAllowToBeOverwrittenByRule` in request body & response.
        - v18.0.0 : New field `administrativeAreaName` in request body and
        response.

        - v16.0.0 : New fields `vatInformation`,`appliedOfferID` in request
        body.
      operationId: ebdb37d2-ca62-4270-a403-5451460e6714
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApplicationV8PostRequest'
        required: true
      responses:
        '201':
          description: Return the created application for SME.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationV8Response'
        '400':
          description: Wrong request to create an application.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '401':
          description: Unauthorized.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '403':
          description: Access denied, please check the error message
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
    get:
      tags:
        - Applications
      summary: Get credit or loan application for SME
      description: >
        ## General description

        Get Applications for SME

        ## Changelog

        - v26.0.0 : New fields `brokerName`, `assetIds` in the response.

        - v21.0.0 : New field `referenceInterestRate` in response.

        - v20.0.0 : new field `guarantees.guarantorCategory` in response

        - v19.0.0  : New fields `residualAmountType`, `residualAmount`,
        `residualAmountNotAllowToBeOverwrittenByRule` in response.

        - v18.0.0 : New field `administrativeAreaName` in response.

        - v15.0.0: New fields `externalPartyId`,`salesPerson` in response.
      operationId: 2770434e-0f1c-4f6e-b30e-7688acc8ab7c
      parameters:
        - name: smeId
          in: query
          required: true
          schema:
            type: string
          description: smeId
      responses:
        '200':
          description: Get Credit Applications for SME.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SMECreditApplicationResponse'
        '401':
          description: Unauthorized.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '403':
          description: Access denied, please check the error message
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
  /api/loan/v8/applications/aggregate:
    get:
      tags:
        - Applications
      summary: Aggregate loan or credit applications for SME
      description: Aggregate applications for SME (LOAN ONLY)
      operationId: 15314346-310b-4a11-8b48-2248522cfd94
      parameters:
        - name: function
          in: query
          description: The current function parameter only supports count
          required: true
          schema:
            type: string
          example: count
        - name: groupFields
          in: query
          description: >-
            Grouped fields, you can provide multiple fields of string type
            separated by commas and the grouping hierarchy is determined
            according to the grouping field
          required: true
          schema:
            type: string
          example: assignedUser,applicationState,applicationType
      responses:
        '200':
          description: Aggregate applications successfully
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ApplicationAggregateResponse'
        '400':
          description: Aggregate applications failed, please check error message
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '401':
          description: Unauthorized.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '403':
          description: Access denied, please check the error message
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
  /api/loan/v8/applications/{applicationId}:
    get:
      tags:
        - Applications
      summary: Get SME credit or loan application by id
      description: >
        ## General description

        Get an Application for SME (LOAN ONLY)

        ## Changelog

        - v26.0.0 : New fields `brokerName`, `assetIds` in the response.

        - v21.0.0 : New field `referenceInterestRate` in response.

        - v20.0.0 : new field `guarantees.guarantorCategory` in response

        - v19.0.0  : New fields `residualAmountType`, `residualAmount`,
        `residualAmountNotAllowToBeOverwrittenByRule` in response.

        - v18.0.0 : New field `administrativeAreaName` in response.

        - v15.0.0 : New fields
        `externalPartyId`,`externalPartyName`,`salesPerson` in response.
      operationId: 4bf9823b-1812-4123-9056-8f4a83ee7cf3
      responses:
        '200':
          description: Get credit or loan Application for SME.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SMECreditApplicationResponse'
        '401':
          description: Unauthorized.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '403':
          description: Access denied, please check the error message
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
    patch:
      tags:
        - Applications
      summary: Update credit or loan application for SME
      description: |
        ## General description
        Patch an Application for SME (LOAN ONLY)
        ## Changelog
        - v19.0.0  
          - New field `residualAmountType` in response.
          - New fields `residualAmount`, `residualAmountNotAllowToBeOverwrittenByRule` in request body & response.
        - v18.0.0 
          - New field `manualDeltaInterestRate` in request body.
          - New fields `extenralPartyId`, `administrativeAreaName`, `salesPerson` in request body & response.
        - v16.0.0 
          - New field `vatInformation` in request body.
          - New field `appliedOfferID` in request body & response.
      operationId: 664705ec-9952-41af-923d-fc1cd7404e79
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SMECreditApplicationPatch'
        required: true
      responses:
        '201':
          description: Return patched Credit Application for SME.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SMEApplicationPatchResponse'
        '401':
          description: Unauthorized.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '403':
          description: Access denied, please check the error message
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
  /api/loan/v8/applications/{applicationId}/credits:
    post:
      tags:
        - Applications
      summary: Create credit info application for SME
      description: Create a credit info application for SME.
      operationId: c2d16eaa-c692-4984-bcb8-a8d7e80c3f19
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreditV8PostRequestBO'
        required: true
      responses:
        '201':
          description: Return the created credit in application for SME.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreditV8ResponseBO'
        '400':
          description: Wrong request to create a credit info application.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '401':
          description: Unauthorized.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '403':
          description: Access denied, please check the error message
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '404':
          description: Application not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
  /api/loan/v8/applications/{applicationId}/credits/{creditId}:
    patch:
      tags:
        - Applications
      summary: Update credit info for loan or credit SME application
      description: Patch credit in application for SME (LOAN ONLY)
      operationId: 30d65731-b8a2-49bd-8721-b3feee4d854f
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreditV8PatchRequestBO'
        required: true
      responses:
        '201':
          description: Return patched credit in application for SME.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreditV8ResponseBO'
        '401':
          description: Unauthorized.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '403':
          description: Access denied, please check the error message
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '404':
          description: Application or credit not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
    delete:
      tags:
        - Applications
      summary: Delete credit info for loan or credit SME application
      description: Delete credit in application for SME (LOAN ONLY)
      operationId: 31977e3c-af27-4a5c-9217-4e04c6f349ab
      responses:
        '204':
          description: Delete credit in application successfully.
        '401':
          description: Unauthorized.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '403':
          description: Access denied, please check the error message
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '404':
          description: Application or credit not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
  /api/loan/v8/applications/{applicationId}/documents:
    post:
      tags:
        - Applications
      summary: Create documents for SME loan application
      description: |-
        Add documents for SME loan application.
        ## Allowed  token
        Security Token
        ## Allowed roles
        Trusted Party
        ## Changelog
         - v29.0.0: API added.
      operationId: uploadDocumentForApplicationV8
      requestBody:
        content:
          multipart/form-data:
            schema:
              required:
                - documentType
                - files
              type: object
              properties:
                documentType:
                  type: string
                  description: |
                    Support the document types that configured in Earchive, eg:
                    * PROMISSORY_NOTE Promissory note.
                    * SALES_SLIP Sales slip.
                    * DIRECT_DEBIT_CONSENT Direct debit consent.
                    * ENTIRE_LIST_OF_COMPLEMENTS Entire list of complements.
                    * OTHERS Others.
                documentSignStatus:
                  type: string
                  description: |
                    * UNSIGNED Unsigned,default value.
                    * MANUAL_SIGNED  Manual signed.
                    * DIGITAL_SIGNED Digital signed.
                  default: UNSIGNED
                  enum:
                    - UNSIGNED
                    - MANUAL_SIGNED
                    - DIGITAL_SIGNED
                files:
                  type: array
                  items:
                    type: string
                    format: binary
                note:
                  type: string
                  description: Description of documents
                tags:
                  type: string
                  description: |
                    User defined tags
                    * {"any key": "any value", "any key": "any value", ...}
        required: true
      responses:
        '201':
          description: Documents created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        documentId:
                          type: string
                          description: Document Id
                        fileName:
                          type: string
                          description: File name
        '400':
          description: >-
            Bad request. The parameters in the URL or request body are invalid.
            Please refer to the error message for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '401':
          description: >-
            Unauthorized. The token is invalid/expired or the SSN does not exist
            in the VP. Please refer to the error message for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '403':
          description: >-
            Forbidden. No access rights or access frequency too fast. Please
            refer to the error message for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '500':
          description: >-
            Internal server error. Please refer to the error message for
            details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
  /api/loan/v8/applications/{applicationId}/documents/{documentId}/download:
    get:
      tags:
        - Applications
      summary: Download application files for a SME application
      operationId: get-api-loan-v8-applications-applicationId-documents-documentId-download
      description: |
        ## General description
        Download application files for a SME application
        ## Allowed tokens
        Security Token
        ## Allowed roles
        Trusted Party
        ## Changelog
        - v18.0.0 : API added.
      responses:
        '200':
          description: Download document successfully
          headers:
            content-disposition:
              schema:
                type: string
                description: Filename.
          content:
            application/octet-stream:
              schema:
                $ref: '#/components/schemas/InputStream'
        '401':
          description: >-
            Unauthorized. The token is invalid/expired or the SSN does not exist
            in the VP. Please refer to the error message for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '403':
          description: >-
            Forbidden. No access rights or access frequency too fast. Please
            refer to the error message for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '404':
          description: Application or document not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '500':
          description: >-
            Internal server error. Please refer to the error message for
            details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
  /api/loan/v8/applications/{applicationId}/guarantees:
    post:
      tags:
        - Applications
      summary: Create a guarantee for loan or credit SME application
      description: >
        ## General description

        Create a guarantee for an SME application

        ## Allowed tokens

        Security Token

        ## Allowed roles

        Trusted Party

        ## Additional information

        Guarantor type: INDIVIDUAL_GUARANTOR(for individual guarantor only) and
        BUSINESS_GUARANTOR(for business guarantor only)

        ## Changelog

        - v20.0.0 : new field `guarantorCategory` in request and response
      operationId: 3dc2d611-7062-4f92-9d57-49ff5d330104
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GuaranteeV8PostRequest'
        required: true
      responses:
        '201':
          description: Guarantee created successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GuaranteeV8Response'
        '400':
          description: Wrong request to create a guarantee into application.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '401':
          description: Unauthorized.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '403':
          description: Access denied, please check the error message
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '404':
          description: Application not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      security:
        - Authorization: []
    get:
      tags:
        - Applications
      summary: Get all guarantees for loan or credit SME application
      description: |
        ## General description
        Get all guarantees for an SME application.
        ## Allowed tokens
        Security Token
        ## Allowed roles
        Trusted Party
        ## Changelog
        - v20.0.0 : new field `guarantees.guarantorCategory` in response
      operationId: 611e303a-c791-4780-8321-5ee0a3707abf
      responses:
        '200':
          description: Get all guarantees successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GuaranteesV8Response'
        '401':
          description: Unauthorized.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '403':
          description: Access denied, please check the error message
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '404':
          description: Guarantee not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      security:
        - Authorization: []
  /api/loan/v8/applications/{applicationId}/guarantees/{guaranteeId}:
    get:
      tags:
        - Applications
      summary: Get guarantee for an loan or credit SME application
      description: |
        ## General description
        Get a guarantee for an SME application
        ## Allowed tokens
        Security Token
        ## Allowed roles
        Trusted Party
        ## Changelog
        - v20.0.0 : new field `guarantorCategory` in response
      operationId: 911871be-dbfe-49af-9b29-0ba7a06a18d3
      responses:
        '200':
          description: Get the guarantee successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GuaranteeV8Response'
        '401':
          description: Unauthorized.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '403':
          description: Access denied, please check the error message
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '404':
          description: Guarantee not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      security:
        - Authorization: []
    patch:
      tags:
        - Applications
      summary: Update a guarantee for loan or credit SME application
      description: |
        ## General description
        Update a guarantee of an SME application.
        ## Allowed tokens
        Security Token
        ## Allowed roles
        Trusted Party
        ## Additional information
        For business guarantor, only guarantee amount can be updated.
        ## Changelog
        - v20.0.0 : new field `guarantorCategory` in request and response.
      operationId: 4f01630c-b52f-48ae-994b-2c7c1c2af321
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GuaranteeV8PatchRequest'
        required: true
      responses:
        '200':
          description: Update the guarantee successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GuaranteeV8Response'
        '400':
          description: Wrong request to update a guarantee into application.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '401':
          description: Unauthorized.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '403':
          description: Access denied, please check the error message
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '404':
          description: Application or guarantee not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      security:
        - Authorization: []
    delete:
      tags:
        - Applications
      summary: Remove a guarantee for loan or credit SME application
      description: |
        ## General description
        Remove a guarantee for an SME application
        ## Allowed tokens
        Security Token
        ## Allowed roles
        Trusted Party
      operationId: e02fd16d-a882-4de6-a93d-d566449321ee
      responses:
        '204':
          description: The guarantee has been removed.
        '401':
          description: Unauthorized.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '403':
          description: Access denied, please check the error message
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '404':
          description: Application or guarantee not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      security:
        - Authorization: []
  /api/loan/v8/applications/{applicationId}/preconditions:
    get:
      tags:
        - Applications
      summary: Get preconditions for loan or credit SME application
      description: Get Preconditions for SME
      operationId: ab9d59e1-d318-4bdb-a158-e0f8fc735dc5
      responses:
        '200':
          description: Get Preconditions for SME.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PreconditionResponse'
        '401':
          description: Unauthorized.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '403':
          description: Access denied, please check the error message
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
  /api/loan/v8/applications/{applicationId}/preconditions/{preconditionId}:
    patch:
      tags:
        - Applications
      summary: update precondition for loan or credit SME application
      description: Patch precondition in application for SME
      operationId: 29d0e172-7e06-447c-afac-a3537fe6a5ce
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PreconditionRequestBody'
        required: true
      responses:
        '201':
          description: Return patched credit in application for SME.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Precondition'
        '401':
          description: Unauthorized.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '403':
          description: Access denied, please check the error message
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '404':
          description: Application or credit not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
  /api/loan/v8/applications/{applicationId}/promissoryNotes:
    post:
      tags:
        - Applications
      summary: Create new file as a promissory note for loan or credit SME application
      description: Create new file as a promissory note for SME application
      operationId: e6e35f5e-6e46-437b-af8b-a2d79948751b
      parameters:
        - name: applicationId
          in: path
          description: The application ID (SME only).
          required: true
          schema:
            type: string
      requestBody:
        content:
          multipart/form-data:
            schema:
              required:
                - file
              type: object
              properties:
                file:
                  type: string
                  format: binary
        required: true
      responses:
        '201':
          description: Document uploaded successfully
          content:
            application/json:
              schema:
                type: string
                description: Archive Document Id
        '401':
          description: Unauthorized.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '403':
          description: Access denied, please check the error message
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '404':
          description: Not correct application id
          content:
            application/json:
              schema:
                type: string
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
  /api/messaging/v1/secureMessages:
    post:
      tags:
        - Messaging
      summary: Create secure message for deposit customer
      description: Create secure message for deposit customer
      operationId: f3fc7b5b-dd10-4ff5-963b-af2d41bb4d52
      parameters:
        - name: X-AUTH-TOKEN
          in: header
          description: Access token
          required: true
          schema:
            type: string
      requestBody:
        description: >-
          If you want to send under-age secure message, please fill the
          *underAgePrivateCustomerId*, If you want to send company
          representative secure message, please fill the
          *companyRepresentativeId*, Default id is the current login customer
          id.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/V1SendSecureMsg'
        required: true
      responses:
        '200':
          description: >-
            Write secure message for the specified consumer customer
            successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/V1SecureMsg'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
    get:
      tags:
        - Messaging
      summary: Get all secure messages for deposit customer
      description: Get secure message for consumer customer or company representative
      operationId: a7e79315-46a3-47bc-abbf-5f156f0333d1
      parameters:
        - name: X-AUTH-TOKEN
          in: header
          description: Access token
          required: true
          schema:
            type: string
        - name: underAgePrivateCustomerId
          in: query
          description: >-
            The consumer customer id of under-age what you want to
            query.Default: Customer id in token.
          schema:
            type: string
        - name: companyRepresentativeId
          in: query
          description: The company representative id what you want to query.
          schema:
            type: string
      responses:
        '200':
          description: >-
            Get secure messages by consumer customer id or company
            representative id.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/V1SecureMsg'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
  /api/messaging/v1/secureMessages/readSingleReply:
    put:
      tags:
        - Messaging
      summary: Mark a reply of secure message as read for deposit customer
      description: Read single reply secure message
      operationId: bde0d9ca-ee78-4618-82d1-44dd750d8fa8
      parameters:
        - name: X-AUTH-TOKEN
          in: header
          description: Access token
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/V1SecureMessageReplyBody'
        required: true
      responses:
        '200':
          description: >-
            Read the reply of secure message for the specified consumer customer
            or under-age successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/V1SecureMsg'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
  /api/messaging/v1/secureMessages/readStatus:
    put:
      tags:
        - Messaging
      summary: Mark all replies of secure message as read for deposit customer
      description: Read a secure message
      operationId: fb0ba595-bd89-4320-91c8-36b92566b7e0
      parameters:
        - name: X-AUTH-TOKEN
          in: header
          description: Access token
          required: true
          schema:
            type: string
      requestBody:
        description: >-
          If you want to read under-age secure message, please fill the
          *underAgePrivateCustomerId*, If you want to read company
          representative secure message, please fill the
          *companyRepresentativeId*, Default id is the current login customer
          id.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/V1ReadStatusBody'
        required: true
      responses:
        '200':
          description: >-
            Read secure message for the specified consumer customer
            successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/V1SecureMsg'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
  /api/messaging/v1/secureMessages/{secureMessageId}/documents:
    post:
      tags:
        - Messaging
      summary: Upload documents(attachments) for the secure message (deposit only).
      description: >-
        ## General description

        Upload documents(attachments) for the secure message (deposit only).

        ## Allowed VP token

        Access Token

        ## Allowed roles

        My Pages

        ## Additional information

        - Please provide underAgePrivateCustomerId when uploading documents for
        the underage customer.

        - Please provide smeId when uploading documents for the SME customer.

        - Please provide secureMessageReplyId when uploading documents for
        secure message reply.

        - Max number of attachments for one request is 10.


        ## Changelog

        - v18.0.0 : API added.
      operationId: upload-attachments-secureMessage
      parameters:
        - name: smeId
          in: query
          description: The SME legal entity id.
          required: false
          schema:
            type: string
        - name: underAgePrivateCustomerId
          in: query
          description: The private underage customer id.
          required: false
          schema:
            type: string
        - name: secureMessageReplyId
          in: query
          description: Related reply id of the documents to upload.
          required: false
          schema:
            type: string
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                files:
                  type: array
                  items:
                    type: string
                    format: binary
        description: >-
          The API enables uploading multiple files. To upload a file is needed
          to put formData with key as a file name (the key should have a  
          suffix, only support .png, .jpg, .jpeg, .pdf, .doc, .docx, .txt, .xls,
          .xlsx   eg. testFilesName.txt) and value for binary file.
        required: true
      responses:
        '200':
          description: Map of uploaded documents names and associated documents id's.
          content:
            application/json:
              schema:
                description: Document filename.
                type: object
                additionalProperties:
                  description: Document id.
                  type: string
        '400':
          description: >-
            Bad request. The parameters in the URL or request body are invalid.
            Please refer to the error message for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '401':
          description: >-
            Unauthorized. The token is invalid/expired or the SSN does not exist
            in the VP. Please refer to the error message for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '403':
          description: >-
            Forbidden. No access rights or access frequency too fast. Please
            refer to the error message for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '500':
          description: >-
            Internal server error. Please refer to the error message for
            details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
    get:
      tags:
        - Messaging
      summary: Get documents(attachments) list of the secure message (deposit only).
      description: >-
        ## General description

        Get documents(attachments) list of the secure message (deposit only).

        ## Allowed VP token

        Access Token

        ## Allowed roles

        My Pages

        ## Additional information

        - Please provide underAgePrivateCustomerId when getting documents for
        the underage customer.

        - Please provide smeId when getting documents for the SME customer.


        ## Changelog

        - v18.0.0 : API added.
      operationId: get-attachments-secureMessage
      parameters:
        - name: smeId
          in: query
          description: The SME legal entity id.
          required: false
          schema:
            type: string
        - name: underAgePrivateCustomerId
          in: query
          description: The private underage customer id.
          required: false
          schema:
            type: string
      responses:
        '200':
          description: List of attachments assigned to given secure message.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/V1SecureMessageAttachment'
        '400':
          description: >-
            Bad request. The parameters in the URL or request body are invalid.
            Please refer to the error message for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '401':
          description: >-
            Unauthorized. The token is invalid/expired or the SSN does not exist
            in the VP. Please refer to the error message for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '403':
          description: >-
            Forbidden. No access rights or access frequency too fast. Please
            refer to the error message for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '500':
          description: >-
            Internal server error. Please refer to the error message for
            details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
  /api/messaging/v1/secureMessages/{secureMessageId}/documents/{documentId}/file:
    get:
      tags:
        - Messaging
      summary: Download the document(attachment) of a secure message (deposit only).
      description: |-
        ## General description
        Download the document(attachment) of the secure message.
        ## Allowed VP token
        Access Token
        ## Allowed roles
        My Pages
        ## Additional information
        - Customer has also access to related underage attachments.

        ## Changelog
        - v18.0.0 : API added.
      operationId: download-attachment-secureMessage
      responses:
        '200':
          description: Secure message attachment file.
          headers:
            content-disposition:
              schema:
                type: string
                description: Filename.
          content:
            application/octet-stream:
              schema:
                type: string
                format: binary
        '400':
          description: >-
            Bad request. The parameters in the URL or request body are invalid.
            Please refer to the error message for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '401':
          description: >-
            Unauthorized. The token is invalid/expired or the SSN does not exist
            in the VP. Please refer to the error message for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '403':
          description: >-
            Forbidden. No access rights or access frequency too fast. Please
            refer to the error message for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '500':
          description: >-
            Internal server error. Please refer to the error message for
            details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
  /api/messaging/v1/secureMessages/{secureMessageId}/replies:
    get:
      tags:
        - Messaging
      summary: Get all replies for secure message
      description: Get the replies secure messages.
      operationId: 1ecef013-2667-4228-aa7e-abbbbca7f106
      parameters:
        - name: X-AUTH-TOKEN
          in: header
          description: Access token
          required: true
          schema:
            type: string
        - name: secureMessageId
          in: path
          description: The secure message id that you want to reply.
          required: true
          schema:
            type: string
        - name: underAgePrivateCustomerId
          in: query
          description: >-
            The consumer customer id of under-age what you want to
            query.Default: Customer id in token.
          schema:
            type: string
        - name: companyRepresentativeId
          in: query
          description: The company representative id what you want to query.
          schema:
            type: string
      responses:
        '200':
          description: >-
            Get reply secure messages of the specified customer secure message
            successfully.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/V1SecureMsg'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
  /api/messaging/v1/secureMessages/{secureMessageId}/reply:
    post:
      tags:
        - Messaging
      summary: Create reply for secure message of deposit customer
      description: Reply secure message.
      operationId: 5fe52132-abe8-482f-941e-80f272a94668
      parameters:
        - name: X-AUTH-TOKEN
          in: header
          description: Access token
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/V1ReplySecureMessage'
        required: true
      responses:
        '200':
          description: >-
            Reply secure message for the specified consumer customer
            successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/V1SecureMsg'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
  /api/mortgage/v1/originations:
    post:
      tags:
        - Originations
      summary: Submit mortgage origination. (v1)
      description: Start loan application in origination workflow
      operationId: 916a0164-71bf-4b65-82c0-67e657f236fd
      parameters:
        - name: X-AUTH-TOKEN
          in: header
          description: Predefined token (with My Pages and Mortgage Front roles)
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OriginationRequested'
        required: true
      responses:
        '201':
          description: Origination flow started successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OriginationStarted'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
  /api/mortgage/v1/originations/{id}:
    get:
      tags:
        - Originations
      summary: Get mortgage origination by id.
      description: Get origination by id. (LOAN ONLY)
      operationId: cb63e8e7-1c8e-41f9-8a19-d9df0f33b897
      parameters:
        - name: X-AUTH-TOKEN
          in: header
          description: Access token
          required: true
          schema:
            type: string
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: origination id
      responses:
        '200':
          description: Get application full info.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OriginationViewBO'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
  /api/mortgage/v1/originations/{id}/application:
    post:
      tags:
        - Originations
      summary: Update application and trigger re-evaluation (MORTGAGE LOAN ONLY).
      description: >-
        Update application and trigger re-evaluation for the origination
        (MORTGAGE LOAN ONLY). <br>When receiverType is SE-CLEARING, the
        messageInfo field is not supported temporarily.
      operationId: eb52a22c-f364-49f6-8832-71b76c025110
      parameters:
        - name: X-AUTH-TOKEN
          in: header
          description: Access token
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoanApplicationDetailsForOriginations'
        required: true
      responses:
        '200':
          description: Update appplication requested Accepted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OriginationApplicationUpdateResponse'
        '422':
          description: Update appplication requested Rejected
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OriginationApplicationUpdateResponse'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
  /api/mortgage/v1/originations/{id}/documents:
    post:
      tags:
        - Originations
      summary: Create documents for mortgage origination.
      description: Create documents for origination. (LOAN ONLY)
      operationId: d9da58a3-27dd-47b1-886f-21ccb59f8e03
      parameters:
        - name: X-AUTH-TOKEN
          in: header
          description: Access token
          required: true
          schema:
            type: string
        - name: id
          in: path
          description: Origination id.
          required: true
          schema:
            type: string
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UploadOriginationDocumentBody'
        required: true
      responses:
        '201':
          description: Get file successfully, return file binary.
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    fileName:
                      type: string
                      description: the name of document after saved.
                    documentId:
                      type: string
                      description: the id of document after saved.
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
  /api/mortgage/v1/originations/{id}/documents/{documentId}:
    get:
      tags:
        - Originations
      summary: Get document for mortgage origination
      description: >-
        Get origination document by document id and origination entity id. (LOAN
        ONLY)
      operationId: ecf3c6d9-dac8-4f5f-8ebb-46c001ceedae
      parameters:
        - name: X-AUTH-TOKEN
          in: header
          description: Access token
          required: true
          schema:
            type: string
        - name: id
          in: path
          description: The id of origination
          required: true
          schema:
            type: string
        - name: documentId
          in: path
          description: The id of document
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Get file successfully, return file binary.
          content:
            application/octet-stream:
              schema:
                type: string
                format: binary
        '403':
          description: >-
            Get file failed, the access token does not have the authorization to
            download this document.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
  /api/mortgage/v1/originations/{originationId}/collaterals/{collateralId}:
    post:
      tags:
        - Originations
      summary: Update collateral and trigger re-evaluation (MORTGAGE LOAN ONLY)
      description: Update collateral and trigger re-evaluation (mortgage loan-specific)
      operationId: fd628f06-35b6-4152-819b-4d49ab3002e6
      parameters:
        - name: X-AUTH-TOKEN
          in: header
          description: Access token
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CollateralUpdateRequestBO'
        required: true
      responses:
        '200':
          description: Update collateral successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollateralUpdated'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
  /api/mortgage/v2/originations:
    post:
      tags:
        - Originations
      summary: Submit mortgage origination. (v2)
      description: Start loan application in origination workflow v2
      operationId: af475a36-d201-47ce-b6d2-625ab2e5c759
      parameters:
        - name: X-AUTH-TOKEN
          in: header
          description: Predefined token (with My Pages and Mortgage Front roles)
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OriginationRequestedV2'
        required: true
      responses:
        '201':
          description: Origination flow started successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OriginationStarted'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
  /api/origination/v1/originations:
    post:
      tags:
        - Originations
      summary: Submit origination for SME
      description: Submit an origination data (application and customer) for SME.
      operationId: 0b9398e0-ca3a-4e9f-a1c7-acf4c851dd2e
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OriginationRequest'
        required: true
      responses:
        '201':
          description: Return the created origination ID .
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OriginationStarted'
        '400':
          description: Request validation failed, please check the error message
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
  /api/payment/v1/incomingPayments:
    post:
      tags:
        - Payments
      summary: Create incoming payment for deposit account
      description: Create incoming payment for deposit account.
      operationId: 5347035a-83ea-4a17-af3f-5dd5078c0ee3
      parameters:
        - name: X-AUTH-TOKEN
          in: header
          description: Access token
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IncomingPayment'
        required: true
      responses:
        '200':
          description: Returns the execution result
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
  /api/payment/v1/incomingPayments/validation:
    post:
      tags:
        - Payments
      summary: Validate the availability of creating an deposit incoming payment
      description: >-
        This API only verifies the availability of incoming payment but does not
        really perform any transaction
      operationId: 520c73f6-9b43-4056-9663-2d2657a6ec30
      parameters:
        - name: X-AUTH-TOKEN
          in: header
          description: Access token
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IncomingPaymentValidation'
        required: true
      responses:
        '200':
          description: Return the verification result
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
  /api/payment/v1/incomingPayments/{id}/status:
    get:
      tags:
        - Payments
      summary: Get status of an deposit incoming payments status
      description: Get status of an deposit incoming payments status
      operationId: fe3d02c7-a9ff-4a3a-b05b-c6ba7ae9a0c0
      parameters:
        - name: X-AUTH-TOKEN
          in: header
          description: Access token
          required: true
          schema:
            type: string
        - name: id
          in: path
          description: Request id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Get incoming payments status success.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IncomingPaymentStatus'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
  /api/payment/v1/paymentChannels:
    get:
      tags:
        - Payments
      summary: Get payment channels (DEPOSIT ONLY)
      description: Get payment channels (DEPOSIT ONLY)
      operationId: 7644dd57-def2-443b-a300-d8af604a9cc8
      parameters:
        - name: X-AUTH-TOKEN
          in: header
          description: Security token
          schema:
            type: string
        - name: name
          in: query
          schema:
            type: string
          description: Payment channel name, exact match
        - name: direction
          in: query
          schema:
            $ref: '#/components/schemas/PaymentChannelDirection'
          description: Payment channel direction
        - name: type
          in: query
          schema:
            $ref: '#/components/schemas/PaymentChannelType'
          description: Payment channel type
      responses:
        '200':
          description: Get payment channel successfully.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PaymentChannel'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
  /api/payment/v2/incomingPayments:
    post:
      tags:
        - Payments
      summary: Create an incoming payment for an account (v2 LOAN ONLY)
      description: |-
        ## General description
        Create an incoming payment for an account (v2 LOAN ONLY)
        ## Allowed tokens
        Security Token
        ## Allowed roles
        PISP
      operationId: create-incoming-payment-v2
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateIncomingPayment-Request-v2'
            examples:
              Create an incoming payment request simple example:
                value:
                  requestId: '9'
                  paymentChannelId: 65893b34b42115342aab0130
                  createDateTime: '2024-01-12 12:00:00'
                  paymentReference: '3000049'
                  amount: 6
                  transactionDate: '2024-01-12'
                  currencyCode: SEK
      responses:
        '200':
          description: Create an incoming payment for an account successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateIncomingPayment-Response-v2'
              examples:
                Create an incoming payment response simple example:
                  value:
                    validationResult: null
                    message: 6
                    transactionDate: '2024-01-12'
                    requestId: '10'
                    paymentChannelId: 65893b34b42115342aab0130
                    companyNumber: null
                    payerInfo: null
                    paymentType: null
                    externalReference: null
                    createDateTime: '2024-01-12 12:00:00'
                    paymentDate: null
                    currencyCode: SEK
                    paymentReference: '3000049'
                    additionalInformation: null
                    loanIncomingPaymentId: 204
        '202':
          description: Create a blocked incoming payment for an account successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateIncomingPayment-Response-v2'
        '400':
          description: >-
            Bad request. The parameters in the URL or request body are invalid.
            Please refer to the error message for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '401':
          description: >-
            Unauthorized. The token is invalid/expired or the SSN does not exist
            in the VP. Please refer to the error message for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '403':
          description: >-
            Forbidden. No access rights or access frequency too fast. Please
            refer to the error message for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '500':
          description: >-
            Internal server error. Please refer to the error message for
            details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
  /api/payment/v2/incomingPayments/validate:
    post:
      tags:
        - Payments
      summary: Validate the availability of creating an incoming payment (v2 LOAN ONLY)
      description: |-
        ## General description
        Validate the availability of creating an incoming payment (v2 LOAN ONLY)
        ## Allowed tokens
        Security Token
        ## Allowed roles
        PISP
      operationId: validate-incoming-payment-v2
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ValidateIncomingPayment-Request-v2'
            examples:
              Validate an incoming payment request simple example:
                value:
                  paymentChannelId: 65893b34b42115342aab0130
                  paymentReference: '70000523'
                  amount: 6
                  transactionDate: '2024-01-02'
                  currencyCode: SEK
      responses:
        '200':
          description: >-
            Validate the availability of creating an incoming payment
            successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidateIncomingPayment-Response-v2'
              examples:
                Validate an incoming payment response not pass example:
                  value:
                    validationResult: NOT_PASS
                    message: >-
                      The payment is blocked because the account is
                      unidentified.
                Validate an incoming payment response pass example:
                  value:
                    validationResult: PASS
                    message: Verification passed.
        '401':
          description: >-
            Unauthorized. The token is invalid/expired or the SSN does not exist
            in the VP. Please refer to the error message for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '403':
          description: >-
            Forbidden. No access rights or access frequency too fast. Please
            refer to the error message for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '500':
          description: >-
            Internal server error. Please refer to the error message for
            details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
  /api/payment/v2/incomingPayments/{id}/status:
    get:
      tags:
        - Payments
      summary: Get the status of the incoming payment (v2 LOAN ONLY)
      description: |-
        ## General description
        Get the status of the incoming payment (v2 LOAN ONLY)
        ## Allowed tokens
        Security Token
        ## Allowed roles
        PISP
      operationId: get-incoming-payment-status-v2
      parameters:
        - name: id
          in: path
          description: Loan incoming payment id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Get the status of the incoming payment successfully.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: >-
                        #/components/schemas/GetIncomingPaymentStatus-Response-v2
              examples:
                Get the status of the incoming payment example:
                  value:
                    data:
                      - receivedAccountId: 65b0a8a680868218f718535c
                        receivedAccountNumber: '8000101'
                        amount: 13
                        status: HANDLED
                        result: PAY_DIRECT
                        paybackInfo: null
                      - receivedAccountId: 65b0a8a680868218f718535c
                        receivedAccountNumber: '8000101'
                        amount: 17
                        status: HANDLED
                        result: SMALL_AMOUNT_KEPT_BY_LENDER
                        paybackInfo: null
        '400':
          description: >-
            Bad request. The parameters in the URL or request body are invalid.
            Please refer to the error message for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '401':
          description: >-
            Unauthorized. The token is invalid/expired or the SSN does not exist
            in the VP. Please refer to the error message for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '403':
          description: >-
            Forbidden. No access rights or access frequency too fast. Please
            refer to the error message for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '500':
          description: >-
            Internal server error. Please refer to the error message for
            details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
  /api/payment/v2/paymentChannels:
    get:
      tags:
        - Payments
      summary: Get payment channels (v2 LOAN ONLY)
      description: |-
        ## General description
        Get payment channels (v2 LOAN ONLY)
        ## Allowed tokens
        Security Token
        ## Allowed roles
        PISP
        ## Additional information
        Only get payment channels of the current user.
      operationId: get-payment-channels-v2
      parameters:
        - name: name
          in: query
          schema:
            type: string
          description: Payment channel name, exact match
        - name: direction
          in: query
          schema:
            $ref: '#/components/schemas/PaymentChannelDirection'
          description: Payment channel direction
        - name: type
          in: query
          schema:
            $ref: '#/components/schemas/PaymentChannelType'
          description: Payment channel type
      responses:
        '200':
          description: Get payment channels successfully.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/PaymentChannel'
              examples:
                Get payment channels example:
                  value:
                    data:
                      - id: 65893b34b42115342aab0130
                        name: API incoming
                        direction: MANUAL_INCOMING
                        type: API
                      - id: 6597aa9169a8443243e6df9f
                        name: API incoming 2
                        direction: MANUAL_INCOMING
                        type: API
        '400':
          description: >-
            Bad request. The parameters in the URL or request body are invalid.
            Please refer to the error message for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '401':
          description: >-
            Unauthorized. The token is invalid/expired or the SSN does not exist
            in the VP. Please refer to the error message for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '403':
          description: >-
            Forbidden. No access rights or access frequency too fast. Please
            refer to the error message for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '500':
          description: >-
            Internal server error. Please refer to the error message for
            details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
  /api/reporting/v1/depositAccountTransactionReport:
    get:
      tags:
        - Reporting
      summary: Get the account transaction report for deposit account
      description: |
        ## General description
        Get the account transaction report for deposit account.
        ## Allowed VP token
        Access Token
        ## Allowed roles
        Trusted Party, My Pages, Mortgage Front
      operationId: 801da7fd-7d54-44ef-9dd9-0b50b42d01f3
      parameters:
        - name: X-AUTH-TOKEN
          in: header
          description: Access token
          required: true
          schema:
            type: string
        - name: accountId
          in: query
          description: The account id
          required: true
          schema:
            type: string
        - name: startDate
          in: query
          description: Start date for query, format is yyyy-MM-dd
          schema:
            type: string
        - name: endDate
          in: query
          description: End date for query, format is yyyy-MM-dd
          schema:
            type: string
        - name: fileName
          in: query
          description: >-
            Custom file name which will be returned in response
            content-disposition header. If not given, default file name will be
            returned.
          schema:
            type: string
      responses:
        '200':
          description: Get deposit account transaction report by account id.
          headers:
            content-disposition:
              schema:
                type: string
                description: >-
                  Example default filename:
                  'Account-Statement_1357750_2020-01-01_2020-01-30.pdf', where
                  '1357750' is the account number, '2020-01-01' is start date
                  and '2020-01-30' is end date
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/V1DepositAccountTransactionReport'
        '400':
          description: Token or parameter invalid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '401':
          description: Unauthorized.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '403':
          description: Prohibiting block.Please check the error message.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
  /api/reporting/v1/engagementReports:
    post:
      tags:
        - Reporting
      summary: Create deposit engagement report
      description: Create deposit engagement report
      operationId: a9d50731-d296-446a-894b-ae9c4dac394d
      parameters:
        - name: X-AUTH-TOKEN
          in: header
          description: Access token
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/V1EngagementReportForCreate'
      responses:
        '200':
          description: Create the engagement report.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/V1EngagementReport'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
    get:
      tags:
        - Reporting
      summary: Get the engagement reports for deposit customer
      description: |
        ## General description
        Get the engagement reports for deposit customer.
        ## Allowed VP token
        Access Token
        ## Allowed roles
        Trusted Party, My Pages, Mortgage Front
      operationId: 8fbaf7bb-59ce-4c88-9a63-9c80c8ab8bf0
      parameters:
        - name: X-AUTH-TOKEN
          in: header
          description: Access token
          required: true
          schema:
            type: string
        - name: underAgePrivateCustomerId
          in: query
          description: >-
            The consumer customer id of under-age what you want to
            query.Default: Customer id in token.
          schema:
            type: string
        - name: smeId
          in: query
          description: The SME legal entity id what you want to query.
          schema:
            type: string
      responses:
        '200':
          description: Get basic report information about current login customer.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/V1EngagementReport'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
  /api/reporting/v1/engagementReports/{engagementReportId}:
    get:
      tags:
        - Reporting
      summary: Get deposit engagement report by id
      description: Get deposit engagement report by id
      operationId: 54eb889f-748a-498e-921e-0f19868d150b
      parameters:
        - name: X-AUTH-TOKEN
          in: header
          description: Access token
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Get report details by report id
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/V1EngagementReport'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
  /api/reporting/v1/externalParties/document/{reportId}:
    get:
      tags:
        - Reporting
      summary: >-
        Download the contents of External Party SMEs report for either accounts,
        customers or transactions.
      description: |
        ## Allowed VP token
        Security Token
        ## Allowed roles
        Trusted Party
      operationId: f40472ed-8b2c-4f44-1234-b6f61b7fb308
      parameters:
        - name: reportId
          in: path
          description: The id of the report file
          required: true
          schema:
            type: string
      responses:
        '200':
          description: >-
            The the contents of External Party SMEs report for either accounts,
            customers or transactions.
          content:
            application/csv:
              schema:
                type: string
        '400':
          description: Wrong request for the report file
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      security:
        - X-AUTH-TOKEN: []
  /api/reporting/v1/externalParties/smes/accounts:
    get:
      tags:
        - Reporting
      summary: Generate accounts report for SMEs in given External Party
      description: |
        ## Allowed VP token
        Security Token
        ## Allowed roles
        Trusted Party
      operationId: f40472ed-8b2c-4f44-5430-b6f61b7fb308
      responses:
        '200':
          description: >-
            IDs of report files that can be later downloaded using
            `/reporting/v1/externalParties/document/:id` API.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReportFileIds'
        '400':
          description: Wrong request for accounts reports
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      security:
        - X-AUTH-TOKEN: []
  /api/reporting/v1/externalParties/smes/all:
    get:
      tags:
        - Reporting
      summary: >-
        Generate customers, accounts and transactions reports for SMEs in given
        External Party
      description: |
        ## Allowed VP token
        Security Token
        ## Allowed roles
        Trusted Party
      operationId: f40472ed-8b2c-4f44-4321-b6f61b7fb308
      responses:
        '200':
          description: >-
            IDs of report files that can be later downloaded using
            `/api/reporting/v1/externalParties/document/:id` API.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReportFileIdsByType'
        '400':
          description: Wrong request for customers, accounts and transactions reports
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      security:
        - X-AUTH-TOKEN: []
  /api/reporting/v1/externalParties/smes/customers:
    get:
      tags:
        - Reporting
      summary: Generate customers report for SMEs in given External Party
      description: |
        ## Allowed VP token
        Security Token
        ## Allowed roles
        Trusted Party
      operationId: f40472ed-8b2c-4f44-4356-b6f61b7fb308
      responses:
        '200':
          description: >-
            IDs of report files that can be later downloaded using
            `/reporting/v1/externalParties/document/:id` API.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReportFileIds'
        '400':
          description: Wrong request for customer reports
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      security:
        - X-AUTH-TOKEN: []
  /api/reporting/v1/externalParties/smes/transactions:
    get:
      tags:
        - Reporting
      summary: Generate transactions report for SMEs in given External Party
      description: |
        ## Allowed VP token
        Security Token
        ## Allowed roles
        Trusted Party
      operationId: f40472ed-8b2c-4f44-6534-b6f61b7fb308
      responses:
        '200':
          description: >-
            IDs of report files that can be later downloaded using
            `/reporting/v1/externalParties/document/:id` API.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReportFileIds'
        '400':
          description: Wrong request for transactions reports
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      security:
        - X-AUTH-TOKEN: []
  /api/reporting/v1/legalEntities/{smeId}/engagementReports/{engagementReportId}/file:
    get:
      tags:
        - Reporting
      summary: Get engagement report file for deposit SME customer
      description: Get engagement report file for deposit SME customer
      operationId: a92d2411-5496-4f84-9fe3-c8c2e806ea4e
      parameters:
        - name: X-AUTH-TOKEN
          in: header
          description: Access token
          required: true
          schema:
            type: string
        - name: smeId
          in: path
          description: The id of legal entity
          required: true
          schema:
            type: string
        - name: engagementReportId
          in: path
          description: The id of engagement report.
          required: true
          schema:
            type: string
        - name: fileName
          in: query
          description: >-
            Custom file name which will be returned in response
            content-disposition header. If not given, default file name will be
            returned.
          schema:
            type: string
      responses:
        '200':
          description: >-
            Engagement report file in pdf format for the specific report id and
            legal entity id
          headers:
            content-disposition:
              schema:
                type: string
                description: >-
                  Example filename:
                  'Engagemangsbesked2020-06-04_2020-06-05_113644.269.pdf', where
                  '2020-06-04' is the date of the report and
                  '2020-06-05_113644.269' is time of report creation.
          content:
            application/octet-stream:
              schema:
                type: string
                format: binary
        '400':
          description: Wrong request to get engagement report file
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '404':
          description: >-
            Engagement report file not found for the specific report id and
            legal entity id
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
  /api/reporting/v1/legalEntities/{smeId}/yearlySummaryReports/{year}/file:
    get:
      tags:
        - Reporting
      summary: Get deposit yearly summary report file for SME customer
      description: |
        ## General description
        Get deposit yearly summary report file for SME customer
        ## Changelog
        - v17.0.0 : New query parameter `isForMyPages`.
      operationId: f40472ed-8b2c-4f44-a991-b6f61b7fb308
      parameters:
        - name: X-AUTH-TOKEN
          in: header
          description: Access token
          required: true
          schema:
            type: string
        - name: smeId
          in: path
          description: The id of legal entity
          required: true
          schema:
            type: number
        - name: year
          in: path
          description: The year number ,format is *2019*
          required: true
          schema:
            type: string
        - name: fileName
          in: query
          description: >-
            Custom file name which will be returned in response
            content-disposition header. If not given, default file name will be
            returned.
          schema:
            type: string
        - name: isForMyPages
          in: query
          required: false
          description: >-
            Should the result be filtered using Yearly summary report date
            configuration for My Pages
          schema:
            type: string
      responses:
        '200':
          description: >-
            Yearly summary report file in pdf format for the specific year and
            legal entity id
          headers:
            content-disposition:
              schema:
                type: string
                description: >-
                  Example filename: 'Arsbesked2019.pdf', where '2019' is the
                  year number for current report.
          content:
            application/octet-stream:
              schema:
                type: string
                format: binary
        '400':
          description: Wrong request to get yearly summary report file
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '404':
          description: >-
            Yearly summary report file not found for the specific year and legal
            entity id
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
  /api/reporting/v1/privateCustomers/me/engagementReports/{engagementReportId}/file:
    get:
      tags:
        - Reporting
      summary: Get deposit engagement report file by id
      description: Get deposit engagement report file by id
      operationId: ce064d92-d5ae-40ad-ac03-4936782df52f
      parameters:
        - name: X-AUTH-TOKEN
          in: header
          description: Access token
          required: true
          schema:
            type: string
        - name: engagementReportId
          in: path
          description: The id of engagement report.
          required: true
          schema:
            type: string
        - name: fileName
          in: query
          description: >-
            Custom file name which will be returned in response
            content-disposition header. If not given, default file name will be
            returned.
          schema:
            type: string
      responses:
        '200':
          description: Engagement report file in pdf format for the specific report id
          headers:
            content-disposition:
              schema:
                type: string
                description: >-
                  Example filename:
                  'Engagemangsbesked2020-06-04_2020-06-05_113644.269.pdf', where
                  '2020-06-04' is the date of the report and
                  '2020-06-05_113644.269' is time of report creation.
          content:
            application/octet-stream:
              schema:
                type: string
                format: binary
        '400':
          description: Wrong request to get engagement report file
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '404':
          description: Engagement report file not found for the specific report id
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
  /api/reporting/v1/privateCustomers/me/yearlySummaryReports/{year}/file:
    get:
      tags:
        - Reporting
      summary: >-
        Get deposit yearly summary report file for consumer customer restricted
        by access token
      description: >
        ## General description

        Get deposit yearly summary report file by year, Only support regular
        Loan

        ## Changelog

        - v17.0.0 : New query parameter `isForMyPages`.
      operationId: 2890c8bb-dcc2-4238-bfe1-254da63cdf38
      parameters:
        - name: X-AUTH-TOKEN
          in: header
          description: Access token
          required: true
          schema:
            type: string
        - name: year
          in: path
          description: The year number ,format is *2019*
          required: true
          schema:
            type: number
        - name: fileName
          in: query
          description: >-
            Custom file name which will be returned in response header
            content-disposition header. If not given, default file name will be
            returned.
          schema:
            type: string
        - name: isForMyPages
          in: query
          required: false
          description: >-
            Should the result be filtered using Yearly summary report date
            configuration for My Pages
          schema:
            type: string
      responses:
        '200':
          description: Yearly summary report file in pdf format for the specific year
          headers:
            content-disposition:
              schema:
                type: string
                description: >-
                  Example filename: 'Arsbesked2019.pdf', where '2019' is the
                  year number for current report.
          content:
            application/octet-stream:
              schema:
                type: string
                format: binary
        '400':
          description: Wrong request to get yearly summary report file
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '404':
          description: Yearly summary report file not found for the specific year
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
  /api/reporting/v1/privateCustomers/{underAgePrivateCustomerId}/engagementReports/{engagementReportId}/file:
    get:
      tags:
        - Reporting
      summary: Get engagement report file for deposit underage consumer customer
      description: Get engagement report file for deposit underage consumer customer
      operationId: 430ac498-d4d3-4f0e-819b-1cbeb9dc69d8
      parameters:
        - name: X-AUTH-TOKEN
          in: header
          description: Access token
          required: true
          schema:
            type: string
        - name: underAgePrivateCustomerId
          in: path
          description: The consumer customer id of under-age
          required: true
          schema:
            type: string
        - name: engagementReportId
          in: path
          description: The id of engagement report.
          required: true
          schema:
            type: string
        - name: fileName
          in: query
          description: >-
            Custom file name which will be returned in response
            content-disposition header. If not given, default file name will be
            returned.
          schema:
            type: string
      responses:
        '200':
          description: >-
            Engagement report file in pdf format for specific report id and
            under-age customer id
          headers:
            content-disposition:
              schema:
                type: string
                description: >-
                  Example filename:
                  'Engagemangsbesked2020-06-04_2020-06-05_113644.269.pdf', where
                  '2020-06-04' is the date of the report and
                  '2020-06-05_113644.269' is time of report creation.
          content:
            application/octet-stream:
              schema:
                type: string
                format: binary
        '400':
          description: Wrong request to get engagement report file
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '404':
          description: >-
            Engagement report file not found for the specific report id and
            under-age customer id
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
  /api/reporting/v1/privateCustomers/{underAgePrivateCustomerId}/yearlySummaryReports/{year}/file:
    get:
      tags:
        - Reporting
      summary: Get deposit yearly summary report file for underage consumer customer
      description: |
        ## General description
        Get deposit yearly summary report file for underage consumer customer
        ## Changelog
        - v17.0.0 : New query parameter `isForMyPages`.
      operationId: 14106939-9223-4124-9f82-bc8b9e7f6ea8
      parameters:
        - name: X-AUTH-TOKEN
          in: header
          description: Access token
          required: true
          schema:
            type: string
        - name: underAgePrivateCustomerId
          in: path
          description: The consumer customer id of under-age
          required: true
          schema:
            type: number
        - name: year
          in: path
          description: The year number ,format is *2019*
          required: true
          schema:
            type: string
        - name: fileName
          in: query
          description: >-
            Custom file name which will be returned in response
            content-disposition header. If not given, default file name will be
            returned.
          schema:
            type: string
        - name: isForMyPages
          in: query
          required: false
          description: >-
            Should the result be filtered using Yearly summary report date
            configuration for My Pages
          schema:
            type: string
      responses:
        '200':
          description: >-
            Yearly summary report file in pdf format for the specific year and
            under-age customer id
          headers:
            content-disposition:
              schema:
                type: string
                description: >-
                  Example filename: 'Arsbesked2019.pdf', where '2019' is the
                  year number for current report.
          content:
            application/octet-stream:
              schema:
                type: string
                format: binary
        '400':
          description: Wrong request to get yearly summary report file
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '404':
          description: >-
            Yearly summary report file not found for the specific year and
            under-age customer id
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
  /api/reporting/v1/yearlySummaryReports/years:
    get:
      tags:
        - Reporting
      summary: Get available report years for deposit yearly summary report
      description: |
        ## General description
        Get available report years for deposit yearly summary report
        ## Changelog
        - v17.0.0 : New query parameter `isForMyPages`.
      operationId: f1a6a0b8-a004-4155-9da1-1b1b26391253
      parameters:
        - name: underAgePrivateCustomerId
          in: query
          description: >-
            The consumer customer id of under-age what you want to
            query.Default: Customer id in token.
          schema:
            type: string
        - name: smeId
          in: query
          description: The SME legal entity id what you want to query.
          schema:
            type: string
      responses:
        '200':
          description: Get all report years list
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
  /api/reporting/v1/yearlySummaryReports/{year}:
    get:
      tags:
        - Reporting
      summary: Get deposit yearly summary report by year
      description: |
        ## General description
        Get deposit yearly summary report by year
        ## Changelog
        - v17.0.0 : New query parameter `isForMyPages`.
      operationId: bf0bb456-dd68-4d87-9f9f-9b6ddfe1afc1
      parameters:
        - name: underAgePrivateCustomerId
          in: query
          description: >-
            The consumer customer id of under-age what you want to
            query.Default: Customer id in token.
          schema:
            type: string
        - name: smeId
          in: query
          description: The SME legal entity id what you want to query.
          schema:
            type: string
      responses:
        '200':
          description: >-
            Get the yearly summary report,response as json format of file
            stream. It will get current login customer id to export the
            report,if not provide the customer id in query parameter.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/V1YearlySummaryReport'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
  /api/revolving/v2/accounts:
    get:
      tags:
        - Loan Accounts
      summary: Get loan credit account by query parameters (v2)
      description: >-
        Get account list with query parameters, sorted in reverse order of
        createDate.
      operationId: 506c3b46-c226-45aa-8c5a-33aaa9233b9f
      parameters:
        - name: X-AUTH-TOKEN
          in: header
          description: Security token
          required: true
          schema:
            type: string
        - name: mobilePhone
          in: query
          required: true
          schema:
            type: string
          description: mobile phone
      responses:
        '200':
          $ref: '#/components/responses/CreditLoanAccounts-Response-V2'
        '400':
          description: >-
            Bad request. The parameters in the URL or request body are invalid.
            Please refer to the error message for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '401':
          description: >-
            Unauthorized. The token is invalid/expired or the SSN does not exist
            in the VP. Please refer to the error message for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '403':
          description: >-
            Forbidden. No access rights or access frequency too fast. Please
            refer to the error message for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '500':
          description: >-
            Internal server error. Please refer to the error message for
            details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
  /api/revolving/v2/accounts/{accountId}:
    get:
      tags:
        - Loan Accounts
      summary: Get loan credit account by id
      description: Get the account by account ID
      operationId: 7c09a796-432a-42e9-bdac-b063b0e99b7c
      parameters:
        - name: X-AUTH-TOKEN
          in: header
          description: Access token
          required: true
          schema:
            type: string
      responses:
        '200':
          $ref: '#/components/responses/CreditLoanAccount-Response-V2'
        '400':
          description: >-
            Bad request. The parameters in the URL or request body are invalid.
            Please refer to the error message for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '401':
          description: >-
            Unauthorized. The token is invalid/expired or the SSN does not exist
            in the VP. Please refer to the error message for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '403':
          description: >-
            Forbidden. No access rights or access frequency too fast. Please
            refer to the error message for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '500':
          description: >-
            Internal server error. Please refer to the error message for
            details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
    patch:
      tags:
        - Loan Accounts
      summary: Update credit account by account ID
      description: Only support update the credit limit now.
      operationId: 2beabd10-9082-4dec-bcc9-690ab4b16998
      parameters:
        - name: X-AUTH-TOKEN
          in: header
          description: Access token
          required: true
          schema:
            type: string
        - name: accountId
          in: path
          description: Account ID
          required: true
          schema:
            type: string
      responses:
        '200':
          $ref: '#/components/responses/CreditLoanAccount-Response-V2'
        '400':
          description: >-
            Bad request. The parameters in the URL or request body are invalid.
            Please refer to the error message for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '401':
          description: >-
            Unauthorized. The token is invalid/expired or the SSN does not exist
            in the VP. Please refer to the error message for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '403':
          description: >-
            Forbidden. No access rights or access frequency too fast. Please
            refer to the error message for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '500':
          description: >-
            Internal server error. Please refer to the error message for
            details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      requestBody:
        $ref: '#/components/requestBodies/CreditLoanAccount-Patch-V2'
  /api/revolving/v2/accounts/{accountId}/cancel:
    put:
      tags:
        - Loan Accounts
      summary: Cancel credit account by id
      description: Cancel the account (LOAN ONLY)
      operationId: ee18e502-8182-4184-af2a-a28607b381cd
      responses:
        '200':
          description: Account successfully cancelled
        '400':
          description: >-
            Bad request. The parameters in the URL or request body are invalid.
            Please refer to the error message for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '401':
          description: >-
            Unauthorized. The token is invalid/expired or the SSN does not exist
            in the VP. Please refer to the error message for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '403':
          description: >-
            Forbidden. No access rights or access frequency too fast. Please
            refer to the error message for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '500':
          description: >-
            Internal server error. Please refer to the error message for
            details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
  /api/revolving/v2/accounts/{accountId}/disbursementAccount:
    post:
      tags:
        - Loan Accounts
      summary: Create disbursement account for credit account
      description: Create disbursement account.
      operationId: 3fc112f0-e521-495b-a1e7-f03a6a5b5dab
      parameters:
        - name: X-AUTH-TOKEN
          in: header
          description: Access token
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DisbursementAccountV1'
        required: true
      responses:
        '200':
          description: Create successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DisbursementAccountV1'
        '400':
          description: >-
            Bad request. The parameters in the URL or request body are invalid.
            Please refer to the error message for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '401':
          description: >-
            Unauthorized. The token is invalid/expired or the SSN does not exist
            in the VP. Please refer to the error message for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '403':
          description: >-
            Forbidden. No access rights or access frequency too fast. Please
            refer to the error message for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '500':
          description: >-
            Internal server error. Please refer to the error message for
            details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
    get:
      tags:
        - Loan Accounts
      summary: Get disbursement account for credit account
      description: Get disbursement account.
      operationId: 24f200d0-5224-4103-959a-ce0b06d6491c
      parameters:
        - name: X-AUTH-TOKEN
          in: header
          description: Access token
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Disbursement account retrieved successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DisbursementAccountV1'
        '400':
          description: >-
            Bad request. The parameters in the URL or request body are invalid.
            Please refer to the error message for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '401':
          description: >-
            Unauthorized. The token is invalid/expired or the SSN does not exist
            in the VP. Please refer to the error message for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '403':
          description: >-
            Forbidden. No access rights or access frequency too fast. Please
            refer to the error message for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '500':
          description: >-
            Internal server error. Please refer to the error message for
            details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
    put:
      tags:
        - Loan Accounts
      summary: Replace disbursement account for credit account
      description: Modify disbursement account.
      operationId: 27b3c867-528b-48b7-9e52-4c4df468f919
      parameters:
        - name: X-AUTH-TOKEN
          in: header
          description: Access token
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DisbursementAccountV1'
        required: true
      responses:
        '200':
          description: Modify successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DisbursementAccountV1'
        '400':
          description: >-
            Bad request. The parameters in the URL or request body are invalid.
            Please refer to the error message for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '401':
          description: >-
            Unauthorized. The token is invalid/expired or the SSN does not exist
            in the VP. Please refer to the error message for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '403':
          description: >-
            Forbidden. No access rights or access frequency too fast. Please
            refer to the error message for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '500':
          description: >-
            Internal server error. Please refer to the error message for
            details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
  /api/revolving/v2/accounts/{accountId}/paymentPlans:
    get:
      tags:
        - Loan Accounts
      summary: Get payment plans for credit account
      description: (LOAN ONLY)
      operationId: getLoanPaymentPlansForRevolving
      parameters:
        - name: X-AUTH-TOKEN
          in: header
          description: Access token
          required: true
          schema:
            type: string
        - name: sortOrder
          in: query
          description: Sort by month.
          schema:
            type: string
            default: DESC
            enum:
              - ASC
              - DESC
      responses:
        '200':
          description: Get payment plan successfully.
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    month:
                      type: string
                      description: Month, format is yyyy-MM.
                    totalAmount:
                      type: number
                      description: Total statement amount.
                      format: double
        '400':
          description: >-
            Bad request. The parameters in the URL or request body are invalid.
            Please refer to the error message for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '401':
          description: >-
            Unauthorized. The token is invalid/expired or the SSN does not exist
            in the VP. Please refer to the error message for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '403':
          description: >-
            Forbidden. No access rights or access frequency too fast. Please
            refer to the error message for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '500':
          description: >-
            Internal server error. Please refer to the error message for
            details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
  /api/revolving/v2/accounts/{accountId}/periodicTrancheLimit:
    get:
      tags:
        - Loan Accounts
      description: Get periodic tranche limit by account ID.
      operationId: 0cecec6e-ba76-4ce6-8475-3588a9f3fd1a
      parameters:
        - name: X-AUTH-TOKEN
          in: header
          description: Access token
          required: true
          schema:
            type: string
        - name: accountId
          in: path
          description: Account ID
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Periodic tranche limit is retrieved successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PeriodicTrancheLimit'
        '400':
          description: >-
            Bad request. The parameters in the URL or request body are invalid.
            Please refer to the error message for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '401':
          description: >-
            Unauthorized. The token is invalid/expired or the SSN does not exist
            in the VP. Please refer to the error message for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '403':
          description: >-
            Forbidden. No access rights or access frequency too fast. Please
            refer to the error message for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '404':
          description: Periodic tranche limit does not exist.
        '500':
          description: >-
            Internal server error. Please refer to the error message for
            details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      summary: Get periodic tranche limit for credit account
    put:
      tags:
        - Loan Accounts
      description: Update periodic tranche limit by account ID.
      operationId: 5b51b524-647f-41c9-b722-ec4e13b9d158
      parameters:
        - name: X-AUTH-TOKEN
          in: header
          description: Access token
          required: true
          schema:
            type: string
        - name: accountId
          in: path
          description: Account ID
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PeriodicTrancheLimit'
        required: true
      responses:
        '200':
          description: Periodic tranche limit is updated successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PeriodicTrancheLimit'
        '400':
          description: >-
            Bad request. The parameters in the URL or request body are invalid.
            Please refer to the error message for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '401':
          description: >-
            Unauthorized. The token is invalid/expired or the SSN does not exist
            in the VP. Please refer to the error message for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '403':
          description: >-
            Forbidden. No access rights or access frequency too fast. Please
            refer to the error message for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '500':
          description: >-
            Internal server error. Please refer to the error message for
            details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      summary: Replace periodic tranche limit for credit account
  /api/revolving/v2/accounts/{accountId}/remainingDebt:
    get:
      tags:
        - Loan Accounts
      summary: Calculate remaining debts for credit account
      description: Calculate remaining debt
      operationId: getRemainingDebtForRevolving
      parameters:
        - name: X-AUTH-TOKEN
          in: header
          description: Access token
          required: true
          schema:
            type: string
        - name: preSettleDate
          in: query
          description: Pre-settle date, format is yyyy-MM-dd
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Remaining debt successfully retrieved.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RemainingDebtForCreditAccount'
        '400':
          description: >-
            Bad request. The parameters in the URL or request body are invalid.
            Please refer to the error message for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '401':
          description: >-
            Unauthorized. The token is invalid/expired or the SSN does not exist
            in the VP. Please refer to the error message for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '403':
          description: >-
            Forbidden. No access rights or access frequency too fast. Please
            refer to the error message for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '500':
          description: >-
            Internal server error. Please refer to the error message for
            details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
  /api/revolving/v2/accounts/{accountId}/statementChannel:
    put:
      tags:
        - Loan Accounts
      summary: Update statement channel for credit account
      description: Update the statement channel
      operationId: updateStatementChannelForRevolving
      parameters:
        - name: X-AUTH-TOKEN
          in: header
          description: Access token
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              required:
                - statementChannel
              type: object
              properties:
                statementChannel:
                  $ref: '#/components/schemas/StatementChannel'
        required: true
      responses:
        '200':
          description: Account statement channel successfully updated.
        '400':
          description: >-
            Bad request. The parameters in the URL or request body are invalid.
            Please refer to the error message for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '401':
          description: >-
            Unauthorized. The token is invalid/expired or the SSN does not exist
            in the VP. Please refer to the error message for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '403':
          description: >-
            Forbidden. No access rights or access frequency too fast. Please
            refer to the error message for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '500':
          description: >-
            Internal server error. Please refer to the error message for
            details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
  /api/revolving/v2/accounts/{accountId}/statements:
    get:
      tags:
        - Loan Accounts
      summary: Get statements for loan revolving account (v2)
      description: |
        ## General description
        Get statements for loan revolving account (v2) (LOAN ONLY).
        ## Changelog
        - v31.0.0: New field `reminder` in the response.
        - v27.0.0: New invoice status `REVERSED` in the response.
      operationId: a6abfa2d-b774-406d-a79c-6fc63002cf6c
      parameters:
        - name: X-AUTH-TOKEN
          in: header
          description: Access token
          required: true
          schema:
            type: string
        - name: sortOrder
          in: query
          description: Sort by due date.
          schema:
            type: string
            default: DESC
            enum:
              - ASC
              - DESC
        - name: statementType
          in: query
          schema:
            $ref: '#/components/schemas/StatementType'
          description: statementType
      responses:
        '200':
          description: Get statements successfully.
          headers:
            totalCount:
              schema:
                type: integer
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StatementV2'
        '400':
          description: >-
            Bad request. The parameters in the URL or request body are invalid.
            Please refer to the error message for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '401':
          description: >-
            Unauthorized. The token is invalid/expired or the SSN does not exist
            in the VP. Please refer to the error message for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '403':
          description: >-
            Forbidden. No access rights or access frequency too fast. Please
            refer to the error message for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '500':
          description: >-
            Internal server error. Please refer to the error message for
            details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
  /api/revolving/v2/accounts/{accountId}/transactions:
    get:
      tags:
        - Loan Accounts
      summary: Get transactions for credit account
      description: (LOAN ONLY)
      operationId: getLoanTransactionsForRevolving
      parameters:
        - name: X-AUTH-TOKEN
          in: header
          description: Access token
          required: true
          schema:
            type: string
        - name: startDate
          in: query
          description: format is yyyy-MM-dd
          schema:
            type: string
            format: date
        - name: endDate
          in: query
          description: format is yyyy-MM-dd
          schema:
            type: string
            format: date
        - name: countPerPage
          in: query
          schema:
            type: integer
            format: int32
            default: 10
          description: size per page
        - name: currentPage
          in: query
          schema:
            type: integer
            format: int32
            default: 1
          description: current page number
        - name: sortOrder
          in: query
          description: Sorting is based on transactionDate
          schema:
            type: string
            default: DESC
            enum:
              - ASC
              - DESC
        - name: shownInStatement
          in: query
          description: >-
            Indicate if only the transactions shown in the statement file will
            be retrived
          schema:
            type: boolean
        - name: excludeTransactionTypes
          in: query
          description: >-
            Indicate what type of transactions will be excluded,multiple
            intervals by comma(,);
          schema:
            type: string
      responses:
        '200':
          description: Get transactions successfully.
          headers:
            totalCount:
              schema:
                type: integer
          content:
            application/hal+json:
              schema:
                type: object
                properties:
                  _links:
                    type: object
                    properties:
                      self:
                        $ref: '#/components/schemas/href'
                      first:
                        $ref: '#/components/schemas/href'
                      prev:
                        $ref: '#/components/schemas/href'
                      next:
                        $ref: '#/components/schemas/href'
                      last:
                        $ref: '#/components/schemas/href'
                  currentPage:
                    type: integer
                    format: int32
                  total:
                    type: integer
                    format: int32
                  _embedded:
                    type: object
                    properties:
                      transactions:
                        $ref: '#/components/schemas/Transactions'
        '400':
          description: >-
            Bad request. The parameters in the URL or request body are invalid.
            Please refer to the error message for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '401':
          description: >-
            Unauthorized. The token is invalid/expired or the SSN does not exist
            in the VP. Please refer to the error message for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '403':
          description: >-
            Forbidden. No access rights or access frequency too fast. Please
            refer to the error message for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '500':
          description: >-
            Internal server error. Please refer to the error message for
            details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
  /api/revolving/v2/applications:
    post:
      tags:
        - Applications
      summary: Submit credit application from external party
      description: |
        ## General description
        Process loan application from external party
        ## Changelog
        - v19.0.0 : New field `reservedAccountNumber` in response body.
        - v18.0.0 : New field `administrativeAreaName` in request body.
        - v15.0.0: New fields `externalPartyId`,`salesPerson` in request body.
      operationId: a646bf33-c6dd-4707-9965-c87408e0b627
      parameters:
        - name: X-AUTH-TOKEN
          in: header
          description: Security token
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SubmitRevolvingApplicationRequestV2'
        required: true
      responses:
        '201':
          description: Application created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoanApplicationResponse'
        '400':
          description: >-
            Bad request. The parameters in the URL or request body are invalid.
            Please refer to the error message for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '401':
          description: >-
            Unauthorized. The token is invalid/expired or the SSN does not exist
            in the VP. Please refer to the error message for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '403':
          description: >-
            Forbidden. No access rights or access frequency too fast. Please
            refer to the error message for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '500':
          description: >-
            Internal server error. Please refer to the error message for
            details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
  /api/revolving/v2/applications/{applicationId}/cancel:
    put:
      tags:
        - Applications
      summary: Cancel credit application by id
      description: Cancel credit application by id
      operationId: 75fe211a-c79d-410f-bf44-968ef555f659
      responses:
        '200':
          description: Application successfully cancelled
        '400':
          description: >-
            Bad request. The parameters in the URL or request body are invalid.
            Please refer to the error message for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '401':
          description: >-
            Unauthorized. The token is invalid/expired or the SSN does not exist
            in the VP. Please refer to the error message for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '403':
          description: >-
            Forbidden. No access rights or access frequency too fast. Please
            refer to the error message for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '500':
          description: >-
            Internal server error. Please refer to the error message for
            details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
  /api/revolving/v2/applications/{applicationId}/documents:
    post:
      tags:
        - Applications
      summary: Create documents for credit application
      description: Add documents to credit application
      operationId: 38434d9b-93e7-475b-9ed0-356dffe6d2c3
      parameters:
        - name: X-AUTH-TOKEN
          in: header
          description: Security token
          required: true
          schema:
            type: string
      requestBody:
        content:
          multipart/form-data:
            schema:
              required:
                - documentType
                - files
              type: object
              properties:
                documentType:
                  type: string
                  description: |
                    * PROMISSORY_NOTE Promissory note.
                    * SALES_SLIP Sales slip.
                    * DIRECT_DEBIT_CONSENT Direct debit consent.
                    * ENTIRE_LIST_OF_COMPLEMENTS Entire list of complements.
                    * OTHERS Others.
                  enum:
                    - PROMISSORY_NOTE
                    - SALES_SLIP
                    - DIRECT_DEBIT_CONSENT
                    - ENTIRE_LIST_OF_COMPLEMENTS
                    - OTHERS
                documentSignStatus:
                  type: string
                  description: |
                    * UNSIGNED Unsigned,default value.
                    * MANUAL_SIGNED  Manual signed.
                    * DIGITAL_SIGNED Digital signed.
                  default: UNSIGNED
                  enum:
                    - UNSIGNED
                    - MANUAL_SIGNED
                    - DIGITAL_SIGNED
                files:
                  type: array
                  items:
                    type: string
                    format: binary
        required: true
      responses:
        '201':
          description: Documents created successfully
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    documentId:
                      type: string
                      description: Document Id
                    fileName:
                      type: string
                      description: File name
        '400':
          description: >-
            Bad request. The parameters in the URL or request body are invalid.
            Please refer to the error message for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '401':
          description: >-
            Unauthorized. The token is invalid/expired or the SSN does not exist
            in the VP. Please refer to the error message for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '403':
          description: >-
            Forbidden. No access rights or access frequency too fast. Please
            refer to the error message for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '500':
          description: >-
            Internal server error. Please refer to the error message for
            details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
  /api/revolving/v2/applications/{applicationId}/notes:
    post:
      tags:
        - Applications
      summary: Add note for credit application
      description: Add note to credit application
      operationId: f06e9401-cda7-4d68-84ef-4d89a33e3e88
      parameters:
        - name: X-AUTH-TOKEN
          in: header
          description: Access token
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApplicationNote'
        required: true
      responses:
        '200':
          description: Application note created successfully
        '400':
          description: >-
            Bad request. The parameters in the URL or request body are invalid.
            Please refer to the error message for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '401':
          description: >-
            Unauthorized. The token is invalid/expired or the SSN does not exist
            in the VP. Please refer to the error message for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '403':
          description: >-
            Forbidden. No access rights or access frequency too fast. Please
            refer to the error message for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '500':
          description: >-
            Internal server error. Please refer to the error message for
            details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
  /api/revolving/v2/applications/{applicationId}/preconditions:
    get:
      tags:
        - Applications
      operationId: f43be0d9-79ee-4211-bcd0-4572353ff307
      parameters:
        - name: applicationId
          in: path
          description: The id of application
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Return the preconditions list of the specific application.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PreconditionResponse'
        '204':
          description: No content of the answer for customer.
        '400':
          description: Parameter invalid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '401':
          description: Unauthorized.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '403':
          description: Prohibiting block.Please check the error message.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      summary: Get credit application precondition restricted by access token
      description: Get credit application precondition restricted by access token
  /api/revolving/v2/applications/{applicationId}/preconditions/{preconditionId}:
    patch:
      tags:
        - Applications
      summary: Update precondition for credit application
      description: >-
        The API is only allow to patch the state of a precondition from
        REQUESTED to SUBMITTED
      operationId: 440a1b2e-f820-4774-ac16-6b5b510083d1
      parameters:
        - name: applicationId
          in: path
          description: The id of application
          required: true
          schema:
            type: string
        - name: preconditionId
          in: path
          description: The id of precondition
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PreconditionRequestBody'
        required: true
      responses:
        '200':
          description: Return the preconditions list of the specific application.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Precondition'
        '400':
          description: >-
            Parameter invalid. It returns error of type `NotAllowUpdate` when
            the precondition / loan application is not allowed to update.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '401':
          description: Unauthorized.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '403':
          description: Prohibiting block.Please check the error message.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
  /api/revolving/v2/applications/{applicationId}/registerAndSign:
    post:
      tags:
        - Tranches
      summary: Register tranche and sign documents for credit application
      description: Register tranche and sign documents (LOAN ONLY)
      operationId: 615aeb25-342c-493f-a47e-0ad2e2b83e44
      parameters:
        - name: X-AUTH-TOKEN
          in: header
          description: Security token
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TrancheWithSignRequestV2'
        required: true
      responses:
        '201':
          description: Tranches successfully registered
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TrancheWithSignResponseV2'
        '400':
          description: >-
            Bad request. The parameters in the URL or request body are invalid.
            Please refer to the error message for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '401':
          description: >-
            Unauthorized. The token is invalid/expired or the SSN does not exist
            in the VP. Please refer to the error message for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '403':
          description: >-
            Forbidden. No access rights or access frequency too fast. Please
            refer to the error message for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '500':
          description: >-
            Internal server error. Please refer to the error message for
            details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      callbacks:
        signFinish:
          '{$request.body.notificationURL}':
            post:
              requestBody:
                content:
                  application/json:
                    schema:
                      $ref: '#/components/schemas/SignNotification'
              responses:
                '200':
                  description: Notification received
  /api/revolving/v2/applications/{applicationId}/sign:
    post:
      tags:
        - Signing
      summary: sign application pn (LOAN ONLY)
      description: sign application pn by application id
      operationId: e46ed81e-b36e-4be5-a220-d1098df8135d
      parameters:
        - name: X-AUTH-TOKEN
          in: header
          description: Security token
          required: true
          schema:
            type: string
      requestBody:
        description: sign pn request
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SignPNBody'
      responses:
        '200':
          description: get signURL success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SignPNResponse'
        '400':
          description: >-
            Bad request. The parameters in the URL or request body are invalid.
            Please refer to the error message for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '401':
          description: >-
            Unauthorized. The token is invalid/expired or the SSN does not exist
            in the VP. Please refer to the error message for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '403':
          description: >-
            Forbidden. No access rights or access frequency too fast. Please
            refer to the error message for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '404':
          description: The application Id has not found in revolving.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '500':
          description: >-
            Internal server error. Please refer to the error message for
            details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      callbacks:
        callback from lfp if notificationURL is valid:
          http://notification.com:
            post:
              requestBody:
                content:
                  application/json:
                    schema:
                      required:
                        - signSessionId
                        - signStatus
                      type: object
                      properties:
                        accountId:
                          type: string
                          description: >-
                            if sign application is credit application will have
                            accountId, if it is regular application, will not
                            hava accountId
                          example: '6122336'
                        signSessionId:
                          type: string
                          example: 5d13356d9194be001661755b
                        signStatus:
                          type: string
                          enum:
                            - SUCESS
                            - FAIL
                            - REJECT
                required: true
              responses:
                '200':
                  description: Your server returns this code if it accepts the callback
  /api/revolving/v2/products:
    get:
      tags:
        - Loan Products
      summary: Get credit loan products
      description: Only support Credit Loan
      operationId: 39eaf5de-160e-4fd9-a96a-f59319481bc5
      parameters:
        - name: X-AUTH-TOKEN
          in: header
          description: Security token
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Get credit loan products successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreditLoanProductsV2'
        '400':
          description: >-
            Bad request. The parameters in the URL or request body are invalid.
            Please refer to the error message for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '401':
          description: >-
            Unauthorized. The token is invalid/expired or the SSN does not exist
            in the VP. Please refer to the error message for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '403':
          description: >-
            Forbidden. No access rights or access frequency too fast. Please
            refer to the error message for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '500':
          description: >-
            Internal server error. Please refer to the error message for
            details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
  /api/revolving/v2/tranches/batchCancel:
    put:
      tags:
        - Tranches
      summary: Bulk cancel tranches
      description: Batch cancel tranches (LOAN ONLY)
      operationId: 51a964e9-b3b4-4f04-af1c-d810b8651515
      parameters:
        - name: X-AUTH-TOKEN
          in: header
          description: Security token
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/CancelTranchesRequestV2'
        required: true
      responses:
        '200':
          description: Tranches cancelled successfully
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CancelTranchesResponseV2'
        '400':
          description: >-
            Bad request. The parameters in the URL or request body are invalid.
            Please refer to the error message for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '401':
          description: >-
            Unauthorized. The token is invalid/expired or the SSN does not exist
            in the VP. Please refer to the error message for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '403':
          description: >-
            Forbidden. No access rights or access frequency too fast. Please
            refer to the error message for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '409':
          description: Resource busy, please retry
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '500':
          description: >-
            Internal server error. Please refer to the error message for
            details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
  /api/revolving/v2/tranches/create:
    post:
      tags:
        - Tranches
      summary: Bulk create tranches for credit account
      description: Batch create tranches (LOAN ONLY)
      operationId: a3220d35-d41b-494d-a947-1de6e9223c35
      parameters:
        - name: X-AUTH-TOKEN
          in: header
          description: Security token
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TrancheCreateRequestV2'
        required: true
      responses:
        '201':
          description: Tranches registered successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TrancheCreateResponseV2'
        '400':
          description: >-
            Bad request. The parameters in the URL or request body are invalid.
            Please refer to the error message for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '401':
          description: >-
            Unauthorized. The token is invalid/expired or the SSN does not exist
            in the VP. Please refer to the error message for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '403':
          description: >-
            Forbidden. No access rights or access frequency too fast. Please
            refer to the error message for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '500':
          description: >-
            Internal server error. Please refer to the error message for
            details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      callbacks:
        signFinish:
          '{$request.body.notificationURL}':
            post:
              requestBody:
                content:
                  application/json:
                    schema:
                      $ref: '#/components/schemas/SignNotification'
              responses:
                '200':
                  description: Notification received
  /api/revolving/v2/tranches/purchases/batchShip:
    put:
      tags:
        - Purchases
      summary: Bulk update purchases as shipped
      description: Mark the purchase(s) as shipped (LOAN ONLY)
      operationId: f021a081-cb6a-41a9-a6d1-44b19aa3ef9c
      parameters:
        - name: X-AUTH-TOKEN
          in: header
          description: Security token
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ShipPurchasesRequestV2'
        required: true
      responses:
        '200':
          description: Purchase(s) successfully marked as shipped
        '400':
          description: >-
            Bad request. The parameters in the URL or request body are invalid.
            Please refer to the error message for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '401':
          description: >-
            Unauthorized. The token is invalid/expired or the SSN does not exist
            in the VP. Please refer to the error message for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '403':
          description: >-
            Forbidden. No access rights or access frequency too fast. Please
            refer to the error message for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '500':
          description: >-
            Internal server error. Please refer to the error message for
            details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
  /api/system/v1/servicesStatus:
    get:
      tags:
        - System
      summary: Get status of all VP services.
      description: |
        ## General description
        Returns all service status.
        ## Allowed VP token
        Security Token
        ## Allowed roles
        ALL
      operationId: f6530323-102b-4676-b159-cef0e09b5c19
      responses:
        '200':
          description: Service status
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    serviceName:
                      type: string
                      description: Service name
                    status:
                      type: string
                      description: Service status.
                      enum:
                        - ON_LINE
                        - SCALE_UP
                        - OFF_LINE
        '500':
          description: >-
            Internal server error. Please refer to the error message for
            details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '502':
          description: upstream server is Off line
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Error message.
                    example: An invalid response was received from the upstream server
  /api/user/v1/users:
    get:
      tags:
        - Users
      summary: Get users
      description: Get users
      operationId: 03368d71-185d-4808-9bd0-5f6ae47454d8
      responses:
        '200':
          description: Get users successfully
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UserResponse'
        '401':
          description: Unauthorized.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '403':
          description: Access denied, please check the error message
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
  /api/v1/collaterals/{id}:
    get:
      tags:
        - Collaterals
      summary: Get collateral by id (LOAN ONLY)
      description: Get collateral by id. (LOAN ONLY)
      operationId: d6b424b0-075f-417e-9f51-78598833e335
      parameters:
        - name: X-AUTH-TOKEN
          in: header
          description: Access token
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Get collateral successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollateralExternalBO'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
  /api/v1/externalparties:
    get:
      tags:
        - ExternalParties
      summary: Get loan external parties
      description: |
        Get all external parties
        ## Changelog
          - v18.0.0 : Add a new field `administrativeAreas` in response.
      operationId: 7fb708d4-4da0-43a6-8a81-05a7788b2696
      parameters:
        - name: X-AUTH-TOKEN
          in: header
          description: Security token
          required: true
          schema:
            type: string
      responses:
        '200':
          description: ExternalParty information successfully retrieved
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExternalParties'
              examples:
                External parties response example:
                  value:
                    - id: '1'
                      name: xp-1
                      defaultProductId: 6258c85b1e40355a8fe60716
                      availableProductList:
                        - productId: '50'
                          productName: consumerFixed
                          productType: regular
                        - productId: 6258c85b1e40355a8fe60716
                          productName: consumerCredit
                          productType: revolving
                      administrativeAreas:
                        - id: 640e95e963c3c52f35866937
                          administrativeAreaName: aaaa
                          users:
                            - userA
                            - userB
                          address:
                            streetAddress: 8354 Stiedemann Rapid
                            coAddress: 66196 Shanika Glens
                            zipCode: '37024'
                            city: Djursholm
                            country: SE
                            complementingInformation: Complementing Information
                            supplementaryStreetAddress: Supplementary Street Address
                            propertyNumber: Property Number
                            apartmentNumber: Apartment Number
                            floorNumber: Floor Number
                            buildingName: Building Name
                            region: Region
                          contactInformation:
                            email: testmail@localhost.com
                            web: http://aaa.bbb.com
                            phone: '+46123456789'
        '204':
          description: ExternalParty not found
  /api/validation/v1/disbursementAccounts:
    post:
      tags:
        - Validation
      summary: Validate disbursement account. (LOAN ONLY)
      description: Validate disbursement account. (LOAN ONLY)
      operationId: 78c64907-5ed9-401d-93f1-d57f21665de3
      parameters:
        - name: X-AUTH-TOKEN
          in: header
          description: Security token
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DisbursementAccountV1'
        required: true
      responses:
        '200':
          description: Validate result.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationMessage'
        '401':
          description: >-
            Unauthorized. The token is invalid/expired or the SSN does not exist
            in the VP. Please refer to the error message for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '403':
          description: >-
            Forbidden. No access rights or access frequency too fast. Please
            refer to the error message for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '500':
          description: >-
            Internal server error. Please refer to the error message for
            details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
  /api/authentication/v5/oidc/headless/start:
    get:
      tags:
        - Authentication
      summary: Start headless external authentication (v5) (SWEDISH SOLUTION)
      description: |
        ## General description
        Returns authorization code issued by external identity provider
        ## Allowed VP token
        Security token
        ## Allowed roles
        BankID
      operationId: 9bd6af88-4803-4443-8b1c-ee77854ebf12
      parameters:
        - name: ssn
          in: query
          description: User SSN
          required: true
          schema:
            type: string
        - name: type
          in: query
          description: For now, only support bankid
          required: true
          schema:
            type: string
      responses:
        '200':
          description: >-
            Cookie with authorization code received from external identity
            provider
        '400':
          description: >-
            Bad request. The parameters in the URL or request body are invalid.
            Please refer to the error message for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '401':
          description: >-
            Unauthorized. The token is invalid/expired or the SSN does not exist
            in the VP. Please refer to the error message for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '403':
          description: >-
            Forbidden. No access rights or access frequency too fast. Please
            refer to the error message for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '500':
          description: >-
            Internal server error. Please refer to the error message for
            details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      security:
        - X-AUTH-TOKEN: []
  /api/authentication/v5/oidc/headless/token:
    get:
      tags:
        - Authentication
      summary: Get headless external authentication status (v5) (SWEDISH SOLUTION)
      description: >
        ## General description

        Exchange authorizationCode received from external identity provider to
        platform access token

        ## Allowed VP token

        Security token

        ## Allowed roles

        BankdID
      operationId: e50decda-56ec-4d46-abf7-46cdd6530fa8
      parameters:
        - name: vp_authentication_request_reference
          in: cookie
          description: Authorization code received from external identity provider
          required: true
          schema:
            type: string
        - name: type
          in: query
          description: For now, only support bankid
          required: true
          schema:
            type: string
      responses:
        '200':
          description: >-
            Returns cookie containing access token. Cookie parameters are
            defined in VP admin area. For exact response body refer to
            third-party API documentation
        '400':
          description: >-
            Bad request. The parameters in the URL or request body are invalid.
            Please refer to the error message for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '401':
          description: >-
            Unauthorized. The token is invalid/expired or the SSN does not exist
            in the VP. Please refer to the error message for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '403':
          description: >-
            Forbidden. No access rights or access frequency too fast. Please
            refer to the error message for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '500':
          description: >-
            Internal server error. Please refer to the error message for
            details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      security:
        - X-AUTH-TOKEN: []
components:
  schemas:
    Disbursement:
      description: ''
      type: object
      x-examples:
        INTERNALDisbursement:
          id: '1952'
          receivingPartyType: INTERNAL
          receivingPartyName: testCompany
          receivingAccount:
            type: INTERNAL
            number: '1000520'
          receivingAccountExtra:
            messageInfo: null
            ocrReference: null
          desiredDisbursementDate: null
          disburseDate: '2021-11-30'
          completedDate: '2021-11-30'
          resultDescription: null
          amount: 200
          status: DISBURSED
          type: DISBURSEMENT
          transaction:
            transactionDate: '2021-11-30 13:51:37'
            transactionType: LoanInternalDisbursementTransaction
            transactionMsg: null
            amount: 200
          noteFromRequester: null
          noteFromApprover: ''
          requester: CSR
          approver: CSR Manager
      title: ''
      properties:
        id:
          type: string
        receivingPartyType:
          $ref: '#/components/schemas/ReceivingPartyType'
        receivingPartyName:
          type: string
        receivingAccount:
          $ref: '#/components/schemas/DisbursementAccountV1'
        receivingAccountExtra:
          $ref: '#/components/schemas/ReceivingAccountExtra'
        desiredDisbursementDate:
          $ref: '#/components/schemas/VPDate'
        disburseDate:
          $ref: '#/components/schemas/VPDate'
        completedDate:
          $ref: '#/components/schemas/VPDate'
        resultDescription:
          type: string
        amount:
          type: number
        status:
          $ref: '#/components/schemas/LoanDisbursementStatus'
        type:
          $ref: '#/components/schemas/LoanDisbursementType'
        transaction:
          $ref: '#/components/schemas/Transaction'
        noteFromRequester:
          type: string
        noteFromApprover:
          type: string
        requester:
          type: string
        approver:
          type: string
    Credit:
      type: object
      title: ''
      properties:
        sum:
          type: number
        rate:
          type: number
        paybackTime:
          type: integer
          description: Other loan remaining tenor in months
          format: int32
        bank:
          type: string
        monthlyCost:
          type: number
        typeOfCredit:
          type: string
          description: >-
            Verified against configured values. By default [HOUSE_MORTGAGE,
            CREDIT_CARD, HIRE_PURCHASE, UNSECURED, OTHER, APARTMENT_MORTGAGE,
            STUDENT_LOAN, LOAN_COMMITMENT, CAR_LOAN]
        externalLoanAccountNumber:
          type: string
        validForCollateral:
          type: boolean
          description: Is valid for collateral
        amortization:
          type: number
        receiverType:
          $ref: '#/components/schemas/PaymentAccountType'
        receiverAccount:
          type: string
          description: If receiverType has value, receiverAccount is mandatory
        messageInfo:
          maxLength: 119
          type: string
          description: >-
            Either messageInfo or ocrReference is mandatory when receiverType is
            SE-BG/SE-PG.</br> If the receiverType is SE-CLEARING, you can input
            messageInfo and messageInfo is not mandatory, the max length of
            messageInfo is 14.
        ocrReference:
          maxLength: 25
          type: string
          description: >-
            Either messageInfo or ocrReference is mandatory when receiverType is
            SE-BG/SE-PG
        needSettle:
          type: boolean
        settleAmount:
          type: number
          description: settleAmount is mandatory when needSettle is true
      required:
        - monthlyCost
    Employer:
      required:
        - employer
        - employmentType
        - salary
      type: object
      properties:
        employer:
          type: string
        employmentType:
          type: string
          enum:
            - FULL
            - TRIAL
            - RETIRED
            - HOURLY
            - EARLY_RETIRED
            - PROJECT
            - SELF_EMPLOYED
            - COMPANY_OWNER
            - NO_WORK
            - STUDENT
            - TEMPORARY
            - TIME_OFF
            - PART_TIME
        isManagementTeamMember:
          type: boolean
        salary:
          type: number
          description: Monthly salary in whole SEK
        netSalary:
          type: number
          description: Income after tax, support 2 decimals.
        employedAt:
          type: string
          description: Format is yyyy-MM-dd, should be before employerEndDate
        employerEndDate:
          type: string
          description: >-
            Format is yyyy-MM-dd, should be after employedAt, and only works
            when employmentType is PROJECT or TEMPORARY
        referencePhone:
          type: string
    OtherIncome:
      type: object
      properties:
        type:
          type: string
          description: >-
            Verified against configured values. By default ["RENTAL",
            "INTEREST", "DIVIDENT", "CAPITAL", "SOCIAL_BENEFITS"]
        period:
          type: string
          description: >-
            Verified against configured values. By default ["WEEKLY",
            "BIWEEKLY", "MONTHLY", "QUATERLY", "YEARLY"]
        value:
          type: number
    LoanApplicant:
      type: object
      properties:
        personalID:
          type: string
          description: >-
            The personalID of main applicant is required. The personalID of co
            applicant is required only when co applicant is included in the
            application.
        givenName:
          type: string
        surName:
          type: string
        email:
          type: string
        phonePrimary:
          type: string
          description: >-
            It is mandatory when phone_home is empty,matches the regular
            expression
            '(\+(?!46)[0-9]{5,})|((0046|0|\+46)([1-9][0-9]{0,2}[-|\/]{0,1}[0-9]{4,11}))
            '
        phoneHome:
          type: string
          description: >-
            It is mandatory when phone_primary is empty,matches the regular
            expression
            '(\+(?!46)[0-9]{5,})|((0046|0|\+46)([1-9][0-9]{0,2}[-|\/]{0,1}[0-9]{4,11}))
            '
        phoneDay:
          type: string
        propertyType:
          type: string
          enum:
            - RENTED
            - OWNED
            - LIVEIN
            - HOUSE
        propertyCost:
          type: number
        maritalStatus:
          type: string
          enum:
            - MARRIED
            - SINGLE
            - DIVORCED
            - PARTNER
            - WIDOWED
        children:
          type: integer
          format: int32
        postalCareOf:
          type: string
        postalAddress:
          type: string
        postalCode:
          type: string
        postalCity:
          type: string
        postalCountry:
          type: string
          description: 'International 2-letter standard (ISO 3166-1 alpha-2) '
        postalRegion:
          type: string
        employer:
          $ref: '#/components/schemas/Employer'
        selfAssessedPEP:
          type: string
          enum:
            - 'NULL'
            - PEP
            - RELATED_TO_PEP
            - NOT_PEP
        selfAssessedPepDescription:
          type: string
          description: Only needed when selfAssessedPEP is not NULL
        nationality:
          type: string
          description: 'International 2-letter standard (ISO 3166-1 alpha-2) '
        dynamicFields:
          type: object
          additionalProperties:
            type: string
        dynamicFieldsRef:
          type: string
      required:
        - personalID
        - givenName
        - surName
    LoanApplicantForV5:
      type: object
      title: ''
      properties:
        personalID:
          type: string
          description: >-
            The personalID of main applicant is required. The personalID of co
            applicant is required only when co applicant is included in the
            application.
        givenName:
          type: string
        surName:
          type: string
        email:
          type: string
        phonePrimary:
          type: string
          description: >-
            It is mandatory when phone_home is empty,matches the regular
            expression
            '(\+(?!46)[0-9]{5,})|((0046|0|\+46)([1-9][0-9]{0,2}[-|\/]{0,1}[0-9]{4,11}))
            ' for Sweden and '(0047|\\+47|47)?\\d{8}' for Norway
        phoneHome:
          type: string
          description: >-
            It is mandatory when phone_primary is empty,matches the regular
            expression
            '(\+(?!46)[0-9]{5,})|((0046|0|\+46)([1-9][0-9]{0,2}[-|\/]{0,1}[0-9]{4,11}))
            ' for Sweden and '(0047|\\+47|47)?\\d{8}' for Norway
        phoneDay:
          type: string
        propertyType:
          type: string
          description: >-
            Verified against configured values. By default [RENTED, OWNED,
            LIVEIN, HOUSE]
        propertyCost:
          type: number
        maritalStatus:
          type: string
          description: >-
            Verified against configured values. By default [MARRIED, SINGLE,
            DIVORCED, PARTNER, WIDOWED]
        children:
          type: integer
          format: int32
        address:
          $ref: '#/components/schemas/AddressBO'
        employer:
          $ref: '#/components/schemas/Employer'
        selfAssessedPEP:
          type: string
          enum:
            - 'NULL'
            - PEP
            - RELATED_TO_PEP
            - NOT_PEP
        selfAssessedPepDescription:
          type: string
          description: Only needed when selfAssessedPEP is not NULL
        nationality:
          type: string
          description: 'International 2-letter standard (ISO 3166-1 alpha-2) '
        otherIncomes:
          type: array
          items:
            $ref: '#/components/schemas/OtherIncome'
        educationLevel:
          type: string
          description: >-
            Varified against configured values. By default ["PRIMARY",
            "HIGH_SCHOOL", "COLLEGE_3_YEAR"]
        dynamicFields:
          type: object
          additionalProperties:
            type: string
      required:
        - personalID
        - givenName
        - surName
        - employer
    LoanApplicationPatchRequest:
      type: object
      properties:
        appliedProductID:
          type: string
          description: Specific product id in available product list.
        appliedOfferID:
          type: string
          description: Optional, Specific offer ID in available loan offer list.
        desiredLoan:
          type: integer
          description: Desired loan amount.
        desiredPaybackTime:
          type: integer
          description: Applied tenor.
        manualDeltaInterestRate:
          type: number
          description: The interest rate be adjusted manually, e.g. 0.001, -0.001.
        credits:
          type: array
          description: >-
            Existing credits with other banks that need to be considered in the
            application
          items:
            $ref: '#/components/schemas/Credit'
        mainApplicant:
          $ref: '#/components/schemas/LoanApplicantForUpdateV4'
        coApplicant:
          $ref: '#/components/schemas/LoanApplicantForUpdateV4'
        extras:
          type: object
          additionalProperties:
            type: string
          description: Max length for each properties is 255.
        campaigns:
          type: object
          additionalProperties:
            type: string
          description: Max length for each properties is 255.
        disbursementAccount:
          $ref: '#/components/schemas/DisbursementAccountV1'
        comments:
          type: array
          description: Application notes, max length for each comment is 1048.
          items:
            type: string
        statementChannel:
          $ref: '#/components/schemas/StatementChannel'
        preferredDueDay:
          type: integer
          description: >-
            The preferred due day (range 1 ~ 31), only for the product
            configured with floating statement
        downgradeAccepted:
          type: boolean
          description: >-
            Accept downgrade or not. Only valid if original applied amount has
            been rejected.
        downgradeAmount:
          type: number
          description: Accept downgrade amount.
        reasonForCredit:
          type: array
          description: >-
            Reason for credit, verified against configured values. By default
            [CAR, RENOVATION, OTHER]
          items:
            type: string
        dynamicFields:
          type: object
          additionalProperties:
            type: string
        externalPartyID:
          type: number
          description: >-
            External party should be connected to the applied product in LFP in
            Modules->External party.
        administrativeAreaName:
          type: string
          description: >-
            Administrative area should be allowed for the chosen external party
            in LFP in Modules->External party.
        salesPerson:
          type: string
          description: >-
            Sales person should be allowed for the chosen external party or
            chosen administrative area in LFP in Modules->External party.
        vatInformation:
          $ref: '#/components/schemas/VatInformation'
        residualAmount:
          type: number
          description: Residual amount
        residualAmountNotAllowToBeOverwrittenByRule:
          type: boolean
          description: Residual amount not allow to be overwritten by rule
      x-examples: {}
      description: ''
      title: ''
    LoanApplicationRequestForV5:
      type: object
      properties:
        appliedProductID:
          type: string
          description: Applied product id
        appliedOfferID:
          type: string
          description: Optional, Specific offer ID in available loan offer list.
        externalReference:
          type: string
          description: External (your) reference number
        desiredLoan:
          type: number
          description: Desired loan or credit amount
        desiredPaybackTime:
          type: integer
          description: Desired tenor (only relevant for loans)
          format: int32
        credits:
          type: array
          description: >-
            Existing credits with other banks that need to be considered in the
            application
          items:
            $ref: '#/components/schemas/Credit'
        mainApplicant:
          $ref: '#/components/schemas/LoanApplicantForV5'
        coApplicant:
          $ref: '#/components/schemas/LoanApplicantForV5'
        extras:
          type: object
          additionalProperties:
            type: string
          description: Max length for each properties is 255.
        campaigns:
          type: object
          additionalProperties:
            type: string
        disbursementAccount:
          $ref: '#/components/schemas/DisbursementAccountV1'
        comments:
          type: array
          description: Application notes, max length for each comment is 1048
          items:
            type: string
        statementChannel:
          type: string
          enum:
            - PAPER
            - ELECTRONIC_EMAIL_NOTIFICATION
            - ELECTRONIC_SMS_NOTIFICATION
            - ELECTRONIC_NO_NOTIFICATION
        preferredDueDay:
          type: integer
          description: >-
            The preferred due day (range 1 ~ 31), only for the product
            configured with floating statement
          format: int32
        downgradeAccepted:
          type: boolean
        downgradeAmount:
          type: number
        reasonForCredit:
          type: array
          description: >-
            Verified against configured values. By default [CAR, RENOVATION,
            OTHER]
          items:
            type: string
        applicationCategory:
          type: string
          description: Application category, default value is NEW
          enum:
            - NEW
            - TOP_UP
        dynamicFields:
          type: object
          additionalProperties:
            type: string
        externalPartyID:
          type: integer
          description: >-
            External party should be connected to the applied product in LFP in
            Modules->External party.
        administrativeAreaName:
          type: string
          description: >-
            Administrative area should be allowed for the chosen external party
            in LFP in Modules->External party.
        salesPerson:
          type: string
          description: >-
            Sales person should be allowed for the chosen external party or
            chosen administrative area in LFP in Modules->External party.
        vatInformation:
          $ref: '#/components/schemas/VatInformation'
        residualAmount:
          type: number
          description: Residual amount
        residualAmountNotAllowToBeOverwrittenByRule:
          type: boolean
          description: Residual amount not allow to be overwritten by rule
        reservedAccountNumber:
          type: string
          description: The related account number
      required:
        - appliedProductID
        - desiredLoan
        - mainApplicant
    LoanApplicants:
      required:
        - main
      type: object
      properties:
        main:
          $ref: '#/components/schemas/LoanApplicant'
        co:
          $ref: '#/components/schemas/LoanApplicant'
    LoanApplicationResponse:
      type: object
      properties:
        applicationID:
          type: string
        applicationReference:
          type: string
        decision:
          type: string
        decisionReason:
          type: string
        externalReference:
          type: string
          description: External (your) reference number
        reservedAccountNumber:
          type: string
      required:
        - applicationID
        - applicationReference
        - decision
        - decisionReason
    LoanApplicationSimulationRequest:
      required:
        - appliedAmount
        - appliedTenor
        - defaultProductId
      type: object
      properties:
        defaultProductId:
          type: string
          description: Default product id
        appliedAmount:
          type: number
          description: Applied amount
        appliedTenor:
          type: integer
          description: Applied tenor
          format: int32
        interestRate:
          type: number
          description: >-
            It will rewrite the product configuration if provided (The range is
            0 ~ 1, with up to 5 decimal places)
        startupFee:
          type: number
          description: >-
            It will rewrite the product configuration if provided (Only positive
            integers can be entered)
        feeTypeToUseInCalculation:
          type: string
          description: It will rewrite the product configuration if provided
          enum:
            - STATEMENT_FEE
            - DIRECT_DEBIT_FEE
            - EINVOICE_FEE
    LoanApplicationSimulationResponse:
      type: object
      properties:
        totalAmountToBePaid:
          type: number
        monthlyCost:
          type: number
          description: Including amortization, interest, service fee and statement fee
        monthlyServiceFee:
          type: number
        totalServiceFee:
          type: number
        effectiveInterestRate:
          type: number
        interestRate:
          type: number
        startupFee:
          type: number
        monthlyStatementFee:
          type: number
        totalStatementFee:
          type: number
    UpdateApplicationStateRequest:
      required:
        - applicationState
      type: object
      properties:
        applicationState:
          type: string
          enum:
            - PN_SENT
    ApplicationState:
      type: string
      enum:
        - UNPROCESSED
        - PENDING
        - BID
        - PN_CREATED
        - PN_SENT
        - PN_SIGNED
        - ACCOUNT_CREATED
        - DISBURSED
        - EXPIRED
        - TURNED_DOWN
        - REJECTED
        - CANCELLED
    LoanApplicationDetails:
      type: object
      properties:
        id:
          type: integer
          format: int64
        reference:
          type: string
        appliedProductId:
          type: string
        appliedOfferId:
          type: string
        externalReference:
          maxLength: 2048
          type: string
        desiredLoan:
          type: number
        desiredPaybackTime:
          type: integer
          format: int32
        credits:
          type: array
          items:
            $ref: '#/components/schemas/LoanOtherLoanAccountBO'
        mainApplicant:
          $ref: '#/components/schemas/LoanApplicantV2'
        coApplicant:
          $ref: '#/components/schemas/LoanApplicantV2'
        extras:
          type: object
          additionalProperties:
            type: string
          description: Max length for each properties is 255.
        campaigns:
          type: object
          additionalProperties:
            type: string
        disbursementAccount:
          $ref: '#/components/schemas/DisbursementAccountForLoan'
        statementChannel:
          type: string
          enum:
            - PAPER
            - ELECTRONIC_EMAIL_NOTIFICATION
            - ELECTRONIC_SMS_NOTIFICATION
            - ELECTRONIC_NO_NOTIFICATION
        mortgageType:
          type: string
          enum:
            - PURCHASE
            - RE_MORTGAGE
            - FIRSTTIMEBUYER
        state:
          $ref: '#/components/schemas/ApplicationState'
        rejectReasonCode:
          type: string
        rejectReasonText:
          type: string
        actualDecision:
          type: string
          enum:
            - REJECTED
            - APPROVED
            - INCOMPLETE
            - REFERRAL
        documents:
          $ref: '#/components/schemas/LoanDocumentBO'
        manualDeltaInterestRate:
          type: number
          description: The interest rate be adjusted manually, e.g. 0.001, -0.001.
        systemDeltaInterestRate:
          type: number
          description: The interest rate be adjusted by the system.
        productInterestRate:
          type: number
          description: The product base interest rate.
        referenceInterestRate:
          type: number
          description: The reference interest rate.
        totalInterestRate:
          type: number
          description: The total interest rate.
        effectiveInterestRate:
          type: number
          description: The effective interest rate(only for regular application).
        monthlyCost:
          type: number
          description: The monthly cost(only for consumer regular application).
        dynamicFields:
          type: object
          additionalProperties:
            type: string
          description: 10.0+ is available
        dynamicFieldsRef:
          type: string
          description: 10.0+ is available
        externalPartyId:
          type: string
          description: >-
            External party should be connected to the applied product in LFP in
            Modules->External party.
        externalPartyName:
          type: string
        administrativeAreaName:
          type: string
          description: >-
            Administrative area should be allowed for the chosen external party
            in LFP in Modules->External party.
        salesPerson:
          type: string
          description: >-
            Sales person should be allowed for the chosen external party or
            chosen administrative area in LFP in Modules->External party.
        residualAmountType:
          $ref: '#/components/schemas/ResidualAmountType'
        residualAmount:
          type: number
          description: Residual amount
        residualAmountNotAllowToBeOverwrittenByRule:
          type: boolean
          description: Residual amount not allow to be overwritten by rule
        reservedAccountNumber:
          type: string
          description: The related account number
        brokerName:
          type: string
          description: The broker name
        assetIds:
          type: array
          items:
            type: string
          description: Asset ids
      required:
        - appliedProductId
        - desiredLoan
        - desiredPaybackTime
        - mortgageType
    LoanApplicationDetailsForOriginations:
      required:
        - applicants
        - appliedProductId
        - desiredLoan
        - desiredPaybackTime
        - mortgageType
      type: object
      properties:
        id:
          type: integer
          format: int64
        appliedProductId:
          type: string
        externalReference:
          maxLength: 2048
          type: string
        desiredLoan:
          type: number
        desiredPaybackTime:
          type: integer
          format: int32
        credits:
          type: array
          items:
            $ref: '#/components/schemas/LoanOtherLoanAccountBO'
        mainApplicant:
          $ref: '#/components/schemas/LoanApplicantV2'
        coApplicant:
          $ref: '#/components/schemas/LoanApplicantV2'
        extras:
          type: object
          additionalProperties:
            type: string
          description: Max length for each properties is 255.
        campaigns:
          type: object
          additionalProperties:
            type: string
        disbursementAccount:
          $ref: '#/components/schemas/DisbursementAccountForOrigination'
        statementChannel:
          type: string
          enum:
            - PAPER
            - ELECTRONIC_EMAIL_NOTIFICATION
            - ELECTRONIC_SMS_NOTIFICATION
            - ELECTRONIC_NO_NOTIFICATION
        mortgageType:
          type: string
          enum:
            - PURCHASE
            - RE_MORTGAGE
            - FIRSTTIMEBUYER
        state:
          $ref: '#/components/schemas/ApplicationState'
        rejectReasonCode:
          type: string
        rejectReasonText:
          type: string
        actualDecision:
          type: string
          enum:
            - REJECTED
            - APPROVED
            - INCOMPLETE
            - REFERRAL
        documents:
          $ref: '#/components/schemas/LoanDocumentBO'
    LoanDocumentBO:
      required:
        - documentId
        - documentType
        - fileName
      type: object
      properties:
        fileName:
          type: string
        documentType:
          type: string
        documentId:
          type: string
    LoanOtherLoanAccountBO:
      type: object
      properties:
        id:
          type: string
        sum:
          type: number
          description: Positive number, support two decimal places
        rate:
          type: number
          description: >-
            Positive percent number, between 0 and 100 (e.g. 32 means 32%),
            support two decimal places
        paybackTime:
          type: integer
          description: Positive integer
          format: int32
        bank:
          type: string
        monthlyCost:
          type: number
          description: Positive number, support two decimal places
        typeOfCredit:
          type: string
          enum:
            - HOUSE_MORTGAGE
            - CREDIT_CARD
            - HIRE_PURCHASE
            - UNSECURED
            - OTHER
            - APARTMENT_MORTGAGE
            - LOAN_COMMITMENT
            - CAR_LOAN
            - STUDENT_LOAN
        externalLoanAccountNumber:
          type: string
        validForCollateral:
          type: boolean
          description: Is valid for collateral
        amortization:
          type: number
          description: Positive number.
        receiverType:
          $ref: '#/components/schemas/PaymentAccountType'
        receiverAccount:
          type: string
          description: If receiverType has value, receiverAccount is mandatory
        messageInfo:
          maxLength: 119
          type: string
          description: >-
            Either messageInfo or ocrReference is mandatory when receiverType is
            SE-BG/SE-PG.</br> If the receiverType is SE-CLEARING, you can input
            messageInfo and messageInfo is not mandatory, the max length of
            messageInfo is 14.
        ocrReference:
          maxLength: 25
          type: string
          description: >-
            Either messageInfo or ocrReference is mandatory when receiverType is
            SE-BG/SE-PG
        needSettle:
          type: boolean
        settleAmount:
          type: number
          description: settleAmount is mandatory when needSettle is true
    LoanApplicantV2:
      type: object
      properties:
        personalId:
          type: string
          description: >-
            The personalId of main applicant is required. The personalID of co
            applicant is required only when co applicant is included in the
            application. The co personalId should be different with the main. It
            requires the century. e.g. 193504049135
        givenName:
          type: string
        surName:
          type: string
        email:
          type: string
          description: Email format
        phonePrimary:
          type: string
          description: >-
            Phone number, at least one phone is required, validate by google
            libphonenumber, refer to https://libphonenumber.appspot.com/
        phoneHome:
          type: string
          description: >-
            Phone number, at least one phone is required, validate by google
            libphonenumber, refer to https://libphonenumber.appspot.com/
        propertyType:
          type: string
          enum:
            - RENTED
            - OWNED
            - LIVEIN
            - HOUSE
        propertyCost:
          type: number
          description: Positive number
        maritalStatus:
          type: string
          enum:
            - MARRIED
            - SINGLE
            - DIVORCED
            - PARTNER
            - WIDOWED
        children:
          type: integer
          description: >-
            The number of children, accept positive integer and automatically
            round digits
          format: int32
        address:
          $ref: '#/components/schemas/AddressBO'
        employmentInfo:
          $ref: '#/components/schemas/EmploymentInfoV2BO'
        selfAssessedPEP:
          type: string
          enum:
            - 'NULL'
            - PEP
            - RELATED_TO_PEP
            - NOT_PEP
        selfAssessedPepDescription:
          type: string
          description: Only needed when selfAssessedPEP is not NULL
        nationality:
          type: string
          description: International 2-letter standard (ISO 3166-1 alpha-2)
        dynamicFields:
          type: object
          additionalProperties:
            type: string
        dynamicFieldsRef:
          type: string
      required:
        - personalId
        - givenName
        - surName
        - employmentInfo
    LoanApplicantV3:
      type: object
      properties:
        personalId:
          type: string
          description: >-
            The personalId of main applicant is required. The personalID of co
            applicant is required only when co applicant is included in the
            application. The co personalId should be different with the main. It
            requires the century. e.g. 193504049135
        givenName:
          type: string
        surName:
          type: string
        email:
          type: string
          description: Email format
        phonePrimary:
          type: string
          description: >-
            Phone number, at least one phone is required, validate by google
            libphonenumber, refer to https://libphonenumber.appspot.com/
        phoneHome:
          type: string
          description: >-
            Phone number, at least one phone is required, validate by google
            libphonenumber, refer to https://libphonenumber.appspot.com/
        propertyType:
          type: string
          enum:
            - RENTED
            - OWNED
            - LIVEIN
            - HOUSE
        propertyCost:
          type: number
          description: Positive number
        maritalStatus:
          type: string
          enum:
            - MARRIED
            - SINGLE
            - DIVORCED
            - PARTNER
            - WIDOWED
        address:
          $ref: '#/components/schemas/AddressBO'
        employmentInfo:
          $ref: '#/components/schemas/EmploymentInfoV2BO'
        selfAssessedPEP:
          type: string
          enum:
            - 'NULL'
            - PEP
            - RELATED_TO_PEP
            - NOT_PEP
        selfAssessedPepDescription:
          type: string
          description: Only needed when selfAssessedPEP is not NULL
        nationality:
          type: string
          description: International 2-letter standard (ISO 3166-1 alpha-2)
        numberOfCars:
          type: integer
          format: int32
        hasSalaryInLocalCurrency:
          type: boolean
        otherIncome:
          type: number
        otherExpenses:
          type: number
        dynamicFields:
          type: object
          additionalProperties:
            type: string
      required:
        - personalId
        - givenName
        - surName
        - employmentInfo
    ApplicationNote:
      required:
        - note
      type: object
      properties:
        note:
          type: string
    PreconditionRequestBody:
      required:
        - state
      type: object
      properties:
        state:
          type: string
          description: >
            * SUBMITTED The customer has answered the prerequisite
            items.Currently supported as submited state only.
          enum:
            - SUBMITTED
    PreconditionResponse:
      required:
        - precondition
      type: object
      properties:
        precondition:
          type: array
          items:
            $ref: '#/components/schemas/Precondition'
    Precondition:
      required:
        - id
      type: object
      properties:
        id:
          type: string
        complementType:
          type: string
        preconditionName:
          type: string
        shortName:
          type: string
        mandatory:
          type: boolean
          description: >-
            If preconditions are required, will be marked as true, if not, will
            be marked as false
        state:
          type: string
          description: >
            * REQUESTED Customers are asked to answer prerequisite items.

            * SUBMITTED The customer has answered the prerequisite items.

            * FULFILLED The preconditions for the customer's items have been
            validated.
          enum:
            - REQUESTED
            - SUBMITTED
            - FULFILLED
        stateUpdateTime:
          type: string
          description: State update time, format is yyyy-MM-dd HH:mm:ss
        external:
          type: boolean
          description: This field always returns true
        preconditionTarget:
          description: >-
            Depending on the different state of loan application, also different
            with preconditions. Currently only support to return DISBURSED
          allOf:
            - $ref: '#/components/schemas/ApplicationState'
    ChildBO:
      required:
        - applicantType
      type: object
      properties:
        age:
          type: integer
          format: int32
        custodyShare:
          type: number
        applicantType:
          type: string
          enum:
            - MAIN
            - CO
            - BOTH
        childBenefit:
          type: number
        childSupport:
          type: number
    AccommodationBO:
      required:
        - applicantType
      type: object
      properties:
        type:
          type: string
        monthlyCost:
          type: number
        ownedShare:
          type: number
        willKeep:
          type: boolean
        marketValue:
          type: integer
          format: int32
        hasMortgage:
          type: boolean
    CreditV8PostRequestBO:
      required:
        - monthlyCost
      type: object
      properties:
        sum:
          type: number
          description: Positive number, support two decimal places
        rate:
          type: number
          description: >-
            Positive percent number, between 0 and 100 (e.g. 32 means 32%),
            support two decimal places
        paybackTime:
          type: integer
          description: Positive integer
          format: int32
        bank:
          type: string
        monthlyCost:
          type: number
          description: Positive number, support two decimal places
        typeOfCredit:
          type: string
          description: >-
            Verified against configured values. By default [HOUSE_MORTGAGE,
            CREDIT_CARD, HIRE_PURCHASE, UNSECURED, OTHER, APARTMENT_MORTGAGE,
            STUDENT_LOAN, LOAN_COMMITMENT, CAR_LOAN]
        externalLoanAccountNumber:
          type: string
        validForCollateral:
          type: boolean
          description: Is valid for collateral
        amortization:
          type: number
          description: Positive number.
        receiverType:
          $ref: '#/components/schemas/PaymentAccountType'
        receiverAccount:
          type: string
          description: If receiverType has value, receiverAccount is mandatory
        messageInfo:
          maxLength: 119
          type: string
          description: >-
            Either messageInfo or ocrReference is mandatory when receiverType is
            SE-BG/SE-PG.</br> If the receiverType is SE-CLEARING, you can input
            messageInfo and messageInfo is not mandatory, the max length of
            messageInfo is 14.
        ocrReference:
          maxLength: 25
          type: string
          description: >-
            Either messageInfo or ocrReference is mandatory when receiverType is
            SE-BG/SE-PG
        needSettle:
          type: boolean
        settleAmount:
          type: number
          description: settleAmount is mandatory when needSettle is true
    CreditV8PatchRequestBO:
      type: object
      properties:
        sum:
          type: number
          description: Positive number, support two decimal places
        rate:
          type: number
          description: >-
            Positive percent number, between 0 and 100 (e.g. 32 means 32%),
            support two decimal places
        paybackTime:
          type: integer
          description: Positive integer
          format: int32
        bank:
          type: string
        monthlyCost:
          type: number
          description: Positive number, support two decimal places
        typeOfCredit:
          type: string
          description: >-
            Verified against configured values. By default [HOUSE_MORTGAGE,
            CREDIT_CARD, HIRE_PURCHASE, UNSECURED, OTHER, APARTMENT_MORTGAGE,
            STUDENT_LOAN, LOAN_COMMITMENT, CAR_LOAN]
        externalLoanAccountNumber:
          type: string
        validForCollateral:
          type: boolean
          description: Is valid for collateral
        amortization:
          type: number
          description: Positive number.
        receiverType:
          $ref: '#/components/schemas/PaymentAccountType'
        receiverAccount:
          type: string
          description: If receiverType has value, receiverAccount is mandatory
        messageInfo:
          maxLength: 119
          type: string
          description: >-
            Either messageInfo or ocrReference is mandatory when receiverType is
            SE-BG/SE-PG.</br> If the receiverType is SE-CLEARING, you can input
            messageInfo and messageInfo is not mandatory, the max length of
            messageInfo is 14.
        ocrReference:
          maxLength: 25
          type: string
          description: >-
            Either messageInfo or ocrReference is mandatory when receiverType is
            SE-BG/SE-PG
        needSettle:
          type: boolean
        settleAmount:
          type: number
          description: settleAmount is mandatory when needSettle is true
    CreditV8ResponseBO:
      type: object
      properties:
        id:
          type: string
        sum:
          type: number
          description: Positive number, support two decimal places
        rate:
          type: number
          description: >-
            Positive percent number, between 0 and 100 (e.g. 32 means 32%),
            support two decimal places
        paybackTime:
          type: integer
          description: Positive integer
          format: int32
        bank:
          type: string
        monthlyCost:
          type: number
          description: Positive number, support two decimal places
        typeOfCredit:
          type: string
          description: >-
            Verified against configured values. By default [HOUSE_MORTGAGE,
            CREDIT_CARD, HIRE_PURCHASE, UNSECURED, OTHER, APARTMENT_MORTGAGE,
            STUDENT_LOAN, LOAN_COMMITMENT, CAR_LOAN]
        externalLoanAccountNumber:
          type: string
        validForCollateral:
          type: boolean
          description: Is valid for collateral
        amortization:
          type: number
          description: Positive number.
        otherLoanAccountType:
          type: string
          enum:
            - EXTERNAL_ACCOUNT
            - INTERNAL_CONSUMER_REGULAR_ACCOUNT
            - INTERNAL_CONSUMER_CREDIT_ACCOUNT
            - INTERNAL_BUSINESS_CREDIT_ACCOUNT
            - INTERNAL_BUSINESS_REGULAR_ACCOUNT
        receiverType:
          $ref: '#/components/schemas/PaymentAccountType'
        receiverAccount:
          type: string
          description: If receiverType has value, receiverAccount is mandatory
        messageInfo:
          maxLength: 119
          type: string
          description: >-
            Either messageInfo or ocrReference is mandatory when receiverType is
            SE-BG/SE-PG.</br> If the receiverType is SE-CLEARING, you can input
            messageInfo and messageInfo is not mandatory, the max length of
            messageInfo is 14.
        ocrReference:
          maxLength: 25
          type: string
          description: >-
            Either messageInfo or ocrReference is mandatory when receiverType is
            SE-BG/SE-PG
        needSettle:
          type: boolean
        settleAmount:
          type: number
          description: settleAmount is mandatory when needSettle is true
    SubmitRevolvingApplicationRequestV2:
      type: object
      properties:
        appliedProductID:
          type: string
          description: Applied product id
        externalReference:
          type: string
          description: External (your) reference number
        desiredLoan:
          type: number
          description: Desired loan or credit amount
        desiredPaybackTime:
          type: integer
          description: Desired tenor (only relevant for loans)
          format: int32
        credits:
          type: array
          description: >-
            Existing credits with other banks that need to be considered in the
            application
          items:
            $ref: '#/components/schemas/Credit'
        applicants:
          $ref: '#/components/schemas/LoanApplicants'
        extras:
          type: object
          additionalProperties:
            type: string
          description: Max length for each properties is 255.
        campaigns:
          type: object
          additionalProperties:
            type: string
        disbursementAccount:
          $ref: '#/components/schemas/DisbursementAccountV1'
        comments:
          type: array
          description: Application notes, max length for each comment is 1048
          items:
            type: string
        statementChannel:
          type: string
          enum:
            - PAPER
            - ELECTRONIC_EMAIL_NOTIFICATION
            - ELECTRONIC_SMS_NOTIFICATION
            - ELECTRONIC_NO_NOTIFICATION
        preferredDueDay:
          type: integer
          description: >-
            The preferred due day (range 1 ~ 31), only for the product
            configured with floating statement
          format: int32
        downgradeAccepted:
          type: boolean
        downgradeAmount:
          type: number
        applicationCategory:
          type: string
          description: Application category, default value is NEW
          enum:
            - NEW
            - TOP_UP
        externalPartyID:
          type: number
          description: >-
            External party should be connected to the applied product in LFP in
            Modules->External party.
        administrativeAreaName:
          type: string
          description: >-
            Administrative area should be allowed for the chosen external party
            in LFP in Modules->External party.
        salesPerson:
          type: string
          description: >-
            Sales person should be allowed for the chosen external party or
            chosen administrative area in LFP in Modules->External party.
        reservedAccountNumber:
          type: string
          description: The related account number
      required:
        - appliedProductID
        - desiredLoan
        - applicants
    ApplicationAggregateResponse:
      type: object
      properties:
        groupField:
          type: string
          description: Grouped field
        groupFieldValue:
          type: string
          description: Grouped field value
        subGroups:
          type: array
          description: >-
            Sub-groups under the current group, if
            groupFields=assignedUser,applicationState, then the sub-group is the
            group of applicationState
          items:
            $ref: '#/components/schemas/ApplicationAggregateResponse'
        count:
          type: integer
          description: The number of applications currently grouped
    LoanApplicationSigner:
      required:
        - notificationType
        - reference
      type: object
      properties:
        reference:
          type: string
          description: Personal reference (national ID, SSN etc.) to identify the signatory
        notificationType:
          type: string
          description: Notification channel
          enum:
            - SMS
            - EMAIL
    LoanApplicationSignRequestInfo:
      type: object
      properties:
        signRequestId:
          type: string
          description: Sign request ID
        signStatus:
          type: string
          description: Status of the sign request
          enum:
            - UNSIGNED
            - SIGNED
        signTasks:
          type: array
          items:
            $ref: '#/components/schemas/LoanApplicationSignTask'
        applicationId:
          type: string
          description: Application ID
        documents:
          type: array
          description: List of document references to sign
          items:
            $ref: '#/components/schemas/DocumentReference'
    LoanApplicationSignRequest:
      required:
        - signers
      type: object
      properties:
        signers:
          type: array
          items:
            $ref: '#/components/schemas/LoanApplicationSigner'
        onTaskCompleteUrl:
          type: string
          description: URL to redirect to on sign task completed
        onTaskCancelUrl:
          type: string
          description: URL to redirect to on sign task cencelled
    LoanApplicationSignTask:
      allOf:
        - $ref: '#/components/schemas/SignTask'
        - type: object
          properties:
            documentIds:
              type: array
              description: Reference document IDs
              items:
                type: string
    ApplicationForGetAccountV8:
      type: object
      properties:
        id:
          type: string
          description: Application id
    GuaranteeV8PostRequest:
      required:
        - guaranteeAmount
        - guarantor
      type: object
      properties:
        guaranteeAmount:
          type: number
          description: Positive integer
        guarantorCategory:
          type: string
          description: Guarantor category
        guarantor:
          oneOf:
            - $ref: '#/components/schemas/IndividualGuarantorV8PostRequest'
            - $ref: '#/components/schemas/BusinessGuarantorV8PostRequest'
    GuaranteeV8Response:
      type: object
      properties:
        id:
          type: string
        hasAgreed:
          type: boolean
        agreementDate:
          type: string
          description: Agreement date, ISO 8601 standard
          format: datetime
          example: '2021-08-18T14:57:10.35+08:00'
        guaranteeAmount:
          type: number
          description: Positive integer
        guarantorCategory:
          type: string
          description: Guarantor category
        createTime:
          type: string
          description: Create time, ISO 8601 standard
          format: datetime
          example: '2021-08-18T14:57:10.35+08:00'
        updateTime:
          type: string
          description: Update time, ISO 8601 standard
          format: datetime
          example: '2021-08-18T14:57:10.35+08:00'
        guarantor:
          oneOf:
            - $ref: '#/components/schemas/IndividualGuarantorV8Response'
            - $ref: '#/components/schemas/BusinessGuarantorV8Response'
    IndividualGuarantorV8PostRequest:
      required:
        - birthDate
        - givenName
        - guarantorType
        - reference
        - referenceType
        - surname
      type: object
      properties:
        guarantorType:
          type: string
          description: Guarantor type
          example: INDIVIDUAL_GUARANTOR
        reference:
          type: string
          description: >-
            If referenceType is SSN, both CCYYMMDDNNNN and CCYYMMDD-NNNN are
            supported
          example: '193504049135'
        referenceType:
          type: string
          description: If the reference type is null, default value is SSN.
          default: SSN
          enum:
            - SSN
            - OTHERS
        givenName:
          type: string
        preferredName:
          type: string
        surname:
          type: string
        birthDate:
          type: string
          description: BirthDate, format yyyy-MM-dd
        nationality:
          type: string
          description: Country code (Uppercase two-letter ISO-3166 code. e.g. SE, FI)
        selfAssessedPEP:
          type: string
          description: Self assessed-PEP， the "NULL" will be used if not provided.
          default: 'NULL'
          enum:
            - 'NULL'
            - PEP
            - RELATED_TO_PEP
            - NOT_PEP
        selfAssessedPepDescription:
          type: string
          description: >-
            Description self assessed-PEP, only needed when selfAssessedPEP is
            not NULL.
        externalPepStatus:
          type: string
          enum:
            - PEP
            - NOT_PEP
        address:
          $ref: '#/components/schemas/AddressV8'
        email:
          type: string
          description: >-
            Matches the regular expression
            ^[_A-Za-z0-9-\+]+(\.[_A-Za-z0-9-]+)*@[A-Za-z0-9-]+(\.[A-Za-z0-9]+)*(\.[A-Za-z]{1,})$
          example: info@viljasolutions.com
        phone:
          type: string
          description: >-
            Phone number.It is mandatory when mobilePhone is empty,validate by
            google libphonenumber, refer to https://libphonenumber.appspot.com/
          example: '+468123456'
        mobilePhone:
          type: string
          description: >-
            Mobile number.It is mandatory when phone is empty,validate by google
            libphonenumber, refer to https://libphonenumber.appspot.com/
          example: '+468123456'
    BusinessGuarantorV8PostRequest:
      required:
        - guarantorType
        - smeId
      type: object
      properties:
        guarantorType:
          type: string
          description: Guarantor type
          example: BUSINESS_GUARANTOR
        smeId:
          type: string
          description: SME customer id
          example: 612ef1f7e2a7873f7b8cfefd
    IndividualGuarantorV8Response:
      type: object
      properties:
        guarantorType:
          type: string
          description: Guarantor type
          example: INDIVIDUAL_GUARANTOR
        reference:
          type: string
          description: >-
            Both CCYYMMDDNNNN and CCYYMMDD-NNNN are supported for the Swedish
            SSN
          example: '193504049135'
        referenceType:
          type: string
          description: If the reference type is null, default value is SSN.
          default: SSN
          enum:
            - SSN
            - OTHERS
        givenName:
          type: string
        preferredName:
          type: string
        surname:
          type: string
        birthDate:
          type: string
          description: BirthDate, format yyyy-MM-dd
        nationality:
          type: string
          description: Country code (Uppercase two-letter ISO-3166 code. e.g. SE, FI)
        selfAssessedPEP:
          type: string
          description: Self assessed PEP， the "NULL" will be used if not provided.
          default: 'NULL'
          enum:
            - 'NULL'
            - PEP
            - RELATED_TO_PEP
            - NOT_PEP
        selfAssessedPepDescription:
          type: string
          description: >-
            Description self assessed PEP, only needed when selfAssessedPEP is
            not NULL.
        externalPepStatus:
          type: string
          enum:
            - PEP
            - NOT_PEP
        address:
          $ref: '#/components/schemas/AddressV8'
        email:
          type: string
          description: >-
            Matches the regular expression
            ^[_A-Za-z0-9-\+]+(\.[_A-Za-z0-9-]+)*@[A-Za-z0-9-]+(\.[A-Za-z0-9]+)*(\.[A-Za-z]{1,})$
          example: info@viljasolutions.com
        phone:
          type: string
          description: >-
            Phone number, validate by google libphonenumber, refer to
            https://libphonenumber.appspot.com/
          example: '+468123456'
        mobilePhone:
          type: string
          description: >-
            Mobile number, validate by google libphonenumber, refer to
            https://libphonenumber.appspot.com/
          example: '+468123456'
        createTime:
          type: string
          description: Create time, ISO 8601 standard
          format: datetime
          example: '2021-08-18T14:57:10.35+08:00'
        updateTime:
          type: string
          description: Update time, ISO 8601 standard
          format: datetime
          example: '2021-08-18T14:57:10.35+08:00'
    BusinessGuarantorV8Response:
      type: object
      properties:
        guarantorType:
          type: string
          description: Guarantor type
          example: BUSINESS_GUARANTOR
        smeId:
          type: string
          description: SME customer id
          example: 612ef1f7e2a7873f7b8cfefd
        companyName:
          type: string
          description: Company name
          example: Vilja Solutions AB
        organizationNumber:
          type: string
          description: Organization number
          example: '5567447056'
    GuaranteeV8PatchRequest:
      type: object
      properties:
        guaranteeAmount:
          type: number
          description: Positive integer
        guarantorCategory:
          type: string
          description: Guarantor category
        guarantor:
          $ref: '#/components/schemas/IndividualGuarantorV8PatchRequest'
    AssetOtherTypePostRequest:
      type: object
      required:
        - type
      properties:
        type:
          type: string
          description: Asset type
          example: OTHER
          enum:
            - OTHER
            - MACHINE
        description:
          type: string
          description: Asset description
          example: A other asset
        dynamicFields:
          $ref: '#/components/schemas/VPDynamicFields'
        purpose:
          type: string
          description: Purpose of the asset
          example: COLLATERAL
          enum:
            - COLLATERAL
            - RENTAL
            - TRADE_IN
        valueExcludeVat:
          type: number
          description: Value of the asset excluding VAT
          example: 1000
        vatRate:
          type: number
          description: VAT rate
          example: 25
    AssetMachineTypePostRequest:
      type: object
      required:
        - type
      properties:
        type:
          type: string
          description: Asset type
          example: MACHINE
          enum:
            - OTHER
            - MACHINE
        description:
          type: string
          description: Asset description
          example: A machine
        dynamicFields:
          $ref: '#/components/schemas/VPDynamicFields'
        purpose:
          type: string
          description: Purpose of the asset
          example: purpose1
        valueExcludeVat:
          type: number
          description: Value of the asset excluding VAT
          example: 1000
        vatRate:
          type: number
          description: VAT rate
          example: 25
        referenceId:
          type: string
          description: Reference id
          example: '123456'
        referenceType:
          type: string
          description: Reference type
          example: '123456'
        residualAmount:
          type: number
          description: Residual amount
          example: 1000
        serviceAgreement:
          type: boolean
          description: Service agreement
          example: true
        insuranceAgreement:
          type: boolean
          description: Insurance agreement
          example: true
        downPaymentAmount:
          type: number
          description: Down payment amount
          example: 1000
    ApplicationV8PostRequest:
      type: object
      properties:
        applicationChannel:
          type: string
          description: Application Channel
          enum:
            - PHONE
            - BROKER
            - LETTER
            - WEB
        applicationState:
          $ref: '#/components/schemas/SMEApplicationState'
        appliedProductId:
          type: string
          description: >-
            The product Id, it should be provided from the defined products in
            VP platform.
          example: '1234567'
        appliedOfferId:
          type: string
          description: Optional, Specific offer ID in available loan offer list.
          example: '1'
        smeId:
          type: string
          description: The related SME customer Id of an application.
        externalReference:
          type: string
          description: The external reference in other system.
          example: x-1234567
        desiredAmount:
          type: number
          description: Desired Amount.
          example: 12345
        desiredPaybackTime:
          type: integer
          description: >-
            It is only required for the regular application, credit application
            does not support the field, it will return null.
          example: 36
        loanReason:
          type: string
          enum:
            - EXPANSION
            - INVENTORY
            - CASHFLOW
            - EQUIPMENT
            - REFINANCING
            - NONE
        loanReasonText:
          type: string
          description: Detail information about the loan reason.
          example: To improve our cashflow
        notificationEmail:
          type: string
          example: mats.nordgren@viljasolutions.com
        notificationMobileNumber:
          type: string
          example: '+46768494344'
        downgradeAccepted:
          type: boolean
        preferredDueDay:
          type: integer
          description: >-
            The preferred due day (range 1 ~ 31), only for the product
            configured with floating statement
          example: 15
        applicationComments:
          type: array
          description: Application notes, max length for each comment is 1048
          items:
            type: string
        approvedAmount:
          type: number
          description: Credit application does not support the field, it will return null.
          example: 12345
        approvedPaybackTime:
          type: integer
          description: >-
            24(months), credit application does not support the field, it will
            return null.
          example: 24
        decisionComment:
          type: string
          example: >-
            This application is rejected because we belive the paper industry is
            doomed
        riskClass:
          type: string
          example: NORMAL
          enum:
            - LOW
            - NORMAL
            - HIGH
        riskClassComment:
          type: string
          example: This company is harmless
        preferredDisbursementAccount:
          $ref: '#/components/schemas/DisbursementAccountForSME'
        startupFee:
          type: number
          description: The startup fee, positive value.
        serviceFee:
          type: number
          description: >-
            The manual service fee, positive integer. The product configuraiton
            will be used if the given value is null.
        statementChannel:
          type: string
          enum:
            - PAPER
            - ELECTRONIC_EMAIL_NOTIFICATION
            - ELECTRONIC_SMS_NOTIFICATION
            - ELECTRONIC_NO_NOTIFICATION
        statusUpdateDate:
          type: string
          description: The status updated date, the format is yyyy-MM-dd HH:mm:ss
          format: date
        assignedUser:
          type: string
          description: The assigned user to handle the application
        actualDecision:
          type: string
          enum:
            - APPROVED
            - REJECTED
            - INCOMPLETE
            - REFERRAL
        suggestion:
          type: string
          enum:
            - APPROVED
            - REJECTED
            - INCOMPLETE
            - REFERRAL
        rejectReasonCode:
          type: string
          description: Only 3 digits are supported. (001-009)
          example: '1'
        rejectReasonText:
          type: string
        extras:
          type: object
          additionalProperties:
            type: string
          description: Max length for each properties is 255.
        credits:
          type: array
          description: >-
            Existing credits with other banks that need to be considered in the
            application
          items:
            $ref: '#/components/schemas/CreditV8PostRequestBO'
        agreementSignatories:
          type: array
          description: >-
            The people who have been selected to sign one or more documents.
            Saved on application level, only editable until the application has
            been signed (by all signers) and becomes PN_SIGNED.
          items:
            $ref: '#/components/schemas/AgreementSignatoriesPostRequestBO'
        brokerName:
          type: string
          description: The broker name
        applicationCategory:
          type: string
          description: Application category, default value is NEW
          enum:
            - NEW
            - TOP_UP
        guarantees:
          type: array
          items:
            $ref: '#/components/schemas/GuaranteeV8PostRequest'
        externalPartyId:
          type: string
          description: >-
            External party should be connected to the applied product in LFP in
            Modules->External party.
        administrativeAreaName:
          type: string
          description: >-
            Administrative area should be allowed for the chosen external party
            in LFP in Modules->External party.
        salesPerson:
          type: string
          description: >-
            Sales person should be allowed for the chosen external party or
            chosen administrative area in LFP in Modules->External party.
        vatInformation:
          $ref: '#/components/schemas/VatInformation'
        residualAmount:
          type: number
          description: Residual amount
        residualAmountNotAllowToBeOverwrittenByRule:
          type: boolean
          description: Residual amount not allow to be overwritten by rule
        dynamicFields:
          $ref: '#/components/schemas/VPDynamicFields'
        assets:
          type: array
          items:
            oneOf:
              - $ref: '#/components/schemas/AssetOtherTypePostRequest'
              - $ref: '#/components/schemas/AssetMachineTypePostRequest'
      required:
        - applicationChannel
        - appliedProductId
        - smeId
        - desiredAmount
    ApplicationV8Response:
      required:
        - applicationChannel
        - appliedProductId
        - desiredAmount
        - smeId
      type: object
      properties:
        id:
          type: string
        reference:
          type: string
        applicationChannel:
          type: string
          description: Application Channel
          enum:
            - PHONE
            - BROKER
            - LETTER
            - WEB
        applicationState:
          $ref: '#/components/schemas/ApplicationStateV8'
        appliedProductId:
          type: string
          example: '1234567'
        smeId:
          type: string
          description: The generated SME customer Id.
        externalReference:
          type: string
          description: The external reference in other system.
          example: x-1234567
        createDate:
          type: string
          description: Create date, the format is yyyy-MM-dd HH:mm:ss.
          format: date
        updateDate:
          type: string
          description: Update date, the format is yyyy-MM-dd HH:mm:ss.
          format: date
        desiredAmount:
          type: number
          description: Desired Amount
          example: 12345
        desiredPaybackTime:
          type: integer
          description: 36(months), not supported now, it will always be null.
          example: 36
        loanReason:
          type: string
          enum:
            - EXPANSION
            - INVENTORY
            - CASHFLOW
            - EQUIPMENT
            - REFINANCING
            - NONE
        loanReasonText:
          type: string
          description: Detail information about the loan reason.
          example: To improve our cashflow
        notificationEmail:
          type: string
          example: mats.nordgren@viljasolutions.com
        notificationMobileNumber:
          type: string
          example: '+46768494344'
        downgradeAccepted:
          type: boolean
        preferredDueDay:
          type: integer
          description: >-
            The preferred due day (range 1 ~ 31), only for the product
            configured with floating statement
          example: 15
        applicationComments:
          type: array
          description: Application notes, max length for each comment is 1048
          items:
            type: string
        approvedAmount:
          type: number
          description: Credit application does not support the field, it will return null.
          example: 12345
        approvedPaybackTime:
          type: integer
          description: >-
            24(months), credit application does not support the field, it will
            return null.
          example: 24
        decisionComment:
          type: string
          example: >-
            This application is rejected because we belive the paper industry is
            doomed.
        riskClass:
          type: string
          example: NORMAL
          enum:
            - LOW
            - NORMAL
            - HIGH
        riskClassComment:
          type: string
          example: This company is harmless
        preferredDisbursementAccount:
          $ref: '#/components/schemas/DisbursementAccountForSME'
        manualDeltaInterestRate:
          type: number
          description: The interest rate be adjusted manually, e.g. 0.001, -0.001.
        startupFee:
          type: number
          description: The Startup fee, postive value.
        serviceFee:
          type: number
          description: >-
            The manual service fee, positive integer. The product configuraiton
            will be used if the given value is null.
        statementChannel:
          type: string
          enum:
            - PAPER
            - ELECTRONIC_EMAIL_NOTIFICATION
            - ELECTRONIC_SMS_NOTIFICATION
            - ELECTRONIC_NO_NOTIFICATION
        statusUpdateDate:
          type: string
          description: Loan status updated date, the format is yyyy-MM-dd HH:mm:ss.
          format: date
        assignedUser:
          type: string
          description: The assigned user to handle the application
        promissoryNoteSignedCheck:
          type: boolean
          description: If the promissory notes of the application are signed, return true.
        promissoryNoteVersionId:
          type: string
          description: Saved promissory note id.
        systemDeltaInterestRate:
          type: number
          description: The interest rate be adjusted by the system.
        accountId:
          type: string
          description: The related the accountId.
        reservedAccountNumber:
          type: string
          description: The related account number.
        actualDecision:
          type: string
          description: The actual decision after confirmed.
          enum:
            - APPROVED
            - REJECTED
            - INCOMPLETE
            - REFERRAL
        suggestion:
          type: string
          description: The suggested decision made by the system.
          enum:
            - APPROVED
            - REJECTED
            - INCOMPLETE
            - REFERRAL
        rejectReasonCode:
          type: string
          description: Only 3 digits are supported. (001-009)
          example: '1'
        rejectReasonText:
          type: string
        extras:
          type: object
          additionalProperties:
            type: string
          description: Max length for each properties is 255.
        documents:
          $ref: '#/components/schemas/LoanDocumentBO'
        preconditions:
          $ref: '#/components/schemas/PreconditionResponse'
        applicationCancelReasonType:
          type: string
          enum:
            - MISINFORMATION
            - FRAUD_ATTEMPT
            - CUSTOMER_DECLINED_OFFER
            - OTHER_REASON
        decisionMessage:
          $ref: '#/components/schemas/DecisionMessageForSME'
        credits:
          type: array
          items:
            $ref: '#/components/schemas/CreditV8ResponseBO'
        agreementSignatories:
          type: array
          description: >-
            The people who have been selected to sign one or more documents.
            Saved on application level, only editable until the application has
            been signed (by all signers) and becomes PN_SIGNED.
          items:
            $ref: '#/components/schemas/AgreementSignatoriesResponseBO'
        brokerName:
          type: string
          description: The broker name
        applicationCategory:
          type: string
          description: Application category
          enum:
            - NEW
            - TOP_UP
        guarantees:
          type: array
          items:
            $ref: '#/components/schemas/GuaranteeV8Response'
        administrativeAreaName:
          type: string
          description: >-
            Administrative area should be allowed for the chosen external party
            in LFP in Modules->External party.
        residualAmountType:
          $ref: '#/components/schemas/ResidualAmountType'
        residualAmount:
          type: number
          description: Residual amount
        residualAmountNotAllowToBeOverwrittenByRule:
          type: boolean
          description: Residual amount not allow to be overwritten by rule
        dynamicFields:
          $ref: '#/components/schemas/VPDynamicFields'
        assetIds:
          type: array
          items:
            type: string
          description: Asset ids
    GuaranteesV8Response:
      type: object
      properties:
        guarantees:
          type: array
          items:
            $ref: '#/components/schemas/GuaranteeV8Response'
    IndividualGuarantorV8PatchRequest:
      type: object
      properties:
        givenName:
          type: string
        preferredName:
          type: string
        surname:
          type: string
        birthDate:
          type: string
          description: BirthDate, format yyyy-MM-dd
        nationality:
          type: string
          description: Country code (Uppercase two-letter ISO-3166 code. e.g. SE, FI)
        selfAssessedPEP:
          type: string
          description: Self-assessed PEP， the "NULL" will be used if not provided.
          default: 'NULL'
          enum:
            - 'NULL'
            - PEP
            - RELATED_TO_PEP
            - NOT_PEP
        selfAssessedPepDescription:
          type: string
          description: >-
            Description self-assessed PEP, only needed when selfAssessedPEP is
            not NULL.
        externalPepStatus:
          type: string
          enum:
            - PEP
            - NOT_PEP
        address:
          $ref: '#/components/schemas/AddressV8'
        email:
          type: string
          description: >-
            Matches the regular expression
            ^[_A-Za-z0-9-\+]+(\.[_A-Za-z0-9-]+)*@[A-Za-z0-9-]+(\.[A-Za-z0-9]+)*(\.[A-Za-z]{1,})$
          example: info@viljasolutions.com
        phone:
          type: string
          description: >-
            Phone number.It is mandatory when mobilePhone is empty,validate by
            google libphonenumber, refer to https://libphonenumber.appspot.com/
          example: '+468123456'
        mobilePhone:
          type: string
          description: >-
            Mobile number.It is mandatory when phone is empty,validate by google
            libphonenumber, refer to https://libphonenumber.appspot.com/
          example: '+468123456'
    AddressV8:
      type: object
      properties:
        streetAddress:
          type: string
          description: Street address
        supplementaryStreetAddress:
          type: string
          description: Supplementary street address
        region:
          type: string
          description: Region
        zipCode:
          type: string
          description: Zip code
        city:
          type: string
          description: City
        country:
          type: string
          description: Country code (Uppercase two-letter ISO-3166 code. e.g. SE, FI)
        coAddress:
          type: string
          description: C/O address
        apartmentNumber:
          type: string
          description: Apartment number
        propertyNumber:
          type: string
          description: Property number
        buildingName:
          type: string
          description: Building name
        floorNumber:
          type: string
          description: Floor number
        complementingInformation:
          type: string
          description: Complementing information
    BrokerApplicationResponseV4:
      type: object
      properties:
        applicationId:
          type: string
          description: Application ID from broker.
        applicationResult:
          type: string
          description: |
            * RECEIVED Application has been received.
            * REJECTED Application has been rejected.
          enum:
            - RECEIVED
            - REJECTED
        rejectReasonCode:
          type: string
          description: Reject reason code.
        rejectReasonText:
          type: string
          description: Reject reason detail.
    BrokerApplicationUpdateResponseAPIV4:
      type: object
      properties:
        applicationResult:
          type: string
          description: |
            * RECEIVED Application has been received.
            * REJECTED Application has been rejected.
          enum:
            - RECEIVED
            - REJECTED
        rejectReasonCode:
          type: string
          description: Reject reason code.
        rejectReasonText:
          type: string
          description: Reject reason detail.
    LoanApplicantInformationV4:
      required:
        - employmentInfo
        - givenName
        - personalId
        - surName
      type: object
      properties:
        personalId:
          type: string
          description: >-
            The personalId of main applicant is required. The personalID of co
            applicant is required only when co applicant is included in the
            application. The co personalId should be different with the main. It
            requires the century. e.g. 193504049135
        givenName:
          type: string
        surName:
          type: string
        email:
          type: string
          description: Email format
        phonePrimary:
          type: string
          description: >-
            Phone number, at least one phone is required, matches the regular
            expression
            '(\+(?!46)[0-9]{5,})|((0046|0|\+46)([1-9][0-9]{0,2}[-|\/]{0,1}[0-9]{4,11}))
            ' for Sweden and '(0047|\\+47|47)?\\d{8}' for Norway
        phoneHome:
          type: string
          description: >-
            Phone number, at least one phone is required, matches the regular
            expression
            '(\+(?!46)[0-9]{5,})|((0046|0|\+46)([1-9][0-9]{0,2}[-|\/]{0,1}[0-9]{4,11}))
            ' for Sweden and '(0047|\\+47|47)?\\d{8}' for Norway
        propertyType:
          type: string
          description: >-
            Verified against configured values. By default [RENTED, OWNED,
            LIVEIN, HOUSE]
        propertyCost:
          type: number
          description: Positive number
        maritalStatus:
          type: string
          description: >-
            Verified against configured values. By default [MARRIED, SINGLE,
            DIVORCED, PARTNER, WIDOWED]
        children:
          type: integer
          description: >-
            The number of children, accept positive integer and automatically
            round digits
          format: int32
        address:
          $ref: '#/components/schemas/AddressInformationV4'
        employmentInfo:
          $ref: '#/components/schemas/EmploymentInformationV4'
        selfAssessedPEP:
          type: string
          enum:
            - 'NULL'
            - PEP
            - RELATED_TO_PEP
            - NOT_PEP
        selfAssessedPepDescription:
          type: string
          description: Only needed when selfAssessedPEP is not NULL
        nationality:
          type: string
          description: International 2-letter standard (ISO 3166-1 alpha-2)
        otherIncomes:
          type: array
          items:
            $ref: '#/components/schemas/OtherIncomeV4'
        educationLevel:
          type: string
          description: >-
            Verified against configured values. By default ["PRIMARY",
            "HIGH_SCHOOL", "COLLEGE_3_YEAR"]
    LoanApplicantForUpdateV4:
      type: object
      properties:
        givenName:
          type: string
        surName:
          type: string
        email:
          type: string
          description: Email format
        phonePrimary:
          type: string
          description: >-
            Phone number, at least one phone is required, matches the regular
            expression
            '(\+(?!46)[0-9]{5,})|((0046|0|\+46)([1-9][0-9]{0,2}[-|\/]{0,1}[0-9]{4,11}))
            ' for Sweden and '(0047|\\+47|47)?\\d{8}' for Norway
        phoneHome:
          type: string
          description: >-
            Phone number, at least one phone is required, matches the regular
            expression
            '(\+(?!46)[0-9]{5,})|((0046|0|\+46)([1-9][0-9]{0,2}[-|\/]{0,1}[0-9]{4,11}))
            ' for Sweden and '(0047|\\+47|47)?\\d{8}' for Norway
        propertyType:
          type: string
          description: >-
            Verified against configured values. By default [RENTED, OWNED,
            LIVEIN, HOUSE]
        propertyCost:
          type: number
          description: Positive number
        maritalStatus:
          type: string
          description: >-
            Verified against configured values. By default [MARRIED, SINGLE,
            DIVORCED, PARTNER, WIDOWED]
        children:
          type: integer
          description: >-
            The number of children, accept positive integer and automatically
            round digits
          format: int32
        address:
          $ref: '#/components/schemas/AddressInformationForUpdateV4'
        employmentInfo:
          $ref: '#/components/schemas/EmploymentInformationForUpdateV4'
        selfAssessedPEP:
          type: string
          enum:
            - 'NULL'
            - PEP
            - RELATED_TO_PEP
            - NOT_PEP
        selfAssessedPepDescription:
          type: string
          description: Only needed when selfAssessedPEP is not NULL
        nationality:
          type: string
          description: International 2-letter standard (ISO 3166-1 alpha-2)
        otherIncomes:
          type: array
          items:
            $ref: '#/components/schemas/OtherIncomeV4'
        educationLevel:
          type: string
          description: >-
            Verified against configured values. By default ["PRIMARY",
            "HIGH_SCHOOL", "COLLEGE_3_YEAR"]
    AddressInformationV4:
      required:
        - address
        - city
        - postalCode
      type: object
      properties:
        careOf:
          type: string
          description: Maxium length is 255
        address:
          type: string
          description: Maxium length is 255
        postalCode:
          type: string
          description: >-
            ZIP code. The format varies by country - for example, five digits
            for SE.
        city:
          type: string
          description: Maxium length is 255
        country:
          type: string
          description: International 2-letter standard (ISO 3166-1 alpha-2)
        region:
          type: string
          description: Maxium length is 255
        apartmentNumber:
          type: string
          description: Maxium length is 255
        propertyNumber:
          type: string
          description: Maxium length is 255
        buildingName:
          type: string
          description: Maxium length is 255
        floorNumber:
          type: string
          description: Maxium length is 255
        complementingInformation:
          type: string
          description: Maxium length is 255
    AddressInformationForUpdateV4:
      type: object
      properties:
        careOf:
          type: string
          description: Maxium length is 255
        address:
          type: string
          description: Maxium length is 255
        postalCode:
          type: string
          description: >-
            ZIP code. The format varies by country - for example, five digits
            for SE.
        city:
          type: string
          description: Maxium length is 255
        country:
          type: string
          description: International 2-letter standard (ISO 3166-1 alpha-2)
        region:
          type: string
          description: Maxium length is 255
        apartmentNumber:
          type: string
          description: Maxium length is 255
        propertyNumber:
          type: string
          description: Maxium length is 255
        buildingName:
          type: string
          description: Maxium length is 255
        floorNumber:
          type: string
          description: Maxium length is 255
        complementingInformation:
          type: string
          description: Maxium length is 255
    EmploymentInformationV4:
      required:
        - employmentType
        - salary
      type: object
      properties:
        employer:
          type: string
          description: >
            Employment info, when employmentType is
            STUDENT/RETIRED/EARLY_RETIRED/NO_WORK, no employer needed, only
            salary parameter is the mandatory; When employmentType is others,
            employer and salary are mandatory
        employmentType:
          type: string
          description: >-
            Verified against configured values. By default ["FULL", "TRIAL",
            "RETIRED", "HOURLY", "EARLY_RETIRED", "PROJECT", "SELF_EMPLOYED",
            "COMPANY_OWNER", "NO_WORK", "STUDENT", "TEMPORARY", "TIME_OFF",
            "PART_TIME"]
        salary:
          type: number
          description: Positive number
        netSalary:
          type: number
          description: Positive number
        employedAt:
          type: string
          description: Format is yyyy-MM-dd, should be before employerEndDate
        employerEndDate:
          type: string
          description: >-
            Format is yyyy-MM-dd, should be after employedAt, and only works
            when employmentType is PROJECT or TEMPORARY
        referencePhone:
          type: string
          description: >-
            Employer phone, it is mandatory when type not in
            RETIRED,EARLY_RETIRED,NO_WORK,STUDENT. Matches the regular
            expression
            '(\+(?!46)[0-9]{5,})|((0046|0|\+46)([1-9][0-9]{0,2}[-|\/]{0,1}[0-9]{4,11}))
            ' for Sweden and '(0047|\\+47|47)?\\d{8}' for Norway
    EmploymentInformationForUpdateV4:
      type: object
      properties:
        employer:
          type: string
          description: >
            Employment info, when employmentType is
            STUDENT/RETIRED/EARLY_RETIRED/NO_WORK, no employer needed, only
            salary parameter is the mandatory; When employmentType is others,
            employer and salary are mandatory
        employmentType:
          type: string
          description: >-
            Verified against configured values. By default ["FULL", "TRIAL",
            "RETIRED", "HOURLY", "EARLY_RETIRED", "PROJECT", "SELF_EMPLOYED",
            "COMPANY_OWNER", "NO_WORK", "STUDENT", "TEMPORARY", "TIME_OFF",
            "PART_TIME"]
        salary:
          type: number
          description: Positive number
        netSalary:
          type: number
          description: Positive number
        employedAt:
          type: string
          description: Format is yyyy-MM-dd, should be before employerEndDate
        employerEndDate:
          type: string
          description: >-
            Format is yyyy-MM-dd, should be after employedAt, and only works
            when employmentType is PROJECT or TEMPORARY
        referencePhone:
          type: string
          description: >-
            Employer phone, it is mandatory when type not in
            RETIRED,EARLY_RETIRED,NO_WORK,STUDENT. Matches the regular
            expression
            '(\+(?!46)[0-9]{5,})|((0046|0|\+46)([1-9][0-9]{0,2}[-|\/]{0,1}[0-9]{4,11}))
            ' for Sweden and '(0047|\\+47|47)?\\d{8}' for Norway
    BrokerApplicationAcceptResponseV4:
      type: object
      properties:
        applicationDecision:
          type: string
          description: |
            * APPROVED Offer has been accepted.
          enum:
            - APPROVED
    BrokerApplicationRejectResponseV4:
      type: object
      properties:
        applicationDecision:
          type: string
          description: |
            * REJECTED Offer has been rejected.
          enum:
            - REJECTED
    DisbursementAccountForBrokerV4:
      required:
        - number
        - type
      type: object
      properties:
        type:
          type: string
          enum:
            - SE-CLEARING
            - NO-CLEARING
            - SE-BG
            - SE-PG
            - IBAN
        number:
          type: string
      description: >
        If number has value, type is mandatory

        * SE-CLEARING, Swedish bank account number, refer to
        https://www-2.danskebank.com/link/Bankernaskontonummer. Support Sweden
        only. e.g. 9551-1112110

        * NO-CLEARING, Norway bank account number. Support Norway only. e.g.
        8276 01 00435

        * SE-BG, Bankgiro number, refer to https://www.bankgirot.se. Support
        Sweden only. e.g. 10101020

        * SE-PG, Plusgiro number, refer to https://www.plusgirot.se. Support
        Sweden only. e.g. 4101010

        * IBAN, International Bank Account Number, refer to
        https://www.investopedia.com/terms/i/iban.asp. Support Finland and
        Nederland only. e.g. FI2112345600000785
    OtherIncomeV4:
      type: object
      properties:
        type:
          type: string
          description: >-
            Verified against configured values. By default ["RENTAL",
            "INTEREST", "DIVIDENT", "CAPITAL", "SOCIAL_BENEFITS"]
        period:
          type: string
          description: >-
            Verified against configured values. By default ["WEEKLY",
            "BIWEEKLY", "MONTHLY", "QUATERLY", "YEARLY"]
        value:
          type: number
    LoanBrokerApplicationInformationV4:
      type: object
      properties:
        applicationId:
          type: string
          description: Unique sequence, the maxium length is 255.
        desiredProductId:
          type: string
          description: >-
            Specific product id in available product list. If empty, the default
            one will be used.
        desiredOfferId:
          type: string
          description: Optional, Specific offer ID in available loan offer list.
        desiredAmount:
          type: integer
          description: Desired loan amount.
        desiredPaybackTime:
          type: integer
          description: Applied tenor.
        amountToSolve:
          type: number
          description: Part of the loan that needs to be paid for other loans.
        statementChannel:
          type: string
          description: Reserved field. (Default value is PAPER)
          enum:
            - PAPER
            - ELECTRONIC_EMAIL_NOTIFICATION
            - ELECTRONIC_SMS_NOTIFICATION
            - ELECTRONIC_NO_NOTIFICATION
        disbursementAccount:
          $ref: '#/components/schemas/DisbursementAccountForBrokerV4'
        comments:
          type: array
          description: Application notes, max length for each comment is 1048.
          items:
            type: string
        credits:
          type: array
          items:
            $ref: '#/components/schemas/ExistingCreditInformationV4'
        mainApplicant:
          $ref: '#/components/schemas/LoanApplicantInformationV4'
        coApplicant:
          $ref: '#/components/schemas/LoanApplicantInformationV4'
        campaignReference:
          type: string
          description: Reserved field, max length is 255.
        extras:
          type: object
          additionalProperties:
            type: string
          description: Max length for each properties is 255.
        preferredDueDay:
          type: integer
          description: >-
            The preferred due day (range 1 ~ 31), only for the product
            configured with floating statement
        downgradeAccepted:
          type: boolean
          description: >-
            Accept downgrade or not. Only valid if original applied amount has
            been rejected.
        downgradeAmount:
          type: number
          description: Accept downgrade amount.
        loanReasons:
          type: array
          items:
            type: string
            description: >-
              Reason for credit, verified against configured values. By default
              [CAR, RENOVATION, OTHER]
        dynamicFields:
          type: object
          additionalProperties:
            type: string
          description: 10.0+ is available
        residualAmount:
          type: number
          description: Residual amount
        residualAmountNotAllowToBeOverwrittenByRule:
          type: boolean
          description: Residual amount not allow to be overwritten by rule
      required:
        - applicationId
        - desiredAmount
        - desiredPaybackTime
        - mainApplicant
    LoanBrokerApplicationInformationForUpdateV4:
      type: object
      properties:
        desiredProductId:
          type: string
          description: >-
            Specific product id in available product list. If empty, the default
            one will be used.
        desiredOfferId:
          type: string
          description: Optional, Specific offer ID in available loan offer list.
        desiredAmount:
          type: integer
          description: Desired loan amount.
        desiredPaybackTime:
          type: integer
          description: Applied tenor.
        amountToSolve:
          type: number
          description: Part of the loan that needs to be paid for other loans.
        statementChannel:
          type: string
          description: Reserved field.
          enum:
            - PAPER
            - ELECTRONIC_EMAIL_NOTIFICATION
            - ELECTRONIC_SMS_NOTIFICATION
            - ELECTRONIC_NO_NOTIFICATION
        disbursementAccount:
          $ref: '#/components/schemas/DisbursementAccountForBrokerV4'
        comments:
          type: array
          description: Application notes, max length for each comment is 1048.
          items:
            type: string
        credits:
          type: array
          items:
            $ref: '#/components/schemas/ExistingCreditInformationV4'
        mainApplicant:
          $ref: '#/components/schemas/LoanApplicantForUpdateV4'
        coApplicant:
          $ref: '#/components/schemas/LoanApplicantForUpdateV4'
        campaignReference:
          type: string
          description: Reserved field, max length is 255.
        extras:
          type: object
          additionalProperties:
            type: string
          description: Max length for each properties is 255.
        preferredDueDay:
          type: integer
          description: >-
            The preferred due day (range 1 ~ 31), only for the product
            configured with floating statement
        downgradeAccepted:
          type: boolean
          description: >-
            Accept downgrade or not. Only valid if original applied amount has
            been rejected.
        downgradeAmount:
          type: number
          description: Accept downgrade amount.
        loanReasons:
          type: array
          items:
            type: string
            description: >-
              Reason for credit, verified against configured values. By default
              [CAR, RENOVATION, OTHER]
        dynamicFields:
          type: object
          additionalProperties:
            type: string
          description: 10.0+ is available
        residualAmount:
          type: number
          description: Residual amount
        residualAmountNotAllowToBeOverwrittenByRule:
          type: boolean
          description: Residual amount not allow to be overwritten by rule
    ExistingCreditInformationV4:
      type: object
      properties:
        sum:
          type: number
          description: Loan amount.
        rate:
          type: number
          description: Interest rate.
        paybackTime:
          type: integer
          description: Remaining tenor.
        creditor:
          type: string
          description: Loan company.
        typeOfCredit:
          type: string
          description: >-
            Verified against configured values. By default [HOUSE_MORTGAGE,
            CREDIT_CARD, HIRE_PURCHASE, UNSECURED, OTHER, APARTMENT_MORTGAGE,
            STUDENT_LOAN, LOAN_COMMITMENT, CAR_LOAN]
        externalLoanAccountNumber:
          type: string
          description: External loan account number.
        validForCollateral:
          type: boolean
          description: Valid for collateral.
        amortization:
          type: number
          description: Amortization.
        monthlyCost:
          type: number
          description: Monthly cost.
        receiverType:
          $ref: '#/components/schemas/PaymentAccountType'
        receiverAccount:
          type: string
          description: If receiverType has value, receiverAccount is mandatory
        messageInfo:
          maxLength: 119
          type: string
          description: >-
            Either messageInfo or ocrReference is mandatory when receiverType is
            SE-BG/SE-PG.</br> If the receiverType is SE-CLEARING, you can input
            messageInfo and messageInfo is not mandatory, the max length of
            messageInfo is 14.
        ocrReference:
          maxLength: 25
          type: string
          description: >-
            Either messageInfo or ocrReference is mandatory when receiverType is
            SE-BG/SE-PG
        needSettle:
          type: boolean
        settleAmount:
          type: number
          description: settleAmount is mandatory when needSettle is true
      description: At least one of sum,rate,creditor and monthlyCost should be filed
    RevolvingBrokerApplicationInformationV4:
      required:
        - applicant
        - applicationId
        - desiredCreditLimit
      type: object
      properties:
        applicationId:
          type: string
          description: Unique sequence, the maxium length is 255.
        desiredProductId:
          type: string
          description: >-
            Specific product id in available product list. If empty, the default
            one will be used.
        desiredCreditLimit:
          type: number
          description: Desired credit limit.
        amountToSolve:
          type: number
          description: Part of the loan that needs to be paid for other loans.
        statementChannel:
          type: string
          description: Reserved field. (Default value is PAPER)
          enum:
            - PAPER
            - ELECTRONIC_EMAIL_NOTIFICATION
            - ELECTRONIC_SMS_NOTIFICATION
            - ELECTRONIC_NO_NOTIFICATION
        disbursementAccount:
          $ref: '#/components/schemas/DisbursementAccountForBrokerV4'
        comments:
          type: array
          description: Application notes, max length for each comment is 1048.
          items:
            type: string
        credits:
          type: array
          items:
            $ref: '#/components/schemas/ExistingCreditInformationV4'
        applicant:
          $ref: '#/components/schemas/LoanApplicantInformationV4'
        extras:
          type: object
          additionalProperties:
            type: string
          description: Max length for each properties is 255.
        downgradeAccepted:
          type: boolean
          description: >-
            Accept downgrade or not. Only valid if original applied amount has
            been rejected.
        downgradeAmount:
          type: number
          description: Accept downgrade amount.
        loanReasons:
          type: array
          items:
            type: string
            description: >-
              Reason for credit, verified against configured values. By default
              [CAR, RENOVATION, OTHER]
    RevolvingBrokerApplicationInformationForUpdateV4:
      type: object
      properties:
        desiredCreditLimit:
          type: number
          description: Desired credit limit.
        amountToSolve:
          type: number
          description: Part of the loan that needs to be paid for other loans.
        statementChannel:
          type: string
          description: Reserved field.
          enum:
            - PAPER
            - ELECTRONIC_EMAIL_NOTIFICATION
            - ELECTRONIC_SMS_NOTIFICATION
            - ELECTRONIC_NO_NOTIFICATION
        disbursementAccount:
          $ref: '#/components/schemas/DisbursementAccountForBrokerV4'
        comments:
          type: array
          description: Application notes, max length for each comment is 1048.
          items:
            type: string
        credits:
          type: array
          items:
            $ref: '#/components/schemas/ExistingCreditInformationV4'
        applicant:
          $ref: '#/components/schemas/LoanApplicantForUpdateV4'
        extras:
          type: object
          additionalProperties:
            type: string
          description: Max length for each properties is 255.
        downgradeAccepted:
          type: boolean
          description: >-
            Accept downgrade or not. Only valid if original applied amount has
            been rejected.
        downgradeAmount:
          type: number
          description: Accept downgrade amount.
        loanReasons:
          type: array
          items:
            type: string
            description: >-
              Reason for credit, verified against configured values. By default
              [CAR, RENOVATION, OTHER]
    CommentRequestV4:
      required:
        - comment
      type: object
      properties:
        comment:
          type: string
          description: Application notes, max length for each comment is 1048.
    DenialRequestV4:
      type: object
      properties:
        reason:
          type: string
          description: |
            * DUPLICATED Duplicated application.
            * OTHER Other reasons, refer to reasonOther.
          enum:
            - DUPLICATED
            - OTHER
        reasonOther:
          type: string
    OfferResponseV4:
      required:
        - id
      type: object
      properties:
        id:
          type: string
          description: >-
            The id is defined by the broker, it will be use as brokerOfferID in
            the PATCH api to update the offer
    LoanNotificationRequestV4:
      required:
        - status
      type: object
      properties:
        status:
          type: string
          description: >
            * WITHDRAWN Application has been rejected. (Offer has been created)

            * TURNED_DOWN Application has been turned down. (Offer has been
            rejected by CSR from VP system)

            * CONTRACT_CREATED Promissory note has been created. (Offer has been
            accepted by CSR from VP system)

            * CONTRACT_SENT Promissory note has been sent to customer.

            * CONTRACT_SIGNED Promissory note has been signed by customer.

            * ACCOUNT_CREATED Loan account has been created.

            * LOAN_PAID Loan paid.
          enum:
            - WITHDRAWN
            - TURNED_DOWN
            - CONTRACT_CREATED
            - CONTRACT_SENT
            - CONTRACT_SIGNED
            - ACCOUNT_CREATED
            - LOAN_PAID
        loanPaidAmount:
          type: number
          description: Paid amount.
        signUrl:
          type: string
          description: >-
            The url of e-sign, when status is CONTRACT_SENT and choose E-sign to
            apply the application.
    LoanOfferRequestV4:
      required:
        - amortizeLength
        - interestRateNominal
        - loanAmount
        - offerType
        - preconditions
      type: object
      properties:
        offerType:
          type: string
          enum:
            - ANNUITY
            - STRAIGHT
        amortizeLength:
          type: integer
          description: Applied tenor.
        loanAmount:
          type: integer
          description: Applied amount.
        interestRateNominal:
          type: number
          description: Total interest rate.
        interestRateEffective:
          type: number
          description: Effective interest rate.
        monthlyCostFirst:
          type: number
          description: The monthly cost of first month.
        setupFee:
          type: number
          description: Startup fee.
        administrationFee:
          type: number
          description: Statement fee.
        directDebitFee:
          type: number
          description: Direct debit fee.
        preconditions:
          type: array
          items:
            $ref: '#/components/schemas/LoanPreconditionV4'
        annuityAmount:
          type: number
          description: Annuity amount.
        fixedAmortizationAmount:
          type: number
          description: Fixed amortization amount.
    LoanPreconditionV4:
      required:
        - applicant
        - preconditionType
      type: object
      properties:
        applicant:
          type: string
          description: |
            * MAIN Main applicant.
            * CO Co applicant.
          enum:
            - MAIN
            - CO
        preconditionType:
          type: string
    RevolvingNotificationRequestV4:
      required:
        - status
      type: object
      properties:
        status:
          type: string
          description: >
            * WITHDRAWN Application has been rejected. (Offer has been created)

            * TURNED_DOWN Application has been turned down. (Offer has been
            rejected by CSR from VP system)

            * CONTRACT_CREATED Promissory note has been created. (Offer has been
            accepted by CSR from VP system)

            * CONTRACT_SENT Promissory note has been sent to customer.

            * CONTRACT_SIGNED Promissory note has been signed by customer.

            * ACCOUNT_CREATED Revolving account has been created.
          enum:
            - WITHDRAWN
            - TURNED_DOWN
            - CONTRACT_CREATED
            - CONTRACT_SENT
            - CONTRACT_SIGNED
            - ACCOUNT_CREATED
        creditLimit:
          type: number
          description: Credit limit.
        signUrl:
          type: string
          description: >-
            The url of e-sign, when status is CONTRACT_SENT and choose E-sign to
            apply the application.
    RevolvingOfferRequestV4:
      required:
        - creditLimit
        - interestRateNominal
        - offerType
        - preconditions
      type: object
      properties:
        offerType:
          type: string
          enum:
            - CREDIT
        creditLimit:
          type: number
          description: Credit limit.
        minAmountToPay:
          type: number
          description: Minimum amount to pay.
        minPercentToPay:
          type: number
          description: Minimum percent to pay.
        interestRateNominal:
          type: number
          description: Total interest rate.
        trancheFeeAmount:
          type: number
          description: Tranche fee amount.
        trancheFeeRate:
          type: number
          description: Tranche fee rate.
        reminderFee:
          type: number
          description: Reminder fee.
        latePaymentFee:
          type: number
          description: Late payment fee.
        latePaymentInterest:
          type: number
          description: Late payment interest.
        startupFee:
          type: number
          description: Startup fee.
        statementFee:
          type: number
          description: Statement fee.
        directDebitFee:
          type: number
          description: Direct debit fee.
        preconditions:
          type: array
          items:
            $ref: '#/components/schemas/RevolvingPreconditionV4'
    RevolvingPreconditionV4:
      required:
        - preconditionType
      type: object
      properties:
        preconditionType:
          type: string
    ErrorMessage:
      required:
        - message
        - type
      type: object
      properties:
        type:
          type: string
        message:
          type: string
        translationKey:
          $ref: '#/components/schemas/ErrorMessageTranslationKey'
    ValidationMessage:
      required:
        - message
        - valid
      type: object
      properties:
        valid:
          type: boolean
        message:
          type: string
    ErrorMessageTranslationKey:
      type: string
      description: Translation key to enabling translation of the error message
      enum:
        - error.unsupportedField
        - error.serverError
        - error.parsingError
        - error.unknownError
        - error.coupon.fetchFailed
        - error.mandateInfo.fetchFailed
        - error.licenses.fetchFailed
        - error.license.twoWayMessage.notEnabled
        - error.configuration.fetchFailed
        - error.businessCheck.customerFetchFailed
        - error.businessCheck.underageCustomerForbidden
        - error.businessCheck.illegalBirthday.unknownAgeForbidden
        - error.businessCheck.personStatus.deceasedForbidden
        - error.businessCheck.personStatus.emigratedForbidden
        - error.businessCheck.personStatus.statusLockedForbidden
        - error.businessCheck.personStatus.protectedAddressForbidden
        - error.businessCheck.personStatus.technicallyDeRegisteredForbidden
        - error.businessCheck.personStatus.ssnDeRegisteredForbidden
        - error.person.notFound
        - error.customerId.invalid
        - error.customer.sanctionsSuspect
        - error.customer.notFound
        - error.customer.alreadyExists
        - error.customer.ssn.invalid
        - error.customer.givenName.required
        - error.customer.givenName.invalid
        - error.customer.middleName.invalid
        - error.customer.surname.required
        - error.customer.surname.invalid
        - error.customer.email.invalid
        - error.customer.phone.invalid
        - error.customer.mobilePhone.invalid
        - error.customer.contactChannel.notAllowed
        - error.customer.contactChannel.notMatchContactInfo
        - error.customer.illegalBirthday
        - error.address.streetAddress.invalid
        - error.address.country.invalid
        - error.address.zipCode.invalid
        - error.address.city.invalid
        - error.address.coAddress.invalid
        - error.address.housingCode.invalid
        - error.address.invalid
        - error.selfAssessedPep.invalid
        - error.fatca.countryCode.empty
        - error.fatca.countryCode.invalid
        - error.fatca.countryCode.duplicated
        - error.fatca.countryCode.exceedMaxLimit
        - error.fatca.tin.usa.onlyNineDigitAllowed
        - error.fatca.tin.empty
        - error.fatca.tin.unnecessarilyFilled
        - error.fatca.tin.lengthOutOfRange.from3To255
        - error.fatca.none.onlyOneForeignTaxationAllowed
        - error.fatca.deleted
        - error.fatca.invalid
        - error.externalBankAccount.required
        - error.externalBankAccount.invalid
        - error.externalBankAccount.identifiers.empty
        - error.externalBankAccount.alreadyExists
        - error.externalBankAccount.notValidated
        - error.externalBankAccount.notFound
        - error.externalBankAccount.clearingNumber.required
        - error.externalBankAccount.clearingNumber.invalid
        - error.externalBankAccount.accountNumber.required
        - error.externalBankAccount.accountNumber.invalid
        - error.externalBankAccount.type.required
        - error.externalBankAccount.type.invalid
        - error.questionnaire.level.invalid
        - error.questionnaire.notFound
        - error.questionnaire.id.empty
        - error.questionnaire.id.invalid
        - error.questionnaire.answer.creationFailed
        - error.questionnaire.accountNotBelongToCustomer
        - error.secureMessageId.invalid
        - error.secureMessage.creationFailed
        - error.secureMessage.notFound
        - error.secureMessage.responseNotAllowed
        - error.secureMessage.notBelongToCustomer
        - error.secureMessage.notBelongToCompanyRepresentative
        - error.companyRepresentative.notFound
        - error.legalEntity.notFound
        - error.legalEntityOwner.notFound
        - error.legalEntityOwner.deleted
        - error.legalEntityOwner.deletionFailed
        - error.legalEntityOwner.ssn.alreadyAssignedToLegalEntity
        - error.legalEntityOwner.ssn.invalid
        - error.legalEntityOwner.ssn.updated
        - error.legalEntityOwner.sanctionsSuspect
        - error.legalEntityOwner.hasTrapets.needsApprove
        - error.legalEntityOwner.email.invalid
        - error.legalEntityOwner.telephone.invalid
        - error.legalEntityOwner.givenName.invalid
        - error.legalEntityOwner.middleName.invalid
        - error.legalEntityOwner.surname.invalid
        - error.legalEntityOwner.ownership.notInRange
        - error.legalEntityOwner.birthDate.empty
        - error.legalEntityOwner.birthDate.futureDate
        - error.legalEntityOwner.birthDate.beforeMinDate
        - error.legalEntityOwner.pep.required
        - error.legalEntityOwner.fatca.required
        - error.engagementReport.date.invalidFormat
        - rror.engagementReport.date.shouldNotBeFuture
        - error.engagementReport.creationFailed
        - error.engagementReport.notFound
        - error.engagementReport.file.notFound
        - error.yearlySummaryReport.notFound
        - error.yearlySummaryReport.file.notFound
        - error.product.notFound
        - error.product.disabled
        - error.productId.required
        - error.product.id.invalid
        - error.product.accountHolderId.required
        - error.product.intendedForCompanies
        - error.product.intendedForPrivateCustomers
        - error.accountId.invalid
        - error.account.nickname.invalid
        - error.account.transaction.amount.required
        - error.account.transaction.amount.mustBeGreaterThanZero
        - error.account.transaction.amount.twoDigitAllowed
        - error.account.transactionId.invalid
        - error.account.transactions.startDateBeforeEndDate
        - error.account.transactions.illegalDateFormat
        - error.account.pendingTransaction.canceling.customerIsNotCreator
        - error.account.pendingTransaction.canceling.hasBeenProcessed
        - error.account.externalAccountId.required
        - error.account.externalAccountId.invalid
        - error.account.notFound
        - error.account.creationFailed
        - error.account.alreadyClosed
        - error.account.canNotBeClosed
        - error.account.canNotBeReinvested
        - error.account.prohibiting
        - error.account.holder.notFound
        - error.account.holderProhibitedForClosure
        - error.account.holderProhibitedForWithdrawal
        - error.account.holderProhibitedForTransfer
        - error.account.closureFailed
        - error.account.closure.invalidFrozenStatus
        - error.account.closure.14DaysResignationPeriodEnded
        - error.account.closure.balanceDoesNotCoverWithdrawalFee
        - error.account.closure.forbiddenForMultipleGuardiansAccount
        - error.account.noticeFailed
        - error.account.notice.notInActiveStatus
        - error.account.notice.alreadyGiven
        - error.account.notice.notValidForNotice
        - error.account.notice.balanceDoesNotCoverWithdrawalFee
        - error.account.withdrawalFailed
        - error.account.withdrawal.requestId.required
        - error.account.withdrawal.requestId.duplicated
        - error.account.withdrawal.requestId.lengthOf255Exceeded
        - error.account.withdrawal.paymentChannelId.invalid
        - error.account.withdrawal.accountNotInActiveStatus
        - >-
          error.account.withdrawal.useExternalBankAccountOrSerialIdOfPredefinedExternalBankAccount
        - >-
          error.account.withdrawal.externalBankAccountOrSerialIdOfPredefinedExternalBankAccountRequired
        - error.account.withdrawal.note.lengthOf255Exceeded
        - error.account.withdrawal.insufficientBalance
        - error.account.withdrawal.notAllowed
        - error.account.withdrawal.amount.invalid
        - error.account.withdrawal.accountState.invalid
        - error.account.withdrawal.forbiddenForMultipleGuardiansAccount
        - error.account.withdrawal.delayedLongerThanDuration
        - error.account.withdrawal.delayedLongerThanNotice
        - error.account.withdrawal.customerDeceased
        - error.account.withdrawal.bankName.notFound
        - error.account.withdrawal.prohibitedOrExternalBankAccountInvalid
        - error.account.withdrawal.pendingWithdrawalExists
        - error.account.withdrawal.pendingClosureExists
        - error.account.withdrawal.productNotAllowed
        - error.account.withdrawal.frozenAccountNotAllowed
        - error.account.transfer.accountFrom.notFound
        - error.account.transfer.accountTo.notFound
        - error.account.transfer.idOfToAccount.required
        - error.account.transfer.noteForFromAccount.lengthOf30Exceeded
        - error.account.transfer.noteForToAccount.lengthOf30Exceeded
        - error.account.transferFailed
        - error.account.transfer.insufficientBalance
        - error.account.transfer.amount.invalid
        - error.authenticationFailed
        - error.authenticationVerificationFailed
        - error.userNotAuthorized
        - error.operationForbidden
        - error.requestFrequency.customerBlocked
        - error.requestFrequency.ipBlocked
        - error.account.noFound
        - error.account.operationCharges.operation.invalid
        - error.account.operationCharges.parameters.notAllRequiredFilled
        - error.account.operationBetweenTheSameAccounts
        - error.customer.noFound
        - error.customer.notExists
        - error.customer.creationFailed
        - error.prohibitingInfo.notFound.accessProhibited
        - error.prohibiting.customer.inactive
        - error.prohibiting.customer.blockedWithdrawal
        - error.prohibiting.loginProhibited
        - error.token.accessDeniedToCompanyRepresentative
        - error.token.accessDeniedToLegalEntity
        - error.token.accessDeniedToCustomer
        - error.token.accessDeniedToUnderageCustomer
        - error.token.accessDeniedToAccount
        - error.token.accessDeniedToAccountTo
        - error.token.renewFailed
        - error.token.expired
        - error.token.invalid
        - error.authorization.expiredOrNotStartedForSsn
        - error.secureMessageId.required
        - error.reportDate.required
        - error.customerType.required
        - error.customerType.invalid
        - error.accountHolderId.required
        - error.accountHolderId.invalid
        - error.sortOrder.invalid
        - error.authenticationStatus.invalid
        - error.authenticationType.invalid
        - error.orderRef.invalid
        - error.ssn.invalid
        - error.storage.documentId.invalid
        - error.storage.multipartFormDataBody.required
        - error.externalParty.notFound
        - error.externalParty.notAllowed
        - error.externalParty.productNotAllowed
    href:
      type: object
      properties:
        href:
          type: string
    AccountInfo:
      type: object
      properties:
        id:
          type: string
        accountNumber:
          type: string
          description: Account number
        ocrNumber:
          type: string
          description: Account's ocr number
        nickName:
          type: string
          description: Nick name
        type:
          type: string
          description: Account type
          enum:
            - DEPOSIT
            - REGULAR_LOAN
            - CREDIT_LOAN
        extraInfos:
          type: object
          additionalProperties:
            type: string
          description: >-
            Different type accounts have different extra info, deposit accounts
            have 'amount', loan accounts have 'remainingPrincipal',credit
            accounts have 'creditLimit' and 'remainingPrincipal'
    AddressForPatch:
      type: object
      properties:
        streetAddress:
          type: string
          description: Street address
        zipCode:
          type: string
          description: Zip code
        city:
          type: string
          description: City
        country:
          type: string
          description: Country code (e.g. SE, FI)
        region:
          type: string
          description: State/Province/Region
        coAddress:
          type: string
          description: C/O address
    CustomerBasicInformationForPatch:
      type: object
      properties:
        givenName:
          type: string
          description: Given name
        surName:
          type: string
          description: Surname
        nationality:
          type: string
          description: Nationality code (e.g. SE, FI)
        email:
          type: string
          description: Email
        phoneCode:
          type: string
          description: International telephone code of phone
        phoneNumber:
          type: string
          description: Phone number
        mobilePhoneCode:
          type: string
          description: International telephone code of mobile phone
        mobilePhoneNumber:
          type: string
          description: Mobile phone number
        preferredContactChannel:
          $ref: '#/components/schemas/PreferredContactChannel'
        selfAssessedPep:
          $ref: '#/components/schemas/SelfAssessedPep'
        selfAssessedPepDescription:
          type: string
          description: Description self assessed PEP
        dynamicFields:
          $ref: '#/components/schemas/VPDynamicFields'
    CustomerInformationForPatch:
      type: object
      properties:
        customerBasicInfo:
          $ref: '#/components/schemas/CustomerBasicInformationForPatch'
        address:
          $ref: '#/components/schemas/AddressForPatch'
    PreferredContactChannel:
      type: string
      description: |
        * NULL No preferred contact channel
        * EMAIL Preferred contact channel is email
        * SMS Preferred contact channel is mobile phone
        * PHONE Preferred contact channel is phone
      enum:
        - 'NULL'
        - EMAIL
        - SMS
        - PHONE
    CustomerBasicInformationV4:
      type: object
      properties:
        customerId:
          type: string
        nationality:
          type: string
          description: Nationality code (e.g. SE, FI)
        century:
          type: string
          description: |
            * Swedish SSN's century, e.g. 19(without 811228987x)
        ssn:
          type: string
          description: |
            * Swedish SSN without century, e.g. (without 19)811228987x
            * Finnish SSN
        givenName:
          type: string
          description: Given name
        surName:
          type: string
          description: Surname
        email:
          type: string
          description: Email
        phoneCode:
          type: string
          description: International telephone code of phone
        phoneNumber:
          type: string
          description: Phone number
        mobilePhoneCode:
          type: string
          description: International telephone code of mobile phone
        mobilePhoneNumber:
          type: string
          description: Mobile phone number
        preferredContactChannel:
          $ref: '#/components/schemas/PreferredContactChannel'
        selfAssessedPep:
          $ref: '#/components/schemas/SelfAssessedPep'
        selfAssessedPepDescription:
          type: string
          description: Description self assessed PEP
        hasGuardian:
          type: boolean
          description: Has appointed guardian
        dynamicFieldsRef:
          type: string
          example: 61a5e90d83750656d117e059
        dynamicFields:
          $ref: '#/components/schemas/VPDynamicFields'
        schemaMetadata:
          $ref: '#/components/schemas/ViljaSchemaMetadata'
    CustomerInformationV4:
      required:
        - address
        - customerBasicInfo
      type: object
      properties:
        customerBasicInfo:
          $ref: '#/components/schemas/CustomerBasicInformationV4'
        address:
          $ref: '#/components/schemas/AddressV4'
        accountList:
          type: array
          items:
            $ref: '#/components/schemas/AccountInfo'
    CustomerPersonalInformationV4:
      type: object
      properties:
        customerId:
          type: string
          description: The customer id if the person is already a customer
        ssn:
          type: string
          description: |
            * Swedish SSN with century, e.g.  19811228987x
            * Finnish SSN
        givenName:
          type: string
          description: Given name
        surName:
          type: string
          description: Surname
        email:
          type: string
          description: Email
        phoneCode:
          type: string
          description: International telephone code of the phone
        phoneNumber:
          type: string
          description: Phone number
        mobilePhoneCode:
          type: string
          description: International telephone code of the mobile phone
        mobilePhoneNumber:
          type: string
          description: Mobile phone number
        personStatusCode:
          $ref: '#/components/schemas/PersonStatusCode'
        nationality:
          type: string
        income:
          type: number
        employmentType:
          type: string
          description: >-
            Verified against configured values. By default ["FULL", "TRIAL",
            "RETIRED", "HOURLY", "EARLY_RETIRED", "PROJECT", "SELF_EMPLOYED",
            "COMPANY_OWNER", "NO_WORK", "STUDENT", "TEMPORARY", "TIME_OFF",
            "PART_TIME"]
        KYCLevel:
          type: string
          description: >-
            If the person is already a VP customer, then the KYCLevel is FULL,
            else the KYCLevel is LIMITED
        address:
          $ref: '#/components/schemas/AddressV4'
    PersonStatusCode:
      type: string
      description: Person status which blocking customers from registering
      enum:
        - PROTECTED_ADDRESS
        - DECEASED
        - EMIGRATED
        - TECHNICALLY_DE_REGISTERED
        - SSN_DE_REGISTERED
        - LOCKED
      x-examples:
        example-1: PROTECTED_ADDRESS
    SelfAssessedPep:
      type: string
      description: |
        PEP(Politically exposed person)
        * NULL: Not answered
        * PEP: PEP
        * RELATED_TO_PEP: Related to PEP
        * NOT_PEP: Not PEP
      enum:
        - 'NULL'
        - PEP
        - RELATED_TO_PEP
        - NOT_PEP
    AddressV4:
      required:
        - country
      type: object
      properties:
        streetAddress:
          type: string
          description: Street address
        zipCode:
          type: string
          description: Zip code
        city:
          type: string
          description: City
        country:
          type: string
          description: Country code (Uppercase two-letter ISO-3166 code. e.g. SE, FI)
        region:
          type: string
          description: State/Province/Region
        coAddress:
          type: string
          description: C/O address
        manuallyMaintained:
          type: boolean
          description: Manually maintained
    V1Address:
      required:
        - city
        - coAddress
        - country
        - manuallyMaintained
        - streetAddress
        - zipCode
      type: object
      properties:
        streetAddress:
          type: string
        zipCode:
          type: string
        city:
          type: string
        country:
          type: string
        coAddress:
          type: string
        manuallyMaintained:
          type: boolean
        housingCode:
          type: string
    V1ForeignTaxation:
      required:
        - foreignTaxationConfirmedDate
        - foreignTaxationCountry
      type: object
      properties:
        foreignTaxationCountry:
          type: string
          description: Country code (Uppercase two-letter ISO-3166 code. e.g. SE, FI)
        tin:
          type: string
          description: >-
            Taxpayer ID number, tin is mandatory when foreignTaxationCountry is
            not None
        foreignTaxationConfirmedDate:
          type: string
          description: Confirmed date, format yyyy-MM-dd HH:mm:ss
    V5Mandate:
      required:
        - active
        - status
      type: object
      properties:
        createDate:
          type: string
        active:
          type: boolean
        status:
          type: string
    V1Pep:
      required:
        - externalPepMatch
        - latestPEPRelatedActivityDate
        - selfAssessedPEP
        - selfAssessedPepDescription
      type: object
      properties:
        externalPepMatch:
          type: boolean
        selfAssessedPEP:
          type: string
          description: NULL is not support of selfAssessedPEP
          enum:
            - PEP
            - RELATED_TO_PEP
            - NOT_PEP
            - 'NULL'
        selfAssessedPepDescription:
          type: string
        followUpAnswerAssets:
          type: array
          items:
            type: string
            example: PROPERTY_CONDOMINIUM
          enum:
            - PROPERTY_CONDOMINIUM
            - STOCKS_SECURITIES
            - SAVINGS_FROM_MONTHLY_INCOME
            - OTHER
        followUpAnswerAssetsOtherValue:
          type: string
        followUpAnswerValueOfAssets:
          type: string
          example: LOW_0_499999
          enum:
            - LOW_0_499999
            - MEDIUM_LOW_500000_999999
            - MEDIUM_1000000_1999999
            - MEDIUM_HIGH_2000000_3999999
            - HIGH_4000000_7999999
            - OTHER
        followUpAnswerValueOfAssetsOtherValue:
          type: string
        reAnswerPEPFollowUp:
          type: boolean
        latestPEPRelatedActivityDate:
          type: string
    V1PepForLegal:
      required:
        - externalPepMatch
        - latestPEPRelatedActivityDate
        - selfAssessedPEP
        - selfAssessedPepDescription
      type: object
      properties:
        externalPepMatch:
          type: boolean
        selfAssessedPEP:
          type: string
          description: NULL is not support of selfAssessedPEP
          enum:
            - PEP
            - RELATED_TO_PEP
            - NOT_PEP
            - 'NULL'
        selfAssessedPepDescription:
          type: string
        latestPEPRelatedActivityDate:
          type: string
    GetCustomerInformationBodyV5:
      type: object
      properties:
        customerBasicInfo:
          $ref: '#/components/schemas/CustomerBasicInformationV5'
        address:
          $ref: '#/components/schemas/CustomerAddressV5'
        pep:
          $ref: '#/components/schemas/GetCustomerPepV5'
        predefinedExternalBankAccountList:
          type: array
          items:
            $ref: '#/components/schemas/CustomerExternalAccountV5'
        fatcaList:
          type: array
          items:
            $ref: '#/components/schemas/ForeignTaxation'
    GetCustomerInformationV5:
      type: object
      properties:
        accountList:
          type: array
          items:
            $ref: '#/components/schemas/V1Account'
        mandate:
          $ref: '#/components/schemas/V5Mandate'
        secureMessageList:
          type: array
          items:
            $ref: '#/components/schemas/V1SecureMsg'
        underageInfoList:
          type: array
          items:
            $ref: '#/components/schemas/UnderageInformationV5'
        withdrawalAccountChangesInCurrentCalendarYear:
          type: integer
          format: int64
          example: 30
        customerBasicInfo:
          $ref: '#/components/schemas/CustomerBasicInformationV5'
        address:
          $ref: '#/components/schemas/CustomerAddressV5'
        pep:
          $ref: '#/components/schemas/GetCustomerPepV5'
        predefinedExternalBankAccountList:
          type: array
          items:
            $ref: '#/components/schemas/CustomerExternalAccountV5'
        fatcaList:
          type: array
          items:
            $ref: '#/components/schemas/ForeignTaxation'
    PatchCustomerInformationBodyV5:
      type: object
      properties:
        customerBasicInfo:
          $ref: '#/components/schemas/PatchUpdateCustomerBasicInformation'
        address:
          $ref: '#/components/schemas/CustomerAddressV5'
        pep:
          $ref: '#/components/schemas/UpdateCustomerPepV5'
    PutCustomerInformationBodyV5:
      required:
        - customerBasicInfo
      type: object
      properties:
        customerBasicInfo:
          $ref: '#/components/schemas/UpdateCustomerBasicInformationV5'
        address:
          $ref: '#/components/schemas/CustomerAddressV5'
        pep:
          $ref: '#/components/schemas/UpdateCustomerPepV5'
    PostCustomerInformationBodyV5:
      required:
        - predefinedExternalBankAccountList
      type: object
      properties:
        customerBasicInfo:
          $ref: '#/components/schemas/UpdateCustomerBasicInformationV5'
        address:
          $ref: '#/components/schemas/CustomerAddressV5'
        pep:
          $ref: '#/components/schemas/UpdateCustomerPepV5'
        fatcaList:
          type: array
          items:
            $ref: '#/components/schemas/ForeignTaxationForPost'
        predefinedExternalBankAccountList:
          type: array
          items:
            $ref: >-
              #/components/schemas/ExternalAccountCreateWithOptionalAccountFromExternalProvider
    GetCustomerPepV5:
      type: object
      properties:
        selfAssessedPEP:
          $ref: '#/components/schemas/SelfAssessedPep'
        selfAssessedPepDescription:
          type: string
        followUpAnswerAssets:
          type: array
          items:
            type: string
            example: PROPERTY_CONDOMINIUM
          enum:
            - PROPERTY_CONDOMINIUM
            - STOCKS_SECURITIES
            - SAVINGS_FROM_MONTHLY_INCOME
            - OTHER
        followUpAnswerAssetsOtherValue:
          type: string
        followUpAnswerValueOfAssets:
          type: string
          example: LOW_0_499999
          enum:
            - LOW_0_499999
            - MEDIUM_LOW_500000_999999
            - MEDIUM_1000000_1999999
            - MEDIUM_HIGH_2000000_3999999
            - HIGH_4000000_7999999
            - OTHER
        followUpAnswerValueOfAssetsOtherValue:
          type: string
        reAnswerPEPFollowUp:
          type: boolean
        externalPepMatch:
          type: boolean
        latestPEPRelatedActivityDate:
          type: string
          description: Format is yyyy-MM-dd HH:mm:ss
    UpdateCustomerPepV5:
      type: object
      properties:
        selfAssessedPEP:
          $ref: '#/components/schemas/SelfAssessedPep'
        selfAssessedPepDescription:
          type: string
        followUpAnswerAssets:
          type: array
          items:
            type: string
            example: PROPERTY_CONDOMINIUM
          enum:
            - PROPERTY_CONDOMINIUM
            - STOCKS_SECURITIES
            - SAVINGS_FROM_MONTHLY_INCOME
            - OTHER
        followUpAnswerAssetsOtherValue:
          type: string
        followUpAnswerValueOfAssets:
          type: string
          example: LOW_0_499999
          enum:
            - LOW_0_499999
            - MEDIUM_LOW_500000_999999
            - MEDIUM_1000000_1999999
            - MEDIUM_HIGH_2000000_3999999
            - HIGH_4000000_7999999
            - OTHER
        followUpAnswerValueOfAssetsOtherValue:
          type: string
    CustomerAddressV5:
      type: object
      properties:
        streetAddress:
          type: string
        streetAddress2:
          type: string
        zipCode:
          type: string
        city:
          type: string
        country:
          type: string
          description: Country code (Uppercase two-letter ISO-3166 code. e.g. SE, FI)
        coAddress:
          type: string
        propertyNumber:
          type: string
          description: >-
            Property number is an optional code for multiple housing on the
            address.
        apartmentNumber:
          type: string
          description: Optional.
        buildingName:
          type: string
          description: Optional.
        complementingInformation:
          type: string
          description: Optional.
        floorNumber:
          type: string
          description: Optional.
    CustomerBasicInformationV5:
      type: object
      properties:
        customerSerialId:
          type: string
          description: It is sequence, from 1 to 9223372036854775807
        century:
          type: string
          description: |
            * Swedish SSN's century, e.g. 19(without 811228987x)
        ssn:
          type: string
          description: |
            * Swedish SSN without century, e.g. (without 19)811228987x
            * Finnish SSN
        givenName:
          type: string
        surname:
          type: string
        middleName:
          type: string
        preferredName:
          type: string
        email:
          type: string
        phone:
          type: string
        mobilePhone:
          type: string
        noSpam:
          type: boolean
          description: >-
            Whether commercial contacts are allowed. True is not allowed. False
            is allowed. This field is deprecated, please use
            `noPromotionalMessages` instead
          deprecated: true
        noPromotionalMessages:
          type: boolean
        preferredContactChannel:
          $ref: '#/components/schemas/PreferredContactChannel'
        taxExempt:
          type: boolean
        prohibiting:
          type: boolean
        prohibitingText:
          type: string
        totalEngagement:
          type: number
          description: Total Engagement
          format: double
        hasNotConfiguredDepositDirectDebit:
          type: boolean
        isForeignTaxationUpdatedAfterCRSReleaseDate:
          type: boolean
    CustomerBasicInformationForSMEV5:
      type: object
      properties:
        customerSerialId:
          type: string
          description: It is sequence, from 1 to 9223372036854775807
        century:
          type: string
          description: |
            * Swedish SSN's century, e.g. 19(without 811228987x)
        ssn:
          type: string
          description: |
            * Swedish SSN without century, e.g. (without 19)811228987x
            * Finnish SSN
        givenName:
          type: string
        surname:
          type: string
        middleName:
          type: string
        email:
          type: string
        phone:
          type: string
        mobilePhone:
          type: string
        noSpam:
          type: boolean
        preferredContactChannel:
          $ref: '#/components/schemas/PreferredContactChannel'
        taxExempt:
          type: boolean
        prohibiting:
          type: boolean
        prohibitingText:
          type: string
        totalEngagement:
          type: number
          description: Total Engagement
          format: double
        hasNotConfiguredDepositDirectDebit:
          type: boolean
        isForeignTaxationUpdatedAfterCRSReleaseDate:
          type: boolean
    CustomerAccountV5:
      type: object
      properties:
        serialId:
          type: string
          description: Account Id
        accountNumber:
          type: string
          description: Account number
        nickname:
          type: string
          description: Account nick name
        createDate:
          type: string
          description: Create date, format yyyy-MM-dd HH:mm:ss
        activeDate:
          type: string
          description: Active date, format yyyy-MM-dd HH:mm:ss
        closedDate:
          type: string
          description: Close date, format yyyy-MM-dd HH:mm:ss
        accountState:
          type: string
          description: >
            * PENDING: Pending accounts are kept for customers that has not yet
            been identified

            * ACTIVE: Active accounts are those accounts that have had
            transaction

            * DURATION_END: When end of duration, set this status

            * CLOSED: Closed accounts

            * FROZEN:  Frozen accounts don't allow any transaction
          enum:
            - PENDING
            - ACTIVE
            - DURATION_END
            - CLOSED
            - FROZEN
        balance:
          type: number
          description: Balance
          format: double
        capWithdrawalFeeToAccruedInterest:
          type: boolean
          description: Cap withdrawal fee to accured interest.
        accruedInterest:
          type: number
          description: Accrued Interest
          format: double
        interestBalance:
          type: number
          description: Interest Balance
          format: double
        currentInterestBalance:
          type: number
          description: Current Interest Balance
          format: double
        product:
          $ref: '#/components/schemas/DepositProduct'
        prohibiting:
          type: boolean
          description: If true will block withdrawals and transfers
        prohibitingReason:
          type: string
          description: Prohibiting reason
        willbeReinvested:
          type: boolean
          description: Will be reinversted
        withdrawalFeeNeeded:
          type: boolean
          description: Withdrawal fee is needed
        createdByReinvest:
          type: boolean
          description: Created by reinvested
        noticePeriodEndDate:
          type: string
          description: Notice period end date
        kycAnswered:
          type: boolean
          description: >-
            Information if account kyc is answered by customer. If account kyc
            is not configured the value will be "true".
    CustomerExternalAccountV5:
      type: object
      properties:
        serialId:
          type: string
          description: It is sequence, from 1 to 9223372036854775807
        type:
          type: string
          description: >
            * SE_BANK_ACCOUNT: Swedish external bank account

            * NO_BANK_ACCOUNT: Norwegian external bank account

            * SE_BG: Bankgiro number, refer to https://www.bankgirot.se

            * SE_PG: Plusgiro number, refer to https://www.plusgirot.se

            * IBAN: International Bank Account Number, refer to
            https://www.investopedia.com/terms/i/iban.asp
          example: SE_BANK_ACCOUNT
          enum:
            - NO_BANK_ACCOUNT
            - SE_BANK_ACCOUNT
            - SE_BG
            - SE_PG
            - IBAN
        validationState:
          type: string
          description: |
            * NEW: Not yet validated, will be send to BGC next time the job runs
            * VALID: Has been validated, either by BGC or manually
            * INVALID: Has been declared invalid, either by BGC or manually
            * VALIDATION_PENDING: Has been sent to BGC but no response yet
          example: NEW
          enum:
            - NEW
            - VALID
            - INVALID
            - VALIDATION_PENDING
        validationDate:
          type: string
          description: The validation date, format is yyyy-MM-dd.
        identifiers:
          type: object
          properties:
            clearingNumber:
              type: string
              example: '1346'
            bankName:
              type: string
              example: Danske Bank
            accountNumber:
              type: string
              example: '2626752'
        validByInternalVerification:
          type: boolean
          description: Information if account passed internal verification
          example: true
    CustomerExternalAccountForUpdateV5:
      required:
        - identifiers
        - type
      type: object
      properties:
        type:
          type: string
          description: |
            * SE_BANK_ACCOUNT: Swedish external bank account
            * NO_BANK_ACCOUNT: Norwegian external bank account
          example: SE_BANK_ACCOUNT
          enum:
            - SE_BANK_ACCOUNT
            - NO_BANK_ACCOUNT
        identifiers:
          required:
            - accountNumber
            - clearingNumber
          type: object
          properties:
            clearingNumber:
              type: string
              example: '1346'
            accountNumber:
              type: string
              example: '2626752'
      description: The external bank account information.
    CustomerExternalAccountWithValidationInfoForUpdate:
      required:
        - identifiers
        - type
        - validationState
        - validationDate
      type: object
      properties:
        type:
          type: string
          description: |
            * SE_BANK_ACCOUNT: Swedish external bank account
            * NO_BANK_ACCOUNT: Norwegian external bank account
          example: SE_BANK_ACCOUNT
          enum:
            - SE_BANK_ACCOUNT
            - NO_BANK_ACCOUNT
        identifiers:
          required:
            - accountNumber
            - clearingNumber
          type: object
          properties:
            clearingNumber:
              type: string
              example: '1346'
            accountNumber:
              type: string
              example: '2626752'
        validationState:
          type: string
          description: case sensitivity
          example: VALID
          enum:
            - VALID
            - INVALID
            - NEW
            - VALIDATION_PENDING
        validationDate:
          $ref: '#/components/schemas/VPTimeStamp'
      description: The external bank account information.
    ExternalAccountCreateWithOptionalAccountFromExternalProvider:
      required:
        - identifiers
        - type
      type: object
      properties:
        type:
          type: string
          description: |
            * SE_BANK_ACCOUNT: Swedish external bank account
            * NO_BANK_ACCOUNT: Norwegian external bank account
          example: SE_BANK_ACCOUNT
          enum:
            - SE_BANK_ACCOUNT
            - NO_BANK_ACCOUNT
        identifiers:
          required:
            - accountNumber
            - clearingNumber
          type: object
          properties:
            clearingNumber:
              type: string
              example: '1346'
            accountNumber:
              type: string
              example: '2626752'
        externalAuthorizationId:
          type: string
          description: >-
            Customer authorization id in accounts external provider. Required
            only when account is verified using external provider.
        externalAccountId:
          type: string
          description: >-
            Account id in external provider. Required only when account is
            verified using external provider.
      description: The external bank account information.
    ExternalAccountFromExternalProvider:
      required:
        - externalId
        - identifiers
        - type
      type: object
      properties:
        externalId:
          type: string
          description: External provider account id
        type:
          type: string
          description: |
            * SE_BANK_ACCOUNT: Swedish external bank account
            * NO_BANK_ACCOUNT: Norwegian external bank account
          example: SE_BANK_ACCOUNT
          enum:
            - SE_BANK_ACCOUNT
            - NO_BANK_ACCOUNT
        identifiers:
          required:
            - accountNumber
            - clearingNumber
          type: object
          properties:
            clearingNumber:
              type: string
              example: '1346'
            accountNumber:
              type: string
              example: '2626752'
        balance:
          type: number
        currency:
          type: string
        productName:
          type: string
    ExternalAccountFromExternalProviderCreateAPI:
      required:
        - authorizationId
        - externalId
        - identifiers
        - type
      type: object
      properties:
        authorizationId:
          type: string
          description: Id of customer authorization in external provider
        externalId:
          type: string
          description: External provider account id
        type:
          type: string
          description: |
            * SE_BANK_ACCOUNT: Swedish external bank account
            * NO_BANK_ACCOUNT: Norwegian external bank account
          example: SE_BANK_ACCOUNT
          enum:
            - SE_BANK_ACCOUNT
            - NO_BANK_ACCOUNT
        identifiers:
          required:
            - accountNumber
            - clearingNumber
          type: object
          properties:
            clearingNumber:
              type: string
              example: '1346'
            accountNumber:
              type: string
              example: '2626752'
    UpdateCustomerBasicInformationV5:
      type: object
      properties:
        givenName:
          type: string
        surname:
          type: string
        middleName:
          type: string
        email:
          type: string
        phone:
          type: string
        mobilePhone:
          type: string
        noSpam:
          type: boolean
          description: >-
            Whether commercial contacts are allowed. True is not allowed. False
            is allowed. This field is deprecated, please use
            `noPromotionalMessages` instead
          default: false
          deprecated: true
        noPromotionalMessages:
          type: boolean
          description: >-
            Whether commercial contacts are allowed. True is not allowed. False
            is allowed.
          default: false
        preferredContactChannel:
          $ref: '#/components/schemas/PreferredContactChannel'
    PatchUpdateCustomerBasicInformation:
      type: object
      properties:
        email:
          type: string
        phone:
          type: string
        mobilePhone:
          type: string
        noSpam:
          type: boolean
          description: >-
            Whether commercial contacts are allowed. True is not allowed. False
            is allowed. This field is deprecated, please use
            `noPromotionalMessages` instead
          default: false
          deprecated: true
        noPromotionalMessages:
          type: boolean
          description: >-
            Whether commercial contacts are allowed. True is not allowed. False
            is allowed.
          default: false
        preferredContactChannel:
          $ref: '#/components/schemas/PreferredContactChannel'
    ForeignTaxation:
      required:
        - foreignTaxationConfirmedDate
        - foreignTaxationCountry
      type: object
      properties:
        serialId:
          type: string
          description: >-
            Required for update only. The id of this FATCA. From 1 to
            9223372036854775807.
        foreignTaxationCountry:
          type: string
          description: Country code (Uppercase two-letter ISO-3166 code. e.g. SE, FI)
        tin:
          type: string
          description: >-
            Taxpayer ID number, tin is mandatory when foreignTaxationCountry is
            not None
        foreignTaxationConfirmedDate:
          type: string
          description: Confirmed date, format yyyy-MM-dd HH:mm:ss
    ForeignTaxationForPost:
      required:
        - foreignTaxationCountry
      type: object
      properties:
        foreignTaxationCountry:
          type: string
          description: Country code (Uppercase two-letter ISO-3166 code. e.g. SE, FI)
        tin:
          type: string
          description: >-
            Taxpayer ID number, tin is mandatory when foreignTaxationCountry is
            not None
    ForeignTaxationForUpdate:
      required:
        - foreignTaxationCountry
      type: object
      properties:
        foreignTaxationCountry:
          type: string
          description: Country code (Uppercase two-letter ISO-3166 code. e.g. SE, FI)
        tin:
          type: string
          description: >-
            Taxpayer ID number, tin is mandatory when foreignTaxationCountry is
            not None
    UnderageInformationV5:
      type: object
      properties:
        customerBasicInfo:
          $ref: '#/components/schemas/CustomerBasicInformationV5'
        address:
          $ref: '#/components/schemas/CustomerAddressV5'
        secureMessageList:
          type: array
          items:
            $ref: '#/components/schemas/V1SecureMsg'
        predefinedExternalBankAccountList:
          type: array
          items:
            $ref: '#/components/schemas/CustomerExternalAccountV5'
        accountList:
          type: array
          items:
            $ref: '#/components/schemas/V1Account'
    ConsumerInfo:
      type: object
      properties:
        ssn:
          type: string
          description: SSN
        givenName:
          type: string
          description: Given name
        surname:
          type: string
          description: Surname
        streetAddress:
          type: string
          description: Street address
        zipCode:
          type: string
          description: Zip code
        city:
          type: string
          description: City
        coAddress:
          type: string
          description: Co address
        country:
          type: string
          description: Country
        apartmentNumber:
          type: string
          description: Apartment number
        propertyNumber:
          type: string
          description: Property number
        buildingName:
          type: string
          description: Building name
        floorNumber:
          type: string
          description: Floor number
        complementingInformation:
          type: string
          description: Complementing information
        consumerRegistrationAccess:
          $ref: '#/components/schemas/ConsumerRegistrationAccess'
    ConsumerRegistrationAccess:
      type: object
      properties:
        canConsumerRegister:
          type: boolean
          description: Information if customer can register
        registrationBlockedReason:
          type: string
          description: Reason why customer can not register
          enum:
            - PERSON_STATUS
            - EMPTY_ADDRESS
            - EMPTY_NAME
            - SANCTIONS_SUSPECT
        personStatusCode:
          $ref: '#/components/schemas/PersonStatusCode'
    MonthlySavingsReminder:
      required:
        - result
      type: object
      properties:
        showMonthlySavingsReminder:
          type: boolean
          description: Information whether reminder of monthly savings should be shown.
    BoardMemberV6:
      required:
        - birthDate
        - givenName
        - id
        - reference
        - referenceType
        - smeId
        - surname
      type: object
      properties:
        id:
          type: string
        boardMemberRole:
          type: string
          description: boardMemberRole, the "BOARD_MEMBER" will be used if not provided.
          default: BOARD_MEMBER
          enum:
            - CHAIRMAN
            - BOARD_MEMBER
            - GUARANTOR
        smeId:
          type: string
        reference:
          type: string
          description: >-
            Both CCYYMMDDNNNN and CCYYMMDD-NNNN are supported for the Swedish
            SSN
          example: '193504049135'
        referenceType:
          type: string
          description: If the reference type is null, default value is SSN.
          default: SSN
          enum:
            - SSN
            - OTHERS
        givenName:
          type: string
        preferredName:
          type: string
        surname:
          type: string
        birthDate:
          type: string
          description: BirthDate, format yyyy-MM-dd
        nationality:
          type: string
          description: Country code (Uppercase two-letter ISO-3166 code. e.g. SE, FI)
        selfAssessedPEP:
          type: string
          description: Self assessed PEP， the "NULL" will be used if not provided.
          default: 'NULL'
          enum:
            - 'NULL'
            - PEP
            - RELATED_TO_PEP
            - NOT_PEP
        selfAssessedPepDescription:
          type: string
          description: >-
            Description self assessed PEP, only needed when selfAssessedPEP is
            not NULL.
        externalPepStatus:
          type: string
          enum:
            - PEP
            - NOT_PEP
        address:
          $ref: '#/components/schemas/AddressForSMEV2'
        email:
          type: string
          description: >-
            Matches the regular expression
            ^[_A-Za-z0-9-\+]+(\.[_A-Za-z0-9-]+)*@[A-Za-z0-9-]+(\.[A-Za-z0-9]+)*(\.[A-Za-z]{1,})$
          example: info@viljasolutions.com
        phone:
          description: >-
            Phone number, validate by google libphonenumber, refer to
            https://libphonenumber.appspot.com/
          example: '+468123456'
        createTime:
          type: string
          description: Create date time
          format: datetime
          example: '2021-02-24T14:57:10.35+08:00'
        updateTime:
          type: string
          description: Update date time
          format: datetime
          example: '2021-02-24T14:57:10.35+08:00'
      description: The BoardMemberV6.
    ManagementTeamIndividualV6:
      required:
        - birthDate
        - givenName
        - id
        - reference
        - referenceType
        - smeId
        - surname
      type: object
      properties:
        id:
          type: string
        managementTeamIndividualRole:
          type: string
          description: >-
            managementTeamIndividualRole, the "CEO" will be used if not
            provided.
          default: CEO
          enum:
            - CEO
            - COMPANY_SIGNATORY
        smeId:
          type: string
        reference:
          type: string
          description: >-
            Both CCYYMMDDNNNN and CCYYMMDD-NNNN are supported for the Swedish
            SSN
          example: '193504049135'
        referenceType:
          type: string
          description: If the reference type is null, default value is SSN.
          default: SSN
          enum:
            - SSN
            - OTHERS
        givenName:
          type: string
        preferredName:
          type: string
        surname:
          type: string
        birthDate:
          type: string
          description: BirthDate, format yyyy-MM-dd
        nationality:
          type: string
          description: Country code (Uppercase two-letter ISO-3166 code. e.g. SE, FI)
        selfAssessedPEP:
          type: string
          description: Self assessed PEP， the "NULL" will be used if not provided.
          default: 'NULL'
          enum:
            - 'NULL'
            - PEP
            - RELATED_TO_PEP
            - NOT_PEP
        selfAssessedPepDescription:
          type: string
          description: >-
            Description self assessed PEP, only needed when selfAssessedPEP is
            not NULL.
        externalPepStatus:
          type: string
          enum:
            - PEP
            - NOT_PEP
        address:
          $ref: '#/components/schemas/AddressForSMEV2'
        email:
          type: string
          description: >-
            Matches the regular expression
            ^[_A-Za-z0-9-\+]+(\.[_A-Za-z0-9-]+)*@[A-Za-z0-9-]+(\.[A-Za-z0-9]+)*(\.[A-Za-z]{1,})$
          example: info@viljasolutions.com
        phone:
          description: >-
            Phone number, validate by google libphonenumber, refer to
            https://libphonenumber.appspot.com/
          example: '+468123456'
        createTime:
          type: string
          description: Create date time
          format: datetime
          example: '2021-02-24T14:57:10.35+08:00'
        updateTime:
          type: string
          description: Update date time
          format: datetime
          example: '2021-02-24T14:57:10.35+08:00'
      description: The ManagementTeamIndividualV6.
    UltimateBeneficialOwnerV6:
      required:
        - birthDate
        - givenName
        - id
        - reference
        - referenceType
        - smeId
        - surname
      type: object
      properties:
        id:
          type: string
        ownershipPercentage:
          type: number
          description: The value range is 0-1, decimal is allowed
        smeId:
          type: string
        reference:
          type: string
          description: >-
            Both CCYYMMDDNNNN and CCYYMMDD-NNNN are supported for the Swedish
            SSN
          example: '193504049135'
        referenceType:
          type: string
          description: If the reference type is null, default value is SSN.
          default: SSN
          enum:
            - SSN
            - OTHERS
        givenName:
          type: string
        preferredName:
          type: string
        surname:
          type: string
        birthDate:
          type: string
          description: BirthDate, format yyyy-MM-dd
        nationality:
          type: string
          description: Country code (Uppercase two-letter ISO-3166 code. e.g. SE, FI)
        selfAssessedPEP:
          type: string
          description: Self assessed PEP， the "NULL" will be used if not provided.
          default: 'NULL'
          enum:
            - 'NULL'
            - PEP
            - RELATED_TO_PEP
            - NOT_PEP
        selfAssessedPepDescription:
          type: string
          description: >-
            Description self assessed PEP, only needed when selfAssessedPEP is
            not NULL.
        externalPepStatus:
          type: string
          enum:
            - PEP
            - NOT_PEP
        address:
          $ref: '#/components/schemas/AddressForSMEV2'
        email:
          type: string
          description: >-
            Matches the regular expression
            ^[_A-Za-z0-9-\+]+(\.[_A-Za-z0-9-]+)*@[A-Za-z0-9-]+(\.[A-Za-z0-9]+)*(\.[A-Za-z]{1,})$
          example: info@viljasolutions.com
        phone:
          description: >-
            Phone number, validate by google libphonenumber, refer to
            https://libphonenumber.appspot.com/
          example: '+468123456'
        createTime:
          type: string
          description: Create date time
          format: datetime
          example: '2021-02-24T14:57:10.35+08:00'
        updateTime:
          type: string
          description: Update date time
          format: datetime
          example: '2021-02-24T14:57:10.35+08:00'
      description: The UltimateBeneficialOwnerV6.
    AdminV6:
      required:
        - birthDate
        - givenName
        - id
        - reference
        - referenceType
        - smeId
        - surname
      type: object
      properties:
        id:
          type: string
        smeId:
          type: string
        reference:
          type: string
          description: >-
            Both CCYYMMDDNNNN and CCYYMMDD-NNNN are supported for the Swedish
            SSN
          example: '193504049135'
        referenceType:
          type: string
          description: If the reference type is null, default value is SSN.
          default: SSN
          enum:
            - SSN
            - OTHERS
        givenName:
          type: string
        preferredName:
          type: string
        surname:
          type: string
        birthDate:
          type: string
          description: BirthDate, format yyyy-MM-dd
        nationality:
          type: string
          description: Country code (Uppercase two-letter ISO-3166 code. e.g. SE, FI)
        selfAssessedPEP:
          type: string
          description: Self assessed PEP， the "NULL" will be used if not provided.
          default: 'NULL'
          enum:
            - 'NULL'
            - PEP
            - RELATED_TO_PEP
            - NOT_PEP
        selfAssessedPepDescription:
          type: string
          description: >-
            Description self assessed PEP, only needed when selfAssessedPEP is
            not NULL.
        externalPepStatus:
          type: string
          enum:
            - PEP
            - NOT_PEP
        address:
          $ref: '#/components/schemas/AddressForSMEV2'
        email:
          type: string
          description: >-
            Matches the regular expression
            ^[_A-Za-z0-9-\+]+(\.[_A-Za-z0-9-]+)*@[A-Za-z0-9-]+(\.[A-Za-z0-9]+)*(\.[A-Za-z]{1,})$
          example: info@viljasolutions.com
        phone:
          description: >-
            Phone number, validate by google libphonenumber, refer to
            https://libphonenumber.appspot.com/
          example: '+468123456'
        createTime:
          type: string
          description: Create date time
          format: datetime
          example: '2021-02-24T14:57:10.35+08:00'
        updateTime:
          type: string
          description: Update date time
          format: datetime
          example: '2021-02-24T14:57:10.35+08:00'
      description: The AdminV6.
    IndividualV6:
      required:
        - admins
        - boardMembers
        - managementTeamIndividuals
        - ultimateBeneficialOwners
      type: object
      properties:
        boardMembers:
          type: array
          description: the board members list
          items:
            $ref: '#/components/schemas/BoardMemberV6'
        managementTeamIndividuals:
          type: array
          description: the management team individuals list
          items:
            $ref: '#/components/schemas/ManagementTeamIndividualV6'
        ultimateBeneficialOwners:
          type: array
          description: the ultimate beneficial owners list
          items:
            $ref: '#/components/schemas/UltimateBeneficialOwnerV6'
        admins:
          type: array
          description: the admins list
          items:
            $ref: '#/components/schemas/AdminV6'
      description: The IndividualV6.
    BusinessCustomerEngagementV6:
      type: object
      description: Engagements of bussiness customer.
      properties:
        id:
          type: string
        organizationNumber:
          type: string
        organizationCountryCode:
          type: string
        companyType:
          type: string
        externalReference:
          type: string
        accounts:
          type: array
          items:
            type: object
            properties:
              id:
                type: string
              type:
                type: string
              accountNumber:
                type: string
              ocrNumber:
                type: string
              interestRate:
                type: number
              state:
                $ref: '#/components/schemas/AccountState'
              remainingPrincipal:
                type: number
              creditLimit:
                type: number
                description: Credit limit, only for credit account
              availableCreditLimit:
                type: number
                description: Available credit limit, only for credit account
              createDate:
                type: string
                description: Create date, the format is yyyy-MM-dd
                format: date
              product:
                $ref: '#/components/schemas/ProductForGetAccountV8'
              disbursementAccount:
                $ref: '#/components/schemas/DisbursementAccountV8'
              offer:
                $ref: '#/components/schemas/LoanOffer'
        applications:
          type: array
          items:
            type: object
            properties:
              id:
                type: string
              type:
                type: string
              externalReference:
                type: string
              reference:
                type: string
              appliedAmount:
                type: number
              approvedAmount:
                type: number
              state:
                $ref: '#/components/schemas/ApplicationState'
              accountId:
                type: string
              createDate:
                type: string
                description: Create date, the format is yyyy-MM-dd
                format: date
    CustomerEngagementsResponseV6:
      required:
        - engagements
        - reference
        - referenceType
      type: object
      properties:
        reference:
          type: string
          example: '193504049135'
        referenceType:
          type: string
          default: SSN
          enum:
            - SSN
            - OTHERS
        engagements:
          type: array
          items:
            oneOf:
              - $ref: '#/components/schemas/BusinessIndividualEngagement'
              - $ref: '#/components/schemas/ConsumerAccountEngagement'
              - $ref: '#/components/schemas/ConsumerApplicationEngagement'
              - $ref: '#/components/schemas/ConsumerOriginationEngagement'
      description: Person engagements
    EngagementHolder:
      required:
        - ssn
        - type
      type: object
      properties:
        type:
          type: string
          description: |
            * INDIVIDUAL_MAIN: Individual main holder.
            * INDIVIDUAL_CO: Individual co holder.
          enum:
            - INDIVIDUAL_MAIN
            - INDIVIDUAL_CO
        ssn:
          type: string
          description: The holder's SSN.
          example: '197705232382'
    EngagementApplication:
      type: object
      properties:
        appliedAmount:
          type: number
          example: 2000
        approvedAmount:
          type: number
          example: 2000
        type:
          type: string
          example: CONSUMER_REGULAR
          enum:
            - CONSUMER_REGULAR
            - CONSUMER_CREDIT
        reference:
          type: string
          example: '10000001'
        state:
          type: string
          example: UNPROCESSED
          enum:
            - UNPROCESSED
            - PENDING
            - BID
            - PN_CREATED
            - PN_SENT
            - PN_SIGNED
            - ACCOUNT_CREATED
            - DISBURSED
            - EXPIRED
            - TURNED_DOWN
            - REJECTED
            - CANCELLED
        externalReference:
          type: string
          example: '123456'
    EngagementAccount:
      type: object
      properties:
        ocrNumber:
          type: string
          description: Account's ocr number
          example: '1000017'
        type:
          type: string
          example: CONSUMER_REGULAR
          enum:
            - CONSUMER_REGULAR
            - CONSUMER_CREDIT
        interestRate:
          type: number
          example: 0
        state:
          type: string
          example: PENDING
        appliedAmount:
          type: number
          example: 1000
        remainingPrincipal:
          type: number
          example: 3000
        creditLimit:
          type: number
          example: 5000
        availableCreditLimit:
          type: number
          example: 2000
        disbursementAccount:
          type: object
          properties:
            id:
              type: string
              example: '10001'
            disbursementType:
              type: string
              description: >-
                The account type for disbursement<br> SE_BANK_ACCOUNT: Swedish
                Bank Account. Spilt by '-', for example 9551-1112110<br> SE_BG:
                Swedish BankGiro<br> SE_PG: Swedish PlusGiro<br>
                NO_BANK_ACCOUNT: Norwegian Bank Account<br> IBAN: The
                International Bank Account Number
              example: SE_BG
              enum:
                - SE_BANK_ACCOUNT
                - SE_BG
                - SE_PG
                - NO_BANK_ACCOUNT
                - IBAN
            externalAccountNumber:
              type: string
              example: 9551-1112110
            bankName:
              type: string
              example: Avanza Bank AB
    EngagementBusinessIndividual:
      type: object
      properties:
        roleType:
          type: string
          example: boardMember
          enum:
            - boardMember
            - guarantor
            - admin
            - managementTeamIndividual
            - ultimateBeneficialOwner
        role:
          type: string
          example: CEO
          enum:
            - CHAIRMAN
            - BOARD_MEMBER
            - GUARANTOR
            - CEO
            - COMPANY_SIGNATORY
    EngagementOrigination:
      type: object
      properties:
        id:
          type: string
        externalReference:
          type: string
        status:
          type: string
          example: UN_PROCESSED
          enum:
            - EVAL_APPLICATION
            - WAIT_FOR_APPROVE
            - WAIT_FOR_CONNECT_DEEDS
            - WAIT_FOR_COLLATERAL
            - WAIT_ACCOUNT_CREATED
            - UPDATE_COLLATERAL_WORK_QUEUE
            - REJECTED
            - RUNNING
            - ENDED
            - ACCOUNT_CREATED
            - UN_PROCESSED
        collateralIds:
          type: array
          items:
            type: string
        documents:
          type: array
          items:
            $ref: '#/components/schemas/OriginationDocument'
        events:
          type: array
          items:
            $ref: '#/components/schemas/EventViewBO'
        actualMonthlyAmortization:
          type: number
    EngagementProduct:
      type: object
      properties:
        id:
          type: string
          example: '100'
        name:
          type: string
          example: Product01
        baseInterestRate:
          type: number
          example: 0
        referenceInterestRate:
          type: number
          example: 0
        lateInterestRate:
          type: number
          example: 0
    BusinessIndividualEngagement:
      type: object
      properties:
        engagementType:
          type: string
          example: BUSINESS_INDIVIDUAL
          enum:
            - BUSINESS_INDIVIDUAL
        smeId:
          type: string
          example: 6100e9f06502d07ccf9c2a12
        organizationNumber:
          type: string
          description: The organizationNumber without any format
          example: '5567447056'
        companyName:
          type: string
          example: Vilja AB
        createDateTime:
          type: string
          format: datetime
          example: '2021-02-24T14:57:10.35+08:00'
        updateDateTime:
          type: string
          format: datetime
          example: '2021-02-24T14:57:10.35+08:00'
        applicationId:
          type: string
          example: '1000'
        accountId:
          type: string
          example: '3001'
        accountNumber:
          type: string
          example: '1000017'
        businessIndividual:
          $ref: '#/components/schemas/EngagementBusinessIndividual'
    ConsumerAccountEngagement:
      type: object
      properties:
        engagementType:
          type: string
          example: CONSUMER_ACCOUNT
          enum:
            - CONSUMER_ACCOUNT
        createDateTime:
          type: string
          format: datetime
          example: '2021-02-24T14:57:10.35+08:00'
        updateDateTime:
          type: string
          format: datetime
          example: '2021-02-24T14:57:10.35+08:00'
        applicationId:
          type: string
          example: '1000'
        accountId:
          type: string
          example: '3001'
        accountNumber:
          type: string
          example: '1000017'
        holders:
          type: array
          items:
            $ref: '#/components/schemas/EngagementHolder'
        product:
          $ref: '#/components/schemas/EngagementProduct'
        account:
          $ref: '#/components/schemas/EngagementAccount'
        offer:
          $ref: '#/components/schemas/LoanOffer'
    ConsumerApplicationEngagement:
      type: object
      properties:
        engagementType:
          type: string
          example: CONSUMER_APPLICATION
          enum:
            - CONSUMER_APPLICATION
        createDateTime:
          type: string
          format: datetime
          example: '2021-02-24T14:57:10.35+08:00'
        updateDateTime:
          type: string
          format: datetime
          example: '2021-02-24T14:57:10.35+08:00'
        applicationId:
          type: string
          example: '1000'
        accountId:
          type: string
          example: '3001'
        accountNumber:
          type: string
          example: '1000017'
        holders:
          type: array
          items:
            $ref: '#/components/schemas/EngagementHolder'
        product:
          $ref: '#/components/schemas/EngagementProduct'
        application:
          $ref: '#/components/schemas/EngagementApplication'
        offer:
          $ref: '#/components/schemas/LoanOffer'
    ConsumerOriginationEngagement:
      type: object
      properties:
        engagementType:
          type: string
          example: CONSUMER_ORIGINATION
          enum:
            - CONSUMER_ORIGINATION
        createDateTime:
          type: string
          format: datetime
          example: '2021-02-24T14:57:10.35+08:00'
        updateDateTime:
          type: string
          format: datetime
          example: '2021-02-24T14:57:10.35+08:00'
        applicationId:
          type: string
          example: '1000'
        accountId:
          type: string
          example: '3001'
        accountNumber:
          type: string
          example: '1000017'
        holders:
          type: array
          items:
            $ref: '#/components/schemas/EngagementHolder'
        product:
          $ref: '#/components/schemas/EngagementProduct'
        origination:
          $ref: '#/components/schemas/EngagementOrigination'
    UpdateBoardMemberV6:
      type: object
      properties:
        boardMemberRole:
          type: string
          description: boardMemberRole, the "BOARD_MEMBER" will be used if not provided.
          default: BOARD_MEMBER
          enum:
            - CHAIRMAN
            - BOARD_MEMBER
            - GUARANTOR
        givenName:
          type: string
          description: Not allowed to update it to null
        preferredName:
          type: string
        surname:
          type: string
          description: Not allowed to update it to null
        birthDate:
          type: string
          description: BirthDate, format yyyy-MM-dd, not allowed to update it to null
        nationality:
          type: string
          description: Country code (Uppercase two-letter ISO-3166 code. e.g. SE, FI)
        selfAssessedPEP:
          type: string
          description: Self assessed PEP， the "NULL" will be used if not provided.
          default: 'NULL'
          enum:
            - 'NULL'
            - PEP
            - RELATED_TO_PEP
            - NOT_PEP
        selfAssessedPepDescription:
          type: string
        externalPepStatus:
          type: string
          enum:
            - PEP
            - NOT_PEP
        address:
          $ref: '#/components/schemas/AddressForSMEV2'
        email:
          type: string
        phone:
          description: >-
            Phone number, validate by google libphonenumber, refer to
            https://libphonenumber.appspot.com/
          example: '+468123456'
      description: The BoardMemberV6.
    UpdateAdminV6:
      type: object
      properties:
        givenName:
          type: string
          description: Not allowed to update it to null
        preferredName:
          type: string
        surname:
          type: string
          description: Not allowed to update it to null
        birthDate:
          type: string
          description: BirthDate, format yyyy-MM-dd, not allowed to update it to null
        nationality:
          type: string
          description: Country code (Uppercase two-letter ISO-3166 code. e.g. SE, FI)
        selfAssessedPEP:
          type: string
          description: Self assessed PEP， the "NULL" will be used if not provided.
          default: 'NULL'
          enum:
            - 'NULL'
            - PEP
            - RELATED_TO_PEP
            - NOT_PEP
        selfAssessedPepDescription:
          type: string
        externalPepStatus:
          type: string
          enum:
            - PEP
            - NOT_PEP
        address:
          $ref: '#/components/schemas/AddressForSMEV2'
        email:
          type: string
        phone:
          description: >-
            Phone number, validate by google libphonenumber, refer to
            https://libphonenumber.appspot.com/
          example: '+468123456'
      description: The CompanyRepresentativeV6.
    UpdateManagementTeamIndividualV6:
      type: object
      properties:
        managementTeamIndividualRole:
          type: string
          description: >-
            managementTeamIndividualRole, the "CEO" will be used if not
            provided.
          default: CEO
          enum:
            - CEO
            - COMPANY_SIGNATORY
        givenName:
          type: string
          description: Not allowed to update it to null
        preferredName:
          type: string
        surname:
          type: string
          description: Not allowed to update it to null
        birthDate:
          type: string
          description: BirthDate, format yyyy-MM-dd, not allowed to update it to null
        nationality:
          type: string
          description: Country code (Uppercase two-letter ISO-3166 code. e.g. SE, FI)
        selfAssessedPEP:
          type: string
          description: Self assessed PEP， the "NULL" will be used if not provided.
          default: 'NULL'
          enum:
            - 'NULL'
            - PEP
            - RELATED_TO_PEP
            - NOT_PEP
        selfAssessedPepDescription:
          type: string
        externalPepStatus:
          type: string
          enum:
            - PEP
            - NOT_PEP
        address:
          $ref: '#/components/schemas/AddressForSMEV2'
        email:
          type: string
        phone:
          description: >-
            Phone number, validate by google libphonenumber, refer to
            https://libphonenumber.appspot.com/
          example: '+468123456'
      description: The ManagementTeamIndividualV6.
    UpdateUltimateBeneficialOwnerV6:
      type: object
      properties:
        ownershipPercentage:
          type: number
          description: The value range is 0-1, decimal is allowed
        givenName:
          type: string
          description: Not allowed to update it to null
        preferredName:
          type: string
        surname:
          type: string
          description: Not allowed to update it to null
        birthDate:
          type: string
          description: BirthDate, format yyyy-MM-dd, not allowed to update it to null
        nationality:
          type: string
          description: Country code (Uppercase two-letter ISO-3166 code. e.g. SE, FI)
        selfAssessedPEP:
          type: string
          description: Self assessed PEP， the "NULL" will be used if not provided.
          default: 'NULL'
          enum:
            - 'NULL'
            - PEP
            - RELATED_TO_PEP
            - NOT_PEP
        selfAssessedPepDescription:
          type: string
        externalPepStatus:
          type: string
          enum:
            - PEP
            - NOT_PEP
        address:
          $ref: '#/components/schemas/AddressForSMEV2'
        email:
          type: string
        phone:
          description: >-
            Phone number, validate by google libphonenumber, refer to
            https://libphonenumber.appspot.com/
          example: '+468123456'
      description: The UltimateBeneficialOwnerV6.
    CreateBoardMemberV6:
      required:
        - birthDate
        - givenName
        - reference
        - referenceType
        - smeId
        - surname
      type: object
      properties:
        boardMemberRole:
          type: string
          description: boardMemberRole, the "BOARD_MEMBER" will be used if not provided.
          default: BOARD_MEMBER
          enum:
            - CHAIRMAN
            - BOARD_MEMBER
            - GUARANTOR
        smeId:
          type: string
        reference:
          type: string
          description: >-
            Both CCYYMMDDNNNN and CCYYMMDD-NNNN are supported for the Swedish
            SSN
          example: '193504049135'
        referenceType:
          type: string
          description: If the reference type is null, default value is SSN.
          default: SSN
          enum:
            - SSN
            - OTHERS
        givenName:
          type: string
        preferredName:
          type: string
        surname:
          type: string
        birthDate:
          type: string
          description: BirthDate, format yyyy-MM-dd
        nationality:
          type: string
          description: Country code (Uppercase two-letter ISO-3166 code. e.g. SE, FI)
        selfAssessedPEP:
          type: string
          description: Self assessed PEP， the "NULL" will be used if not provided.
          default: 'NULL'
          enum:
            - 'NULL'
            - PEP
            - RELATED_TO_PEP
            - NOT_PEP
        selfAssessedPepDescription:
          type: string
          description: >-
            Description self assessed PEP, only needed when selfAssessedPEP is
            not NULL.
        externalPepStatus:
          type: string
          enum:
            - PEP
            - NOT_PEP
        address:
          $ref: '#/components/schemas/AddressForSMEV2'
        email:
          type: string
          description: >-
            Matches the regular expression
            ^[_A-Za-z0-9-\+]+(\.[_A-Za-z0-9-]+)*@[A-Za-z0-9-]+(\.[A-Za-z0-9]+)*(\.[A-Za-z]{1,})$
          example: info@viljasolutions.com
        phone:
          description: >-
            Phone number, validate by google libphonenumber, refer to
            https://libphonenumber.appspot.com/
          example: '+468123456'
      description: The BoardMemberV6.
    CreateAdminV6:
      required:
        - birthDate
        - givenName
        - reference
        - referenceType
        - smeId
        - surname
      type: object
      properties:
        smeId:
          type: string
        reference:
          type: string
          description: >-
            Both CCYYMMDDNNNN and CCYYMMDD-NNNN are supported for the Swedish
            SSN
          example: '193504049135'
        referenceType:
          type: string
          description: If the reference type is null, default value is SSN.
          default: SSN
          enum:
            - SSN
            - OTHERS
        givenName:
          type: string
        preferredName:
          type: string
        surname:
          type: string
        birthDate:
          type: string
          description: BirthDate, format yyyy-MM-dd
        nationality:
          type: string
          description: Country code (Uppercase two-letter ISO-3166 code. e.g. SE, FI)
        selfAssessedPEP:
          type: string
          description: Self assessed PEP， the "NULL" will be used if not provided.
          default: 'NULL'
          enum:
            - 'NULL'
            - PEP
            - RELATED_TO_PEP
            - NOT_PEP
        selfAssessedPepDescription:
          type: string
          description: >-
            Description self assessed PEP, only needed when selfAssessedPEP is
            not NULL.
        externalPepStatus:
          type: string
          enum:
            - PEP
            - NOT_PEP
        address:
          $ref: '#/components/schemas/AddressForSMEV2'
        email:
          type: string
          description: >-
            Matches the regular expression
            ^[_A-Za-z0-9-\+]+(\.[_A-Za-z0-9-]+)*@[A-Za-z0-9-]+(\.[A-Za-z0-9]+)*(\.[A-Za-z]{1,})$
          example: info@viljasolutions.com
        phone:
          description: >-
            Phone number, validate by google libphonenumber, refer to
            https://libphonenumber.appspot.com/
          example: '+468123456'
      description: The CompanyRepresentativeV6.
    CreateManagementTeamIndividualV6:
      required:
        - birthDate
        - givenName
        - reference
        - referenceType
        - smeId
        - surname
      type: object
      properties:
        managementTeamIndividualRole:
          type: string
          description: >-
            managementTeamIndividualRole, the "CEO" will be used if not
            provided.
          default: CEO
          enum:
            - CEO
            - COMPANY_SIGNATORY
        smeId:
          type: string
        reference:
          type: string
          description: >-
            Both CCYYMMDDNNNN and CCYYMMDD-NNNN are supported for the Swedish
            SSN
          example: '193504049135'
        referenceType:
          type: string
          description: If the reference type is null, default value is SSN.
          default: SSN
          enum:
            - SSN
            - OTHERS
        givenName:
          type: string
        preferredName:
          type: string
        surname:
          type: string
        birthDate:
          type: string
          description: BirthDate, format yyyy-MM-dd
        nationality:
          type: string
          description: Country code (Uppercase two-letter ISO-3166 code. e.g. SE, FI)
        selfAssessedPEP:
          type: string
          description: Self assessed PEP， the "NULL" will be used if not provided.
          default: 'NULL'
          enum:
            - 'NULL'
            - PEP
            - RELATED_TO_PEP
            - NOT_PEP
        selfAssessedPepDescription:
          type: string
          description: >-
            Description self assessed PEP, only needed when selfAssessedPEP is
            not NULL.
        externalPepStatus:
          type: string
          enum:
            - PEP
            - NOT_PEP
        address:
          $ref: '#/components/schemas/AddressForSMEV2'
        email:
          type: string
          description: >-
            Matches the regular expression
            ^[_A-Za-z0-9-\+]+(\.[_A-Za-z0-9-]+)*@[A-Za-z0-9-]+(\.[A-Za-z0-9]+)*(\.[A-Za-z]{1,})$
          example: info@viljasolutions.com
        phone:
          description: >-
            Phone number, validate by google libphonenumber, refer to
            https://libphonenumber.appspot.com/
          example: '+468123456'
      description: The ManagementTeamIndividualV6.
    CreateUltimateBeneficialOwnerV6:
      required:
        - birthDate
        - givenName
        - reference
        - referenceType
        - smeId
        - surname
      type: object
      properties:
        ownershipPercentage:
          type: number
          description: The value range is 0-1, decimal is allowed
        smeId:
          type: string
        reference:
          type: string
          description: >-
            Both CCYYMMDDNNNN and CCYYMMDD-NNNN are supported for the Swedish
            SSN
          example: '193504049135'
        referenceType:
          type: string
          description: If the reference type is null, default value is SSN.
          default: SSN
          enum:
            - SSN
            - OTHERS
        givenName:
          type: string
        preferredName:
          type: string
        surname:
          type: string
        birthDate:
          type: string
          description: BirthDate, format yyyy-MM-dd
        nationality:
          type: string
          description: Country code (Uppercase two-letter ISO-3166 code. e.g. SE, FI)
        selfAssessedPEP:
          type: string
          description: Self assessed PEP， the "NULL" will be used if not provided.
          default: 'NULL'
          enum:
            - 'NULL'
            - PEP
            - RELATED_TO_PEP
            - NOT_PEP
        selfAssessedPepDescription:
          type: string
          description: >-
            Description self assessed PEP, only needed when selfAssessedPEP is
            not NULL.
        externalPepStatus:
          type: string
          enum:
            - PEP
            - NOT_PEP
        address:
          $ref: '#/components/schemas/AddressForSMEV2'
        email:
          type: string
          description: >-
            Matches the regular expression
            ^[_A-Za-z0-9-\+]+(\.[_A-Za-z0-9-]+)*@[A-Za-z0-9-]+(\.[A-Za-z0-9]+)*(\.[A-Za-z]{1,})$
          example: info@viljasolutions.com
        phone:
          description: >-
            Phone number, validate by google libphonenumber, refer to
            https://libphonenumber.appspot.com/
          example: '+468123456'
      description: The UltimateBeneficialOwnerV6.
    CreateSecureMessageRequestV4:
      required:
        - content
        - subject
      type: object
      properties:
        subject:
          type: string
          description: The escaped json string subject of the secure message.
          example: How to change the nick name of my account.
        content:
          type: string
          description: The escaped json string content of the secure message.
          example: >-
            I want to change the nick name of my account "12345", can you guide
            me about that?
    SecureMessageResponseV4:
      required:
        - id
      type: object
      properties:
        id:
          type: string
          description: The secure message id.
          example: 609a49733561615ebc6ce80d
        subject:
          type: string
          description: The subject of the message.
          example: How to change the nick name of my account.
        creatorName:
          type: string
          description: >-
            The creator name, different value depends on the different creator
            type.
          example: Jack Sparrow
        creatorType:
          type: string
          description: >-
            The creator type, shows the secure message is created by CSR/end
            user/System.
          example: END_USER
          enum:
            - CSR
            - SYSTEM
            - END_USER
        createDateTime:
          type: string
          description: The create time of the reply, with ISO 8601 standard.
          format: datetime
          example: '2021-02-24T14:57:10.35+08:00'
        csrHandled:
          type: boolean
          description: It shows if the CSR has handled the secure message.
          example: true
        allowToReply:
          type: boolean
          description: It shows if the end user can reply the secure message.
          example: true
        replies:
          type: array
          items:
            $ref: '#/components/schemas/SecureMessageReplyResponseV4'
        hasUnreadReplyForEndUser:
          type: boolean
          description: If the secure message includes any un-read reply for the end user.
          example: true
        secureMessageMailBoxId:
          type: string
          description: The secure message mail box id, unique for per consumer customer.
          example: 609a49733561615ebc6ce80d
        metadata:
          type: object
          additionalProperties: true
    SecureMessageReplyResponseV4:
      required:
        - id
      type: object
      properties:
        id:
          type: string
          description: The secure message reply id.
          example: 609a49733561615ebc6ce80d
        createDateTime:
          type: string
          description: The create time of the reply, with ISO 8601 standard.
          format: datetime
          example: '2021-02-24T14:57:10.35+08:00'
        creatorName:
          type: string
          description: >-
            The creator name, different value depends on the different creator
            type.
          example: Jack Sparrow
        creatorType:
          type: string
          description: >-
            The creator type, shows the secure message is created by CSR/end
            user/System.
          example: END_USER
          enum:
            - CSR
            - SYSTEM
            - END_USER
        content:
          type: string
          description: The content of the message reply.
          example: >-
            I want to change the nick name of my account "12345", can you guide
            me about that?
        readStatus:
          type: string
          description: >-
            The read status, NOT_READ_BY_END_USER means the reply is not read by
            end user yet, READ means the reply is read by the end user.
          example: READ
          enum:
            - NOT_READ_BY_END_USER
            - READ
        readDateTime:
          type: string
          description: >-
            The read time of the reply, with ISO 8601 standard, not null when
            the readStatus is READ
          format: datetime
          example: '2021-02-24T14:57:10.35+08:00'
    SecureMessageListResponseV4:
      type: object
      properties:
        currentPage:
          type: integer
          format: int32
          example: 3
        total:
          type: integer
          description: the size of total records.
          format: int32
          example: 45
        _links:
          type: object
          properties:
            self:
              type: object
              properties:
                href:
                  type: string
                  example: /secureMessages?page=3&size=10
            first:
              type: object
              properties:
                href:
                  type: string
                  example: /secureMessages?page=1&size=10
            prev:
              type: object
              properties:
                href:
                  type: string
                  example: /secureMessages?page=2&size=10
            next:
              type: object
              properties:
                href:
                  type: string
                  example: /secureMessages?page=4&size=10
            last:
              type: object
              properties:
                href:
                  type: string
                  example: /secureMessages?page=5&size=10
        _embedded:
          type: object
          properties:
            data:
              type: array
              items:
                $ref: '#/components/schemas/SecureMessageResponseV4'
          description: The partial secure messages.
    ShipPurchasesRequestV2:
      required:
        - purchaseIds
      type: object
      properties:
        purchaseIds:
          type: array
          description: >-
            IDs for the shipped purchases, please pass all the purchase IDs for
            one application
          items:
            type: string
    SignNotification:
      required:
        - signSessionID
      type: object
      properties:
        signSessionID:
          type: string
        accountID:
          type: string
        signStatus:
          type: string
          enum:
            - SUCCESS
            - FAIL
    TrancheCreateRequestV2:
      required:
        - accountId
        - signSessionId
        - tranches
      type: object
      properties:
        accountId:
          type: string
          description: The account id
        callBackURLOnComplete:
          type: string
          description: >
            URL that will be redirected to when signing is completed.

            It is required if need to signing the document.

            The parameter has two formats:

            * If the token is associated with the External Party, the path
            should be used. For example, /complete

            * If the token is associated without the External Party, the URL
            should be used. For example, https://viljasolutions.com/complete
        callBackURLOnCancel:
          type: string
          description: >
            URL that will be redirected to when signing is cancelled.

            It is required if need to signing the document.

            The parameter has two formats:

            * If the token is associated with the External Party, the path
            should be used. For example, /cancel

            * If the token is associated without the External Party, the URL
            should be used. For example, https://viljasolutions.com/cancel
        notificationURL:
          type: string
          description: >
            URL the notification on the confirmation of signing will be sent to.

            It is required if need to signing the document.

            The parameter has two formats:

            * If the token is associated with the External Party, the path
            should be used. For example, /notification

            * If the token is associated without the External Party, the URL
            should be used. For example, https://viljasolutions.com/notification
        signSessionId:
          type: string
          description: ID to identify the signing process
        tranches:
          type: array
          items:
            required:
              - appliedAmount
              - trancheType
            type: object
            properties:
              appliedAmount:
                type: number
                description: Tranche amount
              offerId:
                type: string
                description: Defines payment schedule and options
              trancheType:
                type: string
                enum:
                  - CASH_WITHDRAWAL
                  - PURCHASE
              trancheChannel:
                $ref: '#/components/schemas/TrancheChannel'
              shipImmediately:
                type: boolean
                description: >-
                  It is mandatory when the trancheType is PURCHASE. Please
                  ignore this field when trancheType is CASH_WITHDRAWAL.
                  ShipImmediately is true means the purchase is delivered.
              additionalInfos:
                type: object
                additionalProperties:
                  type: string
              salesPerson:
                type: string
                description: Sales person
    TrancheCreateResponseV2:
      type: object
      properties:
        tranches:
          type: array
          items:
            required:
              - appliedAmount
              - shipImmediately
            type: object
            properties:
              trancheId:
                type: string
                description: Tranche Id
              appliedAmount:
                type: number
                description: Tranche amount
              offerId:
                type: string
                description: Defines payment schedule and options
              trancheType:
                type: string
                enum:
                  - CASH_WITHDRAWAL
                  - PURCHASE
              trancheChannel:
                $ref: '#/components/schemas/TrancheChannel'
              shipImmediately:
                type: boolean
                description: >-
                  The purchase will be ship immediately or not. Ship immediately
                  means no shipping process for this purchase, not work for cash
                  withdraw.
              additionalInfos:
                type: object
                additionalProperties:
                  type: string
              active:
                type: boolean
              salesPerson:
                type: string
        signingUrl:
          type: string
          description: URL to visit when signing
    TrancheWithSignRequestV2:
      required:
        - callBackURLOnCancel
        - callBackURLOnComplete
        - notificationURL
        - signSessionId
        - tranches
      type: object
      properties:
        callBackURLOnComplete:
          type: string
          description: >
            URL that will be redirected to when signing is completed.

            The parameter has two formats:

            * If the token is associated with the External Party, the path
            should be used. For example, /complete

            * If the token is associated without the External Party, the URL
            should be used. For example, https://viljasolutions.com/complete
        callBackURLOnCancel:
          type: string
          description: >
            URL that will be redirected to when signing is cancelled.

            The parameter has two formats:

            * If the token is associated with the External Party, the path
            should be used. For example, /cancel

            * If the token is associated without the External Party, the URL
            should be used. For example, https://viljasolutions.com/cancel
        notificationURL:
          type: string
          description: >
            URL the notification on the confirmation of signing will be sent to.

            The parameter has two formats:

            * If the token is associated with the External Party, the path
            should be used. For example, /notification

            * If the token is associated without the External Party, the URL
            should be used. For example, https://viljasolutions.com/notification
        signSessionId:
          type: string
          description: ID to identify the signing process
        tranches:
          type: array
          items:
            required:
              - appliedAmount
              - trancheType
            type: object
            properties:
              appliedAmount:
                type: number
                description: Tranche amount
              offerId:
                type: string
                description: Defines payment schedule and options
              trancheType:
                type: string
                enum:
                  - CASH_WITHDRAWAL
                  - PURCHASE
              trancheChannel:
                $ref: '#/components/schemas/TrancheChannel'
              shipImmediately:
                type: boolean
                description: >-
                  It is mandatory when the trancheType is PURCHASE. Please
                  ignore this field when trancheType is CASH_WITHDRAWAL.
                  ShipImmediately is true means the purchase is delivered.
              additionalInfos:
                type: object
                additionalProperties:
                  type: string
              salesPerson:
                type: string
                description: Sales person
    TrancheWithSignResponseV2:
      type: object
      properties:
        tranches:
          type: array
          items:
            required:
              - appliedAmount
              - shipImmediately
            type: object
            properties:
              trancheId:
                type: string
                description: Tranche Id
              appliedAmount:
                type: number
                description: Tranche amount
              offerId:
                type: string
                description: Defines payment schedule and options
              trancheType:
                type: string
                enum:
                  - CASH_WITHDRAWAL
                  - PURCHASE
              trancheChannel:
                $ref: '#/components/schemas/TrancheChannel'
              shipImmediately:
                type: boolean
                description: >-
                  The purchase will be ship immediately or not. Ship immediately
                  means no shipping process for this purchase, not work for cash
                  withdraw.
              additionalInfos:
                type: object
                additionalProperties:
                  type: string
              active:
                type: boolean
              salesPerson:
                type: string
        signingUrl:
          type: string
          description: URL to visit when signing
    CancelTranchesRequestV2:
      required:
        - cancelType
        - trancheId
      type: object
      properties:
        trancheId:
          type: string
          description: ID for the cancelled tranche
        returnAmount:
          type: number
          description: Cancel amount if cancel type = PART
        cancelType:
          type: string
          enum:
            - FULL
            - PART
        note:
          type: string
    CancelTranchesResponseV2:
      type: object
      properties:
        trancheId:
          type: string
          description: ID for the cancelled tranche
        returnAmount:
          type: number
          description: cancel amount if cancel type = PART
        cancelType:
          type: string
          enum:
            - FULL
            - PART
        note:
          type: string
    TrancheChannel:
      type: string
      description: |
        * CSR: The request is made from CSR.
        * INSTORE_WEB: The request is made from instore web.
        * SMS: The request is made from SMS.
        * MY_PAGES: The request is made from Mypages.
        * OTHER: The request is made from other channels.
      enum:
        - CSR
        - INSTORE_WEB
        - SMS
        - MY_PAGES
        - OTHER
    SMETrancheRequest:
      required:
        - appliedAmount
        - channel
        - type
      type: object
      properties:
        appliedAmount:
          type: number
          description: Tranche amount
        offerId:
          type: string
          description: The offer id get from /api/revolving/v2/products
        type:
          type: string
          enum:
            - CASH_WITHDRAWAL
            - PURCHASE
        channel:
          $ref: '#/components/schemas/TrancheChannel'
        additionalInformations:
          type: array
          description: >-
            key-value format other information, total length should less than
            255
          items:
            type: object
            properties:
              name:
                type: string
              value:
                type: string
    SMETranchesResponse:
      type: array
      items:
        $ref: '#/components/schemas/SMETranche'
    SMETranche:
      type: object
      properties:
        id:
          type: string
          description: Tranche Id
        appliedAmount:
          type: number
          description: The applied amount of the tranche
        status:
          type: string
          enum:
            - PENDING
            - OPEN
            - CLOSED
            - PRE_SETTLED
            - CANCELLED
        offerId:
          type: string
          description: Offer id
        type:
          type: string
          enum:
            - CASH_WITHDRAWAL
            - PURCHASE
        channel:
          $ref: '#/components/schemas/TrancheChannel'
        active:
          type: boolean
        additionalInformations:
          type: array
          description: >-
            key-value format other information, total length should less than
            255
          items:
            type: object
            properties:
              name:
                type: string
              value:
                type: string
    MandateInformation:
      type: object
      properties:
        payerNumber:
          type: string
          description: Payer number
        status:
          type: string
          description: >-
            ESTABLISHED: The direct debit is established.<br> CANCELLED: The
            direct debit is cancelled.<br>
          enum:
            - ESTABLISHED
            - CANCELLED
        id:
          type: string
        createDate:
          type: string
          description: Create date
    RegularDisbursementAccount:
      type: object
      properties:
        id:
          type: string
        disbursementType:
          type: string
          description: >-
            The account type for disbursement<br> SE_BG: Swedish BankGiro<br>
            SE_PG: Swedish PlusGiro<br> SE_BANK_ACCOUNT: Swedish Bank Account.
            Spilt by '-', for example 9551-1112110<br> NO_BANK_ACCOUNT:
            Norwegian Bank Account<br> IBAN: The International Bank Account
            Number
          enum:
            - SE_BG
            - SE_PG
            - SE_BANK_ACCOUNT
            - NO_BANK_ACCOUNT
            - IBAN
        externalAccountNumber:
          type: string
          description: Bank account number
        bankName:
          type: string
          description: Bank name (only type PRIVATEEXTERNAlBANK has value)
    RegularLoanAccount:
      type: object
      title: ''
      description: ''
      properties:
        id:
          type: string
        promissoryNoteDocumentId:
          type: string
          description: Promissory note document ID
        accountNumber:
          type: string
          description: Account Number
        ocrNumber:
          type: string
          description: Account's ocr number
        state:
          $ref: '#/components/schemas/AccountState'
        createDate:
          type: string
          description: Create date, format is yyyy-MM-dd HH:mm:ss
        appliedAmount:
          type: number
          description: Applied amount
        remainingPrincipal:
          type: number
          description: Remaining principal
        remainingTenor:
          type: integer
          description: Remaining tenor
          format: int32
        interestRate:
          type: number
          description: Interest rate
        monthlyCost:
          type: number
          description: Monthly cost
        mainHolderId:
          type: string
        coHolderId:
          type: string
        statementChannel:
          $ref: '#/components/schemas/StatementChannel'
        product:
          $ref: '#/components/schemas/RegularLoanProduct'
        mandateList:
          type: array
          items:
            $ref: '#/components/schemas/RegularMandateInformation'
        disbursementAccount:
          $ref: '#/components/schemas/RegularDisbursementAccount'
        offerId:
          type: string
        externalPartyId:
          type: string
        externalPartyName:
          type: string
        salesPerson:
          type: string
          description: offer id, only for regular account
        residualAmountType:
          $ref: '#/components/schemas/ResidualAmountType'
        residualAmount:
          type: number
          description: Residual amount
        documents:
          type: array
          description: >-
            Get all kind of documents, including wp, statement .etc. It always
            return the latest one for promissory note
          items:
            $ref: '#/components/schemas/DocumentV8'
        insurances:
          type: array
          description: Insurance information for the account holder(s)
          items:
            $ref: '#/components/schemas/LoanInsuranceResponse'
        assetIds:
          type: array
          items:
            type: string
          description: Asset ids
        appliedTenorInMonth:
          type: integer
          example: 360
          description: Applied tenor in month
        startupFee:
          type: number
          example: 500
          description: Startup fee
        serviceFee:
          description: Service fee
          $ref: '#/components/schemas/ServiceFeeResponse'
        valuationFee:
          type: number
          example: 200
          description: Valuation fee
    LoanAccountResponseModelV5:
      type: object
      x-examples: {}
      properties:
        id:
          type: string
        promissoryNoteDocumentId:
          type: string
          description: Promissory note document ID
        accountNumber:
          type: string
          description: Account Number
        ocrNumber:
          type: string
          description: Account's ocr number
        state:
          $ref: '#/components/schemas/AccountState'
        createDate:
          type: string
          description: Create date, format is yyyy-MM-dd HH:mm:ss
        appliedAmount:
          type: number
          description: Applied amount
        remainingPrincipal:
          type: number
          description: Remaining principal
        remainingTenor:
          type: integer
          description: Remaining tenor
          format: int32
        interestRate:
          type: number
          description: Interest rate
        monthlyCost:
          type: number
          description: Monthly cost
        mainHolderId:
          type: string
        coHolderId:
          type: string
          nullable: true
        statementChannel:
          $ref: '#/components/schemas/StatementChannel'
        product:
          $ref: '#/components/schemas/RegularLoanProduct'
        mandateList:
          type: array
          items:
            $ref: '#/components/schemas/RegularMandateInformation'
        disbursementAccount:
          $ref: '#/components/schemas/RegularDisbursementAccount'
        schemaMetadata:
          $ref: '#/components/schemas/ViljaSchemaMetadata'
        dynamicFieldsRef:
          type: string
        dynamicFields:
          $ref: '#/components/schemas/VPDynamicFields'
        dueDay:
          type: integer
          example: 28
        documents:
          type: array
          items:
            $ref: '#/components/schemas/DocumentV8'
        externalPartyId:
          type: integer
        externalPartyName:
          type: string
        salesPerson:
          type: string
        offerId:
          type: string
          description: offer id, only for regular account
    RegularMandateInformation:
      type: object
      properties:
        id:
          type: string
        payerNumber:
          type: string
          description: Payer number
        status:
          type: string
          description: >-
            ESTABLISHED: The direct debit is established.<br> CANCELLED: The
            direct debit is cancelled.<br>
          enum:
            - ESTABLISHED
            - CANCELLED
        createDate:
          type: string
          description: Create date
    StatementChannel:
      type: string
      description: |
        * PAPER Paper
        * ELECTRONIC_EMAIL_NOTIFICATION Electronic, with Email notification
        * ELECTRONIC_SMS_NOTIFICATION Electronic, with SMS notification
        * ELECTRONIC_NO_NOTIFICATION Electronic, no notification
      enum:
        - PAPER
        - ELECTRONIC_EMAIL_NOTIFICATION
        - ELECTRONIC_SMS_NOTIFICATION
        - ELECTRONIC_NO_NOTIFICATION
    PaymentPlanItem:
      type: object
      properties:
        seriesNum:
          type: integer
          description: Series num
          format: int32
        dueDate:
          type: string
          description: Due date, format is yyyy-MM-dd.
          format: date
        statementType:
          type: string
          description: >
            * PENDING Pending statement

            * REGULAR Regular statement

            * POST_REGULAR Virtual statement,record payment other than the
            regular statement. For example: the late interest on the last
            statement.

            * NOT_GENERATED Statement generation was skipped by collection,
            frozen, etc.
          enum:
            - PENDING
            - REGULAR
            - POST_REGULAR
            - NOT_GENERATED
        statementStatus:
          type: string
          description: |
            * GENERATED Statement generated
            * NOT_GENERATED Statement not generated
            * PENDING Pending statement
            * UNPAID Unpaid statement
            * PARTIALLYPAID Partial paid statement
            * PAIDINFULL Full paid statement
            * OVERDUE Overdue statement
            * COLLECTION Collection statement
            * CURING Curing statement
            * CREDIT Credit statement item exist
            * CURING/CREDIT Curing and credit statement item exist
            * REVERSED Reversed invoice
          enum:
            - GENERATED
            - NOT_GENERATED
            - PENDING
            - UNPAID
            - PARTIALLYPAID
            - PAIDINFULL
            - OVERDUE
            - COLLECTION
            - CURING
            - CREDIT
            - CURING/CREDIT
            - REVERSED
        totalAmountIncludeVat:
          type: number
          description: Total statement amount include VAT.
          format: double
        totalAmount:
          type: number
          description: Total statement amount.
          format: double
        amortization:
          type: number
          description: Amortization included in the statement.
          format: double
        interest:
          type: number
          description: Interest included in the statement.
          format: double
        fee:
          type: number
          description: Fee included in the statement.
          format: double
        rounding:
          type: number
          description: rounding included in the statement.
          format: double
        vatAmount:
          type: number
          description: VAT amount included in the statement.
          format: double
        paidAmount:
          type: number
          description: The amount already paid in the statement.
          format: double
    RemainingDebtForLoanAccount:
      type: object
      properties:
        ocrNumber:
          type: string
          description: Account's ocr number
        remainingDebts:
          type: number
          description: Total sum customer to pay
          format: double
        excludedCollectionAmount:
          type: number
          description: Excluded collection statements
          format: double
        items:
          type: array
          description: Items included in the calculation
          items:
            $ref: '#/components/schemas/RemainingDebtItemForLoanAccount'
    RemainingDebtItemForLoanAccount:
      type: object
      properties:
        paymentReceiver:
          type: string
          description: Funding source name
        bankAccountNumber:
          type: string
          description: Bank account number
        remainingPrincipal:
          type: number
          description: Remaining principal
          format: double
        reduceRemainingPrincipalVat:
          type: number
          description: Reduce remaining principal VAT
          format: double
        interest:
          type: number
          description: Interest
          format: double
        interestVat:
          type: number
          description: Interest VAT
          format: double
        unpaidStatementsAmount:
          type: number
          description: Unpaid statement amount
          format: double
        remainingStartupFee:
          type: number
          description: Remaining startup fee
          format: double
        pendingStatementAmount:
          type: number
          description: Pending statement amount
          format: double
        upcomingStatementFee:
          type: number
          description: Upcoming statement fee
          format: double
        upcomingStatementFeeVat:
          type: number
          description: Upcoming statement fee VAT
          format: double
        upcomingInsuranceFee:
          type: number
          description: Upcoming insurance fee
          format: double
        upcomingInsuranceFeeVat:
          type: number
          description: Upcoming insurance fee VAT
          format: double
        serviceFee:
          type: number
          description: Service fee
          format: double
        serviceFeeVat:
          type: number
          description: Service fee VAT
          format: double
      description: Items included in the calculation
    RemainingDebtForCreditAccount:
      type: object
      properties:
        ocrNumber:
          type: string
          description: Account's ocr number
        remainingDebts:
          type: number
          description: Total sum customer to pay
          format: double
        excludedCollectionAmount:
          type: number
          description: Excluded collection statements
          format: double
        items:
          type: array
          description: Items included in the calculation
          items:
            $ref: '#/components/schemas/RemainingDebtItemForCreditAccount'
    RemainingDebtItemForCreditAccount:
      type: object
      properties:
        paymentReceiver:
          type: string
          description: Funding source name
        bankAccountNumber:
          type: string
          description: Bank account number
        remainingPrincipal:
          type: number
          description: Remaining principal
          format: double
        interest:
          type: number
          description: Interest
          format: double
        unpaidStatementsAmount:
          type: number
          description: Unpaid statement amount
          format: double
        remainingStartupFee:
          type: number
          description: Remaining startup fee
          format: double
        pendingStatementAmount:
          type: number
          description: Pending statement amount
          format: double
        upcomingStatementFee:
          type: number
          description: Upcoming statement fee
          format: double
        upcomingInsuranceFee:
          type: number
          description: Upcoming insurance fee
          format: double
        serviceFee:
          type: number
          description: Service fee
          format: double
      description: Items included in the calculation
    StatementStatus:
      type: string
      description: |
        * PENDING Pending statement
        * UNPAID Unpaid statement
        * PARTIALLYPAID Partial paid statement
        * PAIDINFULL Full paid statement
        * OVERDUE Overdue statement
        * COLLECTION Collection statement
        * CURING Curing statement
        * REVERSED Reversed invoice
      enum:
        - PENDING
        - UNPAID
        - PARTIALLYPAID
        - PAIDINFULL
        - OVERDUE
        - COLLECTION
        - CURING
        - REVERSED
    StatementType:
      type: string
      description: >
        * PENDING Pending statement

        * REGULAR Regular statement

        * POST_REGULAR Virtual statement,record payment other than the regular
        statement. For example: the late interest on the last statement.
      enum:
        - PENDING
        - REGULAR
        - POST_REGULAR
    TransactionType:
      type: string
      enum:
        - AdjustOriginalTrancheAmountTransaction
        - AdjustRemainingPrincipalTransaction
        - AdministrativeFeeTransaction
        - AmortizationPaidInOtherSystemTransaction
        - BlockedPaymentTransaction
        - CancelledExternalCommissionTransaction
        - CancelledExternalPartyDisbursementTransaction
        - CancelledInternalCommissionTransaction
        - CancelNewLoanCapitalizeFeeTransaction
        - CancelStatementTransaction
        - CancelTrancheStartupFeeTransaction
        - ChangeFundingSourceTransaction
        - DisbursementAdjustmentTransaction
        - DisbursePaybackToCustomerTransaction
        - ExternalCommissionTransaction
        - ExternalPartyDisbursementTransaction
        - FinalStatementVirtualPaymentTransaction
        - InterestPaidInOtherSystemTransaction
        - InternalCommissionTransaction
        - LateInterestPaidInOtherSystemTransaction
        - LoanAdjustmentAdministrativeFeeTransaction
        - LoanAdjustmentCollectionFeeTransaction
        - LoanAdjustmentDeedFeeTransaction
        - LoanAdjustmentDirectDebitFeeTransaction
        - LoanAdjustmentEInvoiceFeeTransaction
        - LoanAdjustmentInsurancePremieFullTransaction
        - LoanAdjustmentInsurancePremieLifeTransaction
        - LoanAdjustmentInterestTransaction
        - LoanAdjustmentLatePaymentFeeTransaction
        - LoanAdjustmentLatePaymentInterestTransaction
        - LoanAdjustmentPaymentPlanFeeTransaction
        - LoanAdjustmentReminderFeeTransaction
        - LoanAdjustmentServiceFeeTransaction
        - LoanAdjustmentStartupFeeAmortizationTransaction
        - LoanAdjustmentStartupFeeTransaction
        - LoanAdjustmentStatementFeeTransaction
        - LoanAdjustmentTitleDeedFeeTransaction
        - LoanAdjustmentValuationFeeTransaction
        - LoanDisbursementCancelTransaction
        - LoanDisbursementTransaction
        - LoanExternalDisbursementTransaction
        - LoanTrancheDisbursementCancelTransaction
        - LoanTrancheDisbursementTransaction
        - ManualPlacingPaymentTransaction
        - NewLoanCapitalizeFeeTransaction
        - NewLoanCapitalizeInterestTransaction
        - OtherFeesPaidInOtherSystemTransaction
        - OverPaymentAfterLastStatementTransaction
        - OverPaymentReducePrincipalTransaction
        - PayAdjustmentAdministrativeFeeTransaction
        - PayAdjustmentServiceFeeTransaction
        - PayAdministrativeFeeTransaction
        - PaybackToCustomerFromAccountTransaction
        - PaybackToCustomerTransaction
        - PayedNetDeedFeeTransaction
        - PayedNetStartupFeeTransaction
        - PayedNetTitleDeedFeeTransaction
        - PayedNetValuationFeeTransaction
        - PaymentPlanFeeTransaction
        - PaymentReceivedInOtherSystemTransaction
        - PaymentTransaction
        - PayPrepaymentTransaction
        - PayServiceFeeBeforeFirstStatementTransaction
        - PayServiceFeeTransaction
        - PayStatementAdjustmentCollectionFeeTransaction
        - PayStatementAdjustmentDeedFeeTransaction
        - PayStatementAdjustmentDirectDebitFeeTransaction
        - PayStatementAdjustmentEInvoiceFeeTransaction
        - PayStatementAdjustmentInsurancePremieFullTransaction
        - PayStatementAdjustmentInsurancePremieLifeTransaction
        - PayStatementAdjustmentInterestTransaction
        - PayStatementAdjustmentLatePaymentFeeTransaction
        - PayStatementAdjustmentLatePaymentInterestTransaction
        - PayStatementAdjustmentPaymentPlanFeeTransaction
        - PayStatementAdjustmentReminderFeeTransaction
        - PayStatementAdjustmentStartupFeeAmortizationTransaction
        - PayStatementAdjustmentStartupFeeTransaction
        - PayStatementAdjustmentStatementFeeTransaction
        - PayStatementAdjustmentTitleDeedFeeTransaction
        - PayStatementAdjustmentValuationFeeTransaction
        - PayStatementAmortizationTransaction
        - PayStatementCollectionFeeTransaction
        - PayStatementDirectDebitFeeTransaction
        - PayStatementEInvoiceFeeTransaction
        - PayStatementFeeTransaction
        - PayStatementInsurancePremieFullTransaction
        - PayStatementInsurancePremieLifeTransaction
        - PayStatementInterestBeforeFirstStatementTransaction
        - PayStatementInterestTransaction
        - PayStatementLatePaymentFeeTransaction
        - PayStatementLatePaymentInterestTransaction
        - PayStatementPaymentPlanFeeTransaction
        - PayStatementReminderFeeTransaction
        - PayStatementRoundingTransaction
        - PayStatementStartupFeeAmortizationTransaction
        - PayStatementStartupFeeTransaction
        - PayStatementTrancheStartupFeeTransaction
        - PayStatementValuationFeeTransaction
        - PayTrancheAdministrativeFeeTransaction
        - PayUnpaidAmountFromStatementTransaction
        - PrepaymentTransaction
        - PresettleRemainingAmountTransaction
        - ReservedTrancheTransaction
        - SafetyMarginTransaction
        - ServiceFeeBeforeFirstStatementTransaction
        - ServiceFeeTransaction
        - StartUpFeeAmortizationPaidInOtherSystemTransaction
        - StatementAmortizationTransaction
        - StatementCollectionFeeTransaction
        - StatementDirectDebitFeeTransaction
        - StatementEInvoiceFeeTransaction
        - StatementFeeTransaction
        - StatementInsurancePremieFullTransaction
        - StatementInsurancePremieLifeTransaction
        - StatementInterestBeforeFirstStatementTransaction
        - StatementInterestTransaction
        - StatementLatePaymentFeeTransaction
        - StatementLatePaymentInterestTransaction
        - StatementReminderFeeTransaction
        - StatementRoundingTransaction
        - StatementStartupFeeAmortizationTransaction
        - StatementStartupFeeTransaction
        - StatementTrancheStartupFeeTransaction
        - StatementValuationFeeTransaction
        - TrancheAdministrativeFeeTransaction
        - TrancheStartupFeeTransaction
        - UnidentifiedPaymentTransaction
        - UnpaidAmountFromStatementTransaction
        - VirtualCuringAmortizationTransaction
        - VirtualCuringFeeTransaction
        - VirtualCuringInsuranceTransaction
        - VirtualCuringInterestTransaction
        - VirtualPayCuringAmortizationTransaction
        - VirtualPayCuringFeeTransaction
        - VirtualPayCuringInsuranceTransaction
        - VirtualPayCuringInterestTransaction
        - VirtualPaymentDetailTransaction
        - VirtualPaymentTransaction
        - LoanInternalDisbursementTransaction
    AccountState:
      type: string
      description: >
        * PENDING: Waiting for disbursement.

        * OPEN: Account is ok for statement and payment. Statement is generated
        only when the account is OPEN; adjustment to an account can be made only
        when it is OPEN. This status is set when disbursement is approved by
        payment manager.

        * CANCELLED: Customer or the bank decides to cancel the loan. This
        status is set when disbursement is canceled before the disbursement job
        runs.

        * CLOSED: The account ends successfully, fully paid. This status is set
        when the last statement is created and fully paid.

        * FROZEN: The account is matched by the SDN check. This status is set
        when SDN check is matched when the account creation process or when the
        routine SDN check queue is approved.

        * FRAUD: Marked as a fraud account.

        * PRE_SETTLED: The account is fully paid in advance.

        * COLLECTION: Has sent to collection.

        * DECEASED: All holders of an account are set as DECEASED.

        * WRITTEN_OFF: The account is marked as credit loss and received
        payments will be booked as credit loss accounts.
      enum:
        - PENDING
        - OPEN
        - CANCELLED
        - CLOSED
        - FROZEN
        - FRAUD
        - PRE_SETTLED
        - COLLECTION
        - DECEASED
        - WRITTEN_OFF
    TrancheV2:
      type: object
      properties:
        id:
          type: string
        offerName:
          type: string
          description: Offer name
          nullable: true
        signatureDocumentId:
          type: string
          description: Signature document ID in E-archive
          nullable: true
        appliedAmount:
          type: number
          description: Applied amount
        appliedTenor:
          type: number
          description: Applied tenor
          nullable: true
          format: int32
        remainingTenor:
          type: number
          description: Remaining tenor
          format: int32
          nullable: true
        createDate:
          type: string
          description: Create date
    RevolvingAccountV2:
      type: object
      properties:
        id:
          type: string
        promissoryNoteDocumentId:
          type: string
          description: Promissory note document ID
        accountNumber:
          type: string
          description: Account number
        ocrNumber:
          type: string
          description: Account's ocr number
        externalPartyId:
          type: string
          description: External party ID
          nullable: true
        state:
          $ref: '#/components/schemas/AccountState'
        createDate:
          type: string
          description: Create date, format is yyyy-MM-dd HH:mm:ss
        nextDueDate:
          type: string
          description: Next due date, format is yyyy-MM-dd
        creditLimit:
          type: number
          description: Credit limit
        availableCreditLimit:
          type: number
          description: Available credit limit
        usedCreditLimit:
          type: number
          description: Used credit limit
        remainingPrincipal:
          type: number
          description: Remaining principal
        mainHolderId:
          type: string
        coHolderId:
          type: string
          nullable: true
        trancheBlockStatus:
          type: string
          description: |
            * UNBLOCKED: Unblocked
            * OVERDUE  : Tranche block, reason: unpaid statements
            * MANUAL   : Tranche block, reason: manually set
          enum:
            - UNBLOCKED
            - OVERDUE
            - MANUAL
        product:
          $ref: '#/components/schemas/CreditLoanProductWithinAccount'
        mandateList:
          type: array
          items:
            $ref: '#/components/schemas/MandateInformation'
        trancheList:
          type: array
          items:
            $ref: '#/components/schemas/TrancheV2'
        schemaMetadata:
          $ref: '#/components/schemas/ViljaSchemaMetadata'
        dynamicFieldsRef:
          type: string
        dynamicFields:
          $ref: '#/components/schemas/VPDynamicFields'
    PeriodicTrancheLimit:
      type: object
      properties:
        feesIncluded:
          type: boolean
          description: >-
            Include fees in periodic tranche limit (Such as startup fee, tranche
            fee).
        dailyLimit:
          type: number
          description: >-
            Daily limit amount, it should be greater than minimum tranche amount
            and less than credit limit.
        weeklyLimit:
          type: number
          description: >-
            Weekly limit amount, it should be greater than minimum tranche
            amount and less than credit limit.
        monthlyLimit:
          type: number
          description: >-
            Monthly limit amount, it should be greater than minimum tranche
            amount and less than credit limit.
    RevolvingAccountV2ForPatch:
      type: object
      properties:
        creditLimit:
          type: number
          description: >-
            Only support to decrease the credit limit. The credit limit should
            greater than or equals to the minimum credit of the product and less
            than the current credit limit.
        dynamicFields:
          $ref: '#/components/schemas/VPDynamicFields'
    StatementV2:
      type: object
      properties:
        documentId:
          type: string
        seriesNum:
          type: string
        dueDate:
          type: string
        paidInFullDate:
          type: string
        overdueDays:
          type: number
        statementAmount:
          type: number
        paidAmount:
          type: number
        unpaidAmount:
          type: number
        statementType:
          $ref: '#/components/schemas/StatementType'
        statementFee:
          type: number
        paymentMethod:
          type: string
          enum:
            - DIRECT_DEBIT
            - OCR
        status:
          $ref: '#/components/schemas/StatementStatus'
        createdDate:
          type: string
          description: format is yyyy-MM-dd hh:mm:ss
        reminder:
          $ref: '#/components/schemas/StatementReminder'
    StatementReminder:
      type: object
      properties:
        createDate:
          type: string
          description: format is yyyy-MM-dd hh:mm:ss
          example: '2024-10-05 00:00:00'
        documentId:
          type: string
          example: 6721cf7be7012432a10c978e
    SpecialPaymentAgreement:
      type: object
      properties:
        id:
          type: integer
          description: ID for special payment agreement
          format: int32
        state:
          type: string
          enum:
            - ACTIVE
            - SCHEDULED
            - FINISHED
        requestMonth:
          type: string
          description: >-
            The requested end month, format as yyyy-MM, such as 2020-01. This
            field is deprecated, please use `startMonth` and `endMonth` instead
            of it.
          deprecated: true
        startMonth:
          type: string
          description: The requested start month, format as yyyy-MM, such as 2020-01.
        endMonth:
          type: string
          description: The requested end month, format as yyyy-MM, such as 2020-03.
        accountNumber:
          type: string
        paymentAgreementType:
          type: string
          enum:
            - AMORTIZATION_FREE_MONTH
            - PAYMENT_FREE_MONTH
            - CUSTOM_AMOUNTS
        administrativeFee:
          type: number
        amortization:
          type: number
          description: >-
            The amortization of custom amounts, required if paymentAgreementType
            is CUSTOM_AMOUNTS
    AccountQuestionnaireBO:
      type: object
      title: AccountQuestionnaireBO
      properties:
        accountId:
          type: integer
        accountNumber:
          type: string
        description:
          type: string
        nickname:
          type: string
        createDate:
          type: string
        balance:
          type: number
        productName:
          type: string
        questionnaireAnswerType:
          type: string
          enum:
            - NO_ANSWERS
            - FORCE_RE_ANSWER
          default: NO_ANSWERS
          example: NO_ANSWERS
      required:
        - accountId
        - accountNumber
        - description
        - createDate
        - productName
        - questionnaireAnswerType
      description: ''
      x-examples:
        example-1:
          accountId: 0
          accountNumber: string
          description: string
          nickname: string
          createDate: string
          balance: 0
          productName: string
          questionnaireAnswerType: NO_ANSWERS
    SpecialPaymentAgreementRequest:
      required:
        - endDate
        - paymentAgreementType
        - startDate
      type: object
      properties:
        paymentAgreementType:
          type: string
          enum:
            - AMORTIZATION_FREE_MONTH
            - PAYMENT_FREE_MONTH
            - CUSTOM_AMOUNTS
        startDate:
          type: string
          description: The requested start month, format as yyyy-MM, such as 2020-01
        endDate:
          type: string
          description: The requested end month, format as yyyy-MM, such as 2020-05
        administrativeFee:
          type: number
        amortization:
          type: number
          description: >-
            The amortization of custom amounts, required if paymentAgreementType
            is CUSTOM_AMOUNTS
    V1AccountSearchResultAPI:
      required:
        - Loan Accounts
      type: object
      properties:
        accounts:
          type: array
          items:
            $ref: '#/components/schemas/V1Account'
    V1Account:
      required:
        - accountNumber
        - accountState
        - accruedInterest
        - activeDate
        - balance
        - closedDate
        - createDate
        - createdByReinvest
        - interestBalance
        - currentInterestBalance
        - nickname
        - noticePeriodEndDate
        - product
        - prohibiting
        - prohibitingReason
        - serialId
        - willbeReinvested
      type: object
      properties:
        serialId:
          type: string
          description: Account Id. It is sequence, from 1 to 9223372036854775807
        accountNumber:
          type: string
          description: Account number
        nickname:
          type: string
          description: Account nick name
        createDate:
          type: string
          description: Create date, format yyyy-MM-dd HH:mm:ss
        activeDate:
          type: string
          description: Active date, format yyyy-MM-dd HH:mm:ss
        closedDate:
          type: string
          description: Close date, format yyyy-MM-dd HH:mm:ss
        accountState:
          type: string
          description: >
            * PENDING: Pending accounts are kept for customers that has not yet
            been identified

            * ACTIVE: Active accounts are those accounts that have had
            transaction

            * DURATION_END: When end of duration, set this status

            * CLOSED: Closed accounts

            * FROZEN:  Frozen accounts don't allow any transaction
          enum:
            - PENDING
            - ACTIVE
            - DURATION_END
            - CLOSED
            - FROZEN
        capWithdrawalFeeToAccruedInterest:
          type: boolean
          description: Cap withdrawal fee to accured interest.
        balance:
          type: number
          description: Balance
          format: double
        accruedInterest:
          type: number
          description: Accrued Interest
          format: double
        interestBalance:
          type: number
          description: Interest Balance
          format: double
        currentInterestBalance:
          type: number
          description: Current Interest Balance
          format: double
        product:
          $ref: '#/components/schemas/DepositProduct'
        prohibiting:
          type: boolean
          description: If true block withdrawal/transfer
        prohibitingReason:
          type: string
          description: Prohibiting reason
        willbeReinvested:
          type: boolean
          description: Will be reinversted
        createdByReinvest:
          type: boolean
          description: Created by reinvested
        noticePeriodEndDate:
          type: string
          description: Notice period end date
        firstDepositTransferred:
          type: boolean
          description: First deposit transferred
        withdrawalFeeNeeded:
          type: boolean
          description: Withdrawal fee is needed
        maxWithdrawalAmount:
          type: number
          description: Maximum withdrawal amount
        interestRateLadderRange:
          type: string
          description: >-
            The value will dependend on the balance, basic interest rate and
            interest rate ladder. The value will be one range like 0.0200-0.0800
            or single value like 0.0200
        kycAnswered:
          type: boolean
          description: >-
            Information if account kyc is answered by customer. If account kyc
            is not configured the value will be "true".
    AccountHistoricalInterest:
      required:
        - accountId
        - effectiveDate
        - debitInterestRate
        - deltaInterestRate
        - hasInterestRateLadder
      type: object
      properties:
        accountId:
          type: string
          description: Account Id. It is sequence, from 1 to 9223372036854775807
        effectiveDate:
          type: string
          description: Effective date for account interest, format yyyy-MM-dd
        debitInterestRate:
          type: string
          description: Debit interest rate
        deltaInterestRate:
          type: string
          description: Delta interest rate
        hasInterestRateLadder:
          type: boolean
          description: >-
            Is set to true if, when the interest change occured, there was an
            active interest rate ladder on the related product.
    DepositCloseAccount:
      required:
        - accruedInterest
        - balance
        - hasPredefinedAccount
        - hasRightOfWithdraw
        - hasWithdrawFee
        - tax
        - toAccountNum
        - toAccountProductName
        - transferBalance
        - withdrawFee
      type: object
      properties:
        balance:
          type: number
          format: double
        withdrawFee:
          type: number
          format: double
        accruedInterest:
          type: number
          format: double
        tax:
          type: number
          format: double
        transferBalance:
          type: number
          format: double
        hasWithdrawFee:
          type: boolean
        hasRightOfWithdraw:
          type: boolean
        hasPredefinedAccount:
          type: boolean
        toAccountNum:
          type: string
        toAccountProductName:
          type: string
    DepositCloseAccountBody:
      required:
        - serialIdOfExternalAccount
      type: object
      properties:
        serialIdOfExternalAccount:
          type: string
        applicationChannel:
          type: string
          default: APP
          enum:
            - APP
            - EBANK
    DepositNoticeAccountBody:
      required:
        - customerId
      type: object
      properties:
        customerId:
          type: string
    DepositTransferAccount:
      required:
        - amount
        - success
        - withdrawFee
      type: object
      properties:
        success:
          type: boolean
        amount:
          type: number
          format: double
        withdrawFee:
          type: number
          format: double
        pendingTransactionId:
          type: string
    DepositTransferAccountBody:
      required:
        - amount
        - serialIdOfToAccount
      type: object
      properties:
        serialIdOfToAccount:
          type: string
        amount:
          type: number
          format: double
        noteForFromAccount:
          type: string
        noteForToAccount:
          type: string
        transactionChannel:
          type: string
          default: USER_ON_APP
          enum:
            - USER_ON_APP
            - USER_ON_MYPAGES
    DepositCreateAccountBody:
      required:
        - accountHolderSerialId
        - customerType
        - ebankApplicationChannel
        - productSerialId
        - reinvestAutomatically
      type: object
      properties:
        productSerialId:
          type: string
          description: Product serial id obtained by the product interface.
        customerType:
          type: string
          description: |
            * PRIVATECUSTOMER: consumer customer
            * LEGALENTITY: SME Representative
            * SME: SME Customer
          enum:
            - PRIVATECUSTOMER
            - LEGALENTITY
            - SME
        accountHolderSerialId:
          type: string
          description: >
            * CustomerType is PRIVATECUSTOMER: consumer customer serial Id. It
            can be obtained through the Customer interface.

            * CustomerType is LEGALENTITY: SME Representative serial id. It can
            be obtained through the SME interface.

            * CustomerType is SME: SME id.
        reinvestAutomatically:
          type: boolean
          description: >-
            If the account support automatic reinvest. Need product support
            reinvest.
          default: false
        ebankApplicationChannel:
          type: boolean
          description: Should be set to true if account is creating through new mypages.
          default: false
    DepositUpdateNickNameAccountBody:
      required:
        - newNickName
      type: object
      properties:
        newNickName:
          type: string
    DepositAccountTransactions:
      type: object
      properties:
        vpTransactionId:
          type: string
          description: Unique id per transaction from Vilja platform
        externalTransactionId:
          type: string
          description: Unique id per transaction from external system
        transactionOrigin:
          $ref: '#/components/schemas/TransactionSource'
        transactionDestination:
          $ref: '#/components/schemas/TransactionSource'
        transactionDate:
          type: string
          description: Transaction date, format yyyy-MM-dd HH:mm:ss
        transactionType:
          type: string
        transactionTypeTranslationKey:
          type: string
          description: Translation key to enabling translation of the transaction type
          enum:
            - transaction.enum.transactionType.adjustment.balance
            - transaction.enum.transactionType.adjustment.generalFee
            - transaction.enum.transactionType.adjustment.interestbalance
            - transaction.enum.transactionType.adjustment.tax
            - transaction.enum.transactionType.adjustment.withdrawfee
            - transaction.enum.transactionType.bookOnAccount
            - transaction.enum.transactionType.GeneralFee
            - transaction.enum.transactionType.interestSettlement
            - transaction.enum.transactionType.internalTransferIn
            - transaction.enum.transactionType.internalTransferOut
            - transaction.enum.transactionType.paybackToCustomer
            - transaction.enum.transactionType.withdrawFee
            - transaction.enum.transactionType.withdraw
            - transaction.enum.transactionType.adjustment.withholdtax
            - transaction.enum.transactionType.deposit
        transactionMsg:
          type: string
        transactionMsgTranslationKey:
          type: string
          description: >-
            Translation key to enabling translation of the transaction message
            generated by the system
          enum:
            - transaction.directDeposit
            - transaction.directWithdrawal
            - transaction.automaticAccountTermination
            - transaction.accountTermination
            - common.deposit
            - mypage.transferTo.message
            - mypage.transferFrom.message
            - transaction.tax.returned
            - mypage.annualFee.message
            - mypage.monthlyFee.message
            - mypage.annualPartialFee.message
            - mypage.monthlyPartialFee.message
        transactionMsgTranslationParam:
          type: string
          description: >-
            An optional parameter for transaction message translation key, e.g.
            account number.
        transactionNote:
          type: string
        amount:
          type: number
          format: double
        outgoingBalance:
          type: number
          format: double
      required:
        - vpTransactionId
        - transactionDate
        - transactionType
        - amount
        - outgoingBalance
    DepositOnetimeDirectDebitDepositBody:
      required:
        - amount
      type: object
      properties:
        amount:
          type: number
          format: double
    DepositChargesCalcAccount:
      required:
        - value
      type: object
      properties:
        value:
          type: number
          format: double
    DepositAccountWithdrawal:
      required:
        - amount
        - serialIdOfPredefinedExternalBankAccount
      type: object
      properties:
        note:
          maxLength: 255
          type: string
          description: The note from end user.
        serialIdOfPredefinedExternalBankAccount:
          type: string
          description: The serial id of predefined external bank account.
        amount:
          type: number
          description: The withdrawal amount.
          format: double
        transactionChannel:
          type: string
          default: USER_ON_APP
          enum:
            - USER_ON_APP
            - USER_ON_MYPAGES
    DepositAccountWithdrawalExternalBankAccount:
      required:
        - type
      type: object
      properties:
        type:
          type: string
          enum:
            - SE_BANK_ACCOUNT
            - NO_BANK_ACCOUNT
            - SE_TRUSTLY
        identifiers:
          type: object
          properties:
            clearingNumber:
              type: string
            accountNumber:
              type: string
      description: The external bank account information.
    DepositAccountExternalWithdrawal:
      required:
        - amount
        - externalBankAccount
        - externalId
        - paymentChannelId
      type: object
      properties:
        externalId:
          type: string
          description: >-
            The unique identifier of the request, which is used to avoid
            repeated submissions, and this field can be to track data between
            the external system and Vilja. UUID is recommended, the maximum
            length is 255.
        paymentChannelId:
          type: string
          description: >-
            Payment channel id, only support payment channel type
            EXTERNALLY_HANDLED.
        note:
          maxLength: 255
          type: string
          description: The note from end user.
        externalBankAccount:
          $ref: '#/components/schemas/DepositAccountWithdrawalExternalBankAccount'
        amount:
          type: number
          description: The withdrawal amount.
          format: double
    DepositAccountExternalWithdrawalValidation:
      required:
        - amount
        - externalBankAccount
        - paymentChannelId
      type: object
      properties:
        paymentChannelId:
          type: string
          description: >-
            Payment channel id, only support payment channel type
            EXTERNALLY_HANDLED.
        note:
          maxLength: 255
          type: string
          description: The note from end user.
        externalBankAccount:
          $ref: '#/components/schemas/DepositAccountWithdrawalExternalBankAccount'
        amount:
          type: number
          description: The withdrawal amount.
          format: double
    KycAnswerItemResponse:
      type: object
      properties:
        id:
          type: string
        questionItemId:
          type: string
        value:
          type: string
    KycDictionaryItem:
      type: object
      properties:
        type:
          type: string
          enum:
            - TEXT_INPUT
            - SINGLE_CHOICE_DROP_DOWN
            - MULTIPLE_CHOICE_CHECKBOX
            - SINGLE_CHOICE_RADIO_BUTTON
        text:
          type: string
        textTranslationKey:
          type: string
        translations:
          type: array
          items:
            type: object
        order:
          type: number
      required:
        - type
    KycDictionary:
      type: object
      properties:
        id:
          type: string
        values:
          type: array
          items:
            $ref: '#/components/schemas/KycDictionaryItem'
    KycDependsOn:
      type: object
      properties:
        and:
          $ref: '#/components/schemas/KycDependsOnCondition'
        or:
          $ref: '#/components/schemas/KycDependsOnCondition'
    KycDependsOnCondition:
      type: object
      properties:
        questionItemId:
          type: string
        value:
          type: object
          properties:
            eq:
              type: array
              items:
                type: string
            notEq:
              type: array
              items:
                type: string
    KycAnswerSnapshot:
      type: object
      properties:
        id:
          type: string
        version:
          type: integer
        status:
          type: string
          enum:
            - ACTIVE
            - INACTIVE
        createTime:
          type: string
        answers:
          type: array
          items:
            $ref: '#/components/schemas/KycAnswerV2'
        tags:
          type: array
          items:
            type: string
    KycAnswerMetadata:
      type: object
      properties:
        key:
          type: string
        value:
          type: string
    KycAnswerItemV2:
      type: object
      properties:
        id:
          type: string
        type:
          type: string
          enum:
            - TEXT_INPUT
            - SINGLE_CHOICE_DROP_DOWN
            - MULTIPLE_CHOICE_CHECKBOX
            - SINGLE_CHOICE_RADIO_BUTTON
        text:
          type: string
        translations:
          type: array
          items:
            type: object
            properties:
              sv:
                type: string
              en:
                type: string
              nb:
                type: string
        textTranslationKey:
          type: string
        order:
          type: string
        dictionary:
          type: object
          properties:
            name:
              type: string
        itemId:
          type: string
        value:
          type: string
        answerItems:
          type: array
          items:
            type: object
    KycAnswerV2:
      type: object
      properties:
        id:
          type: string
        order:
          type: number
        answerItems:
          type: array
          items:
            $ref: '#/components/schemas/KycAnswerItemV2'
        mandatory:
          type: boolean
        tip:
          type: string
        dependsOn:
          $ref: '#/components/schemas/KycDependsOn'
        title:
          type: string
        titleTranslationKey:
          type: string
        translations:
          type: array
          items:
            type: object
            properties:
              en:
                type: string
              sv:
                type: string
              nb:
                type: string
    KycAnswersRequestBody:
      required:
        - questionnaireAnswerItems
        - questionnaireId
      type: object
      properties:
        questionnaireId:
          type: string
        questionnaireAnswerItems:
          type: array
          items:
            $ref: '#/components/schemas/KycAnswerItemRequestBody'
    KycAnswersResponse:
      required:
        - createTime
        - id
        - metadata
        - questionnaire
        - questionnaireAnswerItems
        - status
        - updateTime
      type: object
      properties:
        id:
          type: string
        status:
          type: string
          enum:
            - ACTIVE
            - INACTIVE
        createTime:
          type: string
          description: Create time, format yyyy-MM-dd HH:mm:ss
        updateTime:
          type: string
          description: Update time, format yyyy-MM-dd HH:mm:ss
        questionnaire:
          $ref: '#/components/schemas/KycQuestionnaireResponse'
        questionnaireAnswerItems:
          type: array
          items:
            $ref: '#/components/schemas/KycAnswerItemResponse'
        metadata:
          type: array
          items:
            $ref: '#/components/schemas/KycAnswerMetadata'
      title: ''
    KycAnswersResponseV2:
      type: object
      x-examples:
        example-1:
          id: string
          status: ACTIVE
          createTime: string
          updateTime: string
          metadata:
            - key: string
              value: string
      properties:
        id:
          type: string
        status:
          type: string
          enum:
            - ACTIVE
            - INACTIVE
        createTime:
          type: string
          description: Create time, format yyyy-MM-dd HH:mm:ss
        updateTime:
          type: string
          description: Update time, format yyyy-MM-dd HH:mm:ss
        metadata:
          type: array
          items:
            $ref: '#/components/schemas/KycAnswerMetadata'
        snapshot:
          $ref: '#/components/schemas/KycAnswerSnapshot'
      required:
        - id
        - status
        - createTime
        - updateTime
        - metadata
    KycAnswerItemRequestBody:
      required:
        - questionItemId
        - value
      type: object
      properties:
        questionItemId:
          type: string
        value:
          type: string
    KycQuestionnaireResponse:
      required:
        - createTime
        - id
        - questions
        - status
        - tags
        - version
      type: object
      properties:
        id:
          type: string
        version:
          type: integer
          description: Questionnaire versions
        status:
          type: string
          description: >-
            Can filter by query parameter 'path?status=ACTIVE' to query active
            questionnaires.
          enum:
            - ACTIVE
            - INACTIVE
        createTime:
          type: string
          description: Create time, format yyyy-MM-dd HH:mm:ss
        questions:
          type: array
          items:
            $ref: '#/components/schemas/Questions'
        tags:
          type: array
          items:
            type: string
    AccountCoupon:
      type: object
      properties:
        accountId:
          type: number
        accountNumber:
          type: string
        couponAvailableInCouponPeriod:
          type: boolean
        couponPeriodDurationType:
          type: string
        couponRate:
          type: number
        endOfPeriod:
          type: string
          format: date
        amountLimit:
          type: number
        accountBalanceToCalculateCoupon:
          type: number
    AccountWithCouponAndHolders:
      type: object
      properties:
        account:
          $ref: '#/components/schemas/V1Account'
        holders:
          type: array
          items:
            $ref: '#/components/schemas/CustomerBasicInformationV5'
        guardians:
          type: array
          items:
            $ref: '#/components/schemas/CustomerBasicInformationV5'
        accountCoupon:
          $ref: '#/components/schemas/AccountCoupon'
    AccountWithCouponAndHoldersForSME:
      type: object
      properties:
        account:
          $ref: '#/components/schemas/V1Account'
        holders:
          type: array
          items:
            $ref: '#/components/schemas/CustomerBasicInformationForSMEV5'
        guardians:
          type: array
          items:
            $ref: '#/components/schemas/CustomerBasicInformationForSMEV5'
        accountCoupon:
          $ref: '#/components/schemas/AccountCoupon'
    AccountHolder:
      required:
        - id
        - type
      type: object
      properties:
        type:
          type: string
          description: >
            * SME: SME holder.

            * INDIVIDUAL: Individual holder. Reserved enumeration, not currently
            supported.
          enum:
            - SME
            - INDIVIDUAL
        id:
          type: string
          description: The holder ID, for the SME it is smeId.
    AccountHolderV8:
      required:
        - id
        - type
      type: object
      properties:
        type:
          $ref: '#/components/schemas/AccountHolderType'
        id:
          type: string
          description: The holder ID, for the SME it is smeId.
    RegularLoanAccountForCreationRequestV8:
      type: object
      properties:
        productName:
          type: string
          description: Product name
        manualDeltaInterestRate:
          type: number
          description: >-
            Manual delta interest rate. When need set to 5%, please enter 0.05.
            Support negative, -0.05.
          example: 0.05
        accountHolders:
          type: array
          items:
            $ref: '#/components/schemas/AccountHolderV8'
        state:
          type: string
          description: |
            * PENDING: Waiting for disbursement.
            * OPEN: The disbursement has been made.
          enum:
            - PENDING
            - OPEN
        approvedAmount:
          type: number
          description: >-
            The approved amount, min amount, and max amount depend on the
            product.
        approvedTenorInMonth:
          type: integer
          description: The approved tenor, min tenor, and max tenor depend on the product.
          format: int32
        disbursementAccount:
          $ref: '#/components/schemas/DisbursementAccountV2'
        statementChannel:
          $ref: '#/components/schemas/StatementChannel'
        lastStatementPrincipal:
          type: number
          description: >-
            Last statement principal. Need product support it, prelease use
            `residualAmount` instead.
          deprecated: true
        externalReference:
          type: string
          description: The external reference in other systems. The maximum length is 255.
          example: x-1234567
        externalDisbursement:
          type: object
          description: >-
            The disbursement information in other systems.When state set to
            OPEN, externalDisbursement is required.
          properties:
            disbursementDate:
              type: string
              description: Disbursement date, the format is yyyy-MM-dd.
            remainingTenorInMonth:
              type: integer
              description: Remaing tenor
              format: int32
            paidInterest:
              type: number
              description: Paid interest
            paidAmortization:
              type: number
              description: Paid amortization
          required:
            - disbursementDate
            - remainingTenorInMonth
            - paidInterest
            - paidAmortization
        dynamicFields:
          $ref: '#/components/schemas/VPDynamicFields'
        dueDay:
          type: integer
          description: >
            The account due day (range 1 ~ 31) is only for accounts of products
            configured with floating statement

            Not supported in r8,r9, and r10. Supported in r7 and r11+
          example: 28
        externalPartyId:
          type: string
          description: >-
            External party should be connected to the applied product in LFP in
            Modules->External party.
        salesPerson:
          type: string
          description: >-
            Sales person should be allowed for the chosen external party in LFP
            in Modules->External party.
        offerId:
          type: string
          description: offer id, only for regular account
        residualAmount:
          type: number
          description: Residual amount, need product support it.
      required:
        - productName
        - accountHolders
        - state
        - approvedAmount
        - approvedTenorInMonth
        - statementChannel
    RegularLoanAccountResponseV8:
      type: object
      properties:
        id:
          type: string
        accountNumber:
          type: string
          description: Account Number
        ocrNumber:
          type: string
          description: Account's ocr number
        state:
          $ref: '#/components/schemas/AccountState'
        manualDeltaInterestRate:
          type: number
          description: Manual delta interest rate
        systemDeltaInterestRate:
          type: number
          description: System delta interest rate
        accountHolders:
          type: array
          items:
            $ref: '#/components/schemas/AccountHolderV8'
        approvedAmount:
          type: number
          description: Approved amount
        approvedTenorInMonth:
          type: integer
          description: Approved tenor, only for regular account
          format: int32
        remainingPrincipal:
          type: number
          description: Remaining principal
        remainingTenorInMonth:
          type: integer
          description: Remaining tenor, only for regular account
          format: int32
        statementChannel:
          $ref: '#/components/schemas/StatementChannel'
        lastStatementPrincipal:
          type: number
          description: Last statement principal, prelease use `residualAmount` instead.
          deprecated: true
        externalReference:
          type: string
          description: The external reference in other systems
          example: x-1234567
        disbursementDate:
          type: string
          description: >-
            Disbursement date, the format is yyyy-MM-dd, only for regular
            account
        createDate:
          type: string
          description: Create date, the format is yyyy-MM-dd
          format: date
        totalFeesInInvoices:
          type: number
          description: Sum fees of generated invoices
        creditLimit:
          type: number
          description: Credit limit, only for credit account
        availableCreditLimit:
          type: number
          description: Available credit limit, only for credit account
        totalUnpaidInvoiceAmount:
          type: number
          description: Total unpaid invoice amount
        totalUnpaidOverdueAmount:
          type: number
          description: Total unpaid overdue invoice amount
        totalPaidInterest:
          type: number
          description: Total paid interest
        totalPaidInterestThisYear:
          type: number
          description: Total paid interest this year
        totalPaidFees:
          type: number
          description: Total paid fees
        totalPaidFeesThisYear:
          type: number
          description: Total paid fees this year
        totalVat:
          type: number
          description: Total VAT amount
        totalPaidVat:
          type: number
          description: Total paid VAT amount
        totalPaidVatThisYear:
          type: number
          description: Total paid VAT amount this year
        blockedStatus:
          type: boolean
          description: >-
            Blocked status, it is not allowed to add tranch in account if it is
            true, only for credit account
        disbursementAccount:
          $ref: '#/components/schemas/DisbursementAccountV8'
        documents:
          type: array
          description: >-
            Get all kind of documents, including wp, statement .etc. It always
            return the latest one for promissory note
          items:
            $ref: '#/components/schemas/DocumentV8'
        product:
          $ref: '#/components/schemas/ProductForGetAccountV8'
        application:
          $ref: '#/components/schemas/ApplicationForGetAccountV8'
        mandates:
          type: array
          items:
            $ref: '#/components/schemas/MandateV8'
        schemaMetadata:
          $ref: '#/components/schemas/ViljaSchemaMetadata'
        dynamicFieldsRef:
          type: string
        dynamicFields:
          $ref: '#/components/schemas/VPDynamicFields'
        dueDay:
          type: integer
          example: 28
        offerId:
          type: string
          description: offer id, only for regular account
        residualAmountType:
          $ref: '#/components/schemas/ResidualAmountType'
        residualAmount:
          type: number
          description: Residual amount
        insurances:
          type: array
          description: Insurance information for the account holder(s)
          items:
            $ref: '#/components/schemas/LoanInsuranceResponse'
        assetIds:
          type: array
          items:
            type: string
          description: Asset ids
        appliedTenorInMonth:
          type: integer
          example: 360
          description: Applied tenor in month
        startupFee:
          type: number
          example: 500
          description: Startup fee
        serviceFee:
          description: Service fee
          $ref: '#/components/schemas/ServiceFeeResponse'
        valuationFee:
          type: number
          example: 200
          description: Valuation fee
    RegularLoanAccountForCreationResponseV8:
      type: object
      properties:
        id:
          type: string
        accountNumber:
          type: string
          description: Account Number
        ocrNumber:
          type: string
          description: Account's ocr number
        state:
          $ref: '#/components/schemas/AccountState'
        productName:
          type: string
          description: Product's name
        manualDeltaInterestRate:
          type: number
          description: Manual delta interest rate
        accountHolders:
          type: array
          items:
            $ref: '#/components/schemas/AccountHolderV8'
        approvedAmount:
          type: number
          description: Approved amount
        approvedTenorInMonth:
          type: integer
          description: Approved tenor, only for regular account
          format: int32
        remainingPrincipal:
          type: number
          description: Remaining principal
        remainingTenorInMonth:
          type: integer
          description: Remaining tenor, only for regular account
          format: int32
        statementChannel:
          $ref: '#/components/schemas/StatementChannel'
        lastStatementPrincipal:
          type: number
          description: Last statement principal, prelease use `residualAmount` instead.
          deprecated: true
        externalReference:
          type: string
          description: The external reference in other systems
          example: x-1234567
        disbursementAccount:
          $ref: '#/components/schemas/DisbursementAccountV8'
        schemaMetadata:
          $ref: '#/components/schemas/ViljaSchemaMetadata'
        dynamicFieldsRef:
          type: string
        dynamicFields:
          $ref: '#/components/schemas/VPDynamicFields'
        dueDay:
          type: integer
          example: 28
        offerId:
          type: string
          description: offer id, only for regular account
        residualAmountType:
          $ref: '#/components/schemas/ResidualAmountType'
        residualAmount:
          type: number
          description: Residual amount
    LoanInsuranceResponse:
      type: object
      properties:
        insuranceState:
          type: string
          description: Insurance state
          enum:
            - ACTIVE
            - CANCELLED
            - REGRET
        insuranceType:
          type: string
          description: Insurance type
          enum:
            - LIFE
            - FULL
            - NONE
        startDate:
          type: string
          description: Insurance start date, the format is yyyy-MM-dd
          format: date
        endDate:
          type: string
          description: Insurance end date, the format is yyyy-MM-dd
          format: date
        holderId:
          type: string
          description: Holder id
        holderType:
          $ref: '#/components/schemas/AccountHolderType'
    ServiceFeeResponse:
      type: object
      properties:
        currentPeriodAmount:
          type: number
          description: Current period service fee
          example: 100
    PendingTransaction:
      required:
        - createTime
        - customerName
        - expireTime
        - handledByCustomer
        - id
        - ignoreInOverView
        - requestedCustomerId
        - status
        - type
        - updateTime
      type: object
      properties:
        id:
          type: string
          description: Id of pending transaction.
        customerName:
          type: string
          description: Name of customer who requested the pending transaction..
        requestedCustomerId:
          type: number
          description: Id of customer who requested the pending transaction.
        amount:
          type: number
          description: Amount.
          format: double
        externalBankAccount:
          type: string
          description: External bank account.
        type:
          type: string
          enum:
            - ACCOUNT_WITHDRAWAL
            - ACCOUNT_DELAYED_WITHDRAWAL
            - ACCOUNT_CLOSURE
            - ACCOUNT_DELAYED_TRANSFER
        status:
          type: string
          enum:
            - OPEN
            - DONE
            - FAILED
            - CANCELED
        createTime:
          type: string
          description: Create time.
        updateTime:
          type: string
          description: Update time.
        cancelReason:
          type: string
          enum:
            - TIMEOUT
            - REJECTED
            - REQUESTER_MANUAL
            - CSR_MANUAL
            - GUARDIAN_REMOVED
            - NO_EXTERNAL_ACCOUNT
            - INVALIDATED_BANK_ACCOUNT
            - ACCOUNT_STATUS_CHANGED
            - CUSTOMER_PROHIBITED
            - ACCOUNT_PROHIBITED
            - BALANCE_NOT_ENOUGH
            - CUSTOMER_DECEASED
        expireTime:
          type: string
          description: Expire time.
        ignoreInOverView:
          type: boolean
          description: Information if pending transaction notification should be ignored.
        handledByCustomer:
          type: boolean
          description: >-
            Information if pending transaction is already handled by customer
            calling the endpoint.
    bulkUpdateResponseV8:
      required:
        - updatedResult
        - updatedSize
      type: object
      properties:
        updatedSize:
          type: integer
          description: Number of successfully updated.
        updatedResult:
          type: array
          items:
            type: object
            properties:
              accountNumber:
                type: string
                description: Account number.
              result:
                type: string
                description: Result of update account state, Successful or Failed.
              reason:
                type: string
                description: The reason for failure of update.
    TransactionSource:
      required:
        - reference
        - type
        - vpAccountId
      type: object
      properties:
        type:
          type: string
          description: Types for transaction origin or destination.
          enum:
            - SE_BG
            - SE_PG
            - SE_BANK_ACCOUNT
            - NO_BANK_ACCOUNT
            - IBAN
            - SE_TRUSTLY
            - VP_ACCOUNT
            - SE_DD
        reference:
          type: string
          description: >-
            The actual value for the type. For SE_BANK_ACCOUNT, the reference
            will be like 1111-5444433(e.g).
        vpAccountId:
          type: string
    MandateV8:
      type: object
      properties:
        id:
          type: string
          description: Mandate id
        payerNumber:
          type: string
          description: Payer number
        status:
          type: string
          description: |
            * ESTABLISHED Established
            * CANCELLED Cancelled
          default: ESTABLISHED
          enum:
            - ESTABLISHED
            - CANCELLED
        createDate:
          type: string
          description: Create date, the format is yyyy-MM-dd
          format: date
        holderId:
          type: string
          description: Holder id
    AccountTransactionListResponseV8:
      type: object
      properties:
        currentPage:
          type: integer
          format: int32
          example: 3
        total:
          type: integer
          description: the size of total records.
          format: int32
          example: 45
        _links:
          type: object
          properties:
            self:
              type: object
              properties:
                href:
                  type: string
                  example: /transactions?page=3&size=10
            first:
              type: object
              properties:
                href:
                  type: string
                  example: /transactions?page=1&size=10
            prev:
              type: object
              properties:
                href:
                  type: string
                  example: /transactions?page=2&size=10
            next:
              type: object
              properties:
                href:
                  type: string
                  example: /transactions?page=4&size=10
            last:
              type: object
              properties:
                href:
                  type: string
                  example: /transactions?page=5&size=10
        _embedded:
          type: object
          description: The partial secure messages.
          properties:
            data:
              $ref: '#/components/schemas/Transactions'
      title: ''
    InvoicesResponse:
      type: object
      properties:
        totalCount:
          type: number
        invoices:
          type: array
          items:
            $ref: '#/components/schemas/Invoice'
    Invoice:
      type: object
      properties:
        amortization:
          type: number
        createdDate:
          type: string
          description: format is yyyy-MM-dd
        documentId:
          type: string
        dueDate:
          type: string
          description: format is yyyy-MM-dd
        fees:
          type: number
        interest:
          type: number
        vatAmount:
          type: number
        overdueDays:
          type: number
        paidAmount:
          type: number
        paidInFullDate:
          type: string
          description: format is yyyy-MM-dd
        paymentMethod:
          type: string
          enum:
            - DIRECT_DEBIT
            - OCR
        seriesNum:
          type: string
        type:
          $ref: '#/components/schemas/InvoiceType'
        invoiceAmount:
          type: number
        invoiceFee:
          type: number
        status:
          $ref: '#/components/schemas/InvoiceStatus'
        unpaidAmount:
          type: number
        reminder:
          $ref: '#/components/schemas/StatementReminder'
    InvoiceType:
      type: string
      description: >
        * PENDING: Pending invoice

        * REGULAR: Regular invoice

        * POST_REGULAR: Virtual invoice, it records payment rather than the
        regular invoice. For example: the late interest on the last invoice.
      enum:
        - PENDING
        - REGULAR
        - POST_REGULAR
    InvoiceStatus:
      type: string
      description: |
        * PENDING: Pending invoice
        * UNPAID: Unpaid invoice
        * PARTIALLYPAID: Partial paid invoice
        * PAIDINFULL: Full paid invoice
        * OVERDUE: Overdue invoice
        * COLLECTION: Collection invoice
        * CURING: Curing invoice
        * REVERSED Reversed invoice
      enum:
        - PENDING
        - UNPAID
        - PARTIALLYPAID
        - PAIDINFULL
        - OVERDUE
        - COLLECTION
        - CURING
        - REVERSED
    RegularAccountPaymentPlanItemV8:
      type: object
      properties:
        seriesNum:
          type: integer
          description: Series num
          format: int32
        dueDate:
          type: string
          description: Due date, format is yyyy-MM-dd.
          format: date
        invoiceType:
          type: string
          description: >
            * PENDING Pending invoice

            * REGULAR Regular invoice

            * POST_REGULAR Virtual invoice,record payment other than the regular
            invoice. For example: the late interest on the last invoice.

            * NOT_GENERATED Invoice generation was skipped by collection,
            frozen, etc.
          enum:
            - PENDING
            - REGULAR
            - POST_REGULAR
            - NOT_GENERATED
        invoiceStatus:
          type: string
          description: |
            * GENERATED Invoice generated
            * NOT_GENERATED Invoice not generated
            * PENDING Pending invoice
            * UNPAID Unpaid invoice
            * PARTIALLYPAID Partial paid invoice
            * PAIDINFULL Full paid invoice
            * OVERDUE Overdue invoice
            * COLLECTION Collection invoice
            * CURING Curing invoice
            * CREDIT Credit invoice item exist
            * CURING/CREDIT Curing and credit invoice item exist
            * REVERSED Reversed invoice
          enum:
            - GENERATED
            - NOT_GENERATED
            - PENDING
            - UNPAID
            - PARTIALLYPAID
            - PAIDINFULL
            - OVERDUE
            - COLLECTION
            - CURING
            - CREDIT
            - CURING/CREDIT
            - REVERSED
        totalAmountIncludeVat:
          type: number
          description: Total invoice amount include VAT.
          format: double
        totalAmount:
          type: number
          description: Total invoice amount.
          format: double
        amortization:
          type: number
          description: Amortization included in the invoice.
          format: double
        interest:
          type: number
          description: Interest included in the invoice.
          format: double
        fee:
          type: number
          description: Fee included in the invoice.
          format: double
        rounding:
          type: number
          description: rounding included in the invoice.
          format: double
        vatAmount:
          type: number
          description: VAT amount included in the invoice.
          format: double
        paidAmount:
          type: number
          description: The amount already paid in the invoice.
          format: double
    CreditAccountPaymentPlanItemV8:
      type: object
      properties:
        dueDate:
          type: string
          description: DueDate, format is yyyy-MM.
        tranchePaymentPlans:
          type: array
          description: Tranche payment plans.
          items:
            $ref: '#/components/schemas/TranchePaymentPlanV8'
        totalAmortation:
          type: number
          description: Total amortization.
          format: double
    BUSINESS_REGULAR_ACCOUNT:
      allOf:
        - $ref: '#/components/schemas/AccountPaymentPlanResponseV8'
        - type: object
          properties:
            paymentPlans:
              type: array
              items:
                $ref: '#/components/schemas/RegularAccountPaymentPlanItemV8'
      title: BusinessRegularAccount
      x-examples:
        Regular account payment plan:
          accountType: BUSINESS_REGULAR_ACCOUNT
          paymentPlans:
            - seriesNum: 1000
              dueDate: '2019-08-24'
              invoiceType: PENDING
              invoiceStatus: GENERATED
              totalAmount: 1000
              amortization: 800
              interest: 100
              fee: 100
              paidAmount: 300
    BUSINESS_CREDIT_ACCOUNT:
      allOf:
        - $ref: '#/components/schemas/AccountPaymentPlanResponseV8'
        - type: object
          properties:
            paymentPlans:
              type: array
              items:
                $ref: '#/components/schemas/CreditAccountPaymentPlanItemV8'
      title: BusinessCreditAccount
    AccountPaymentPlanResponseV8:
      type: object
      required:
        - accountType
      properties:
        accountType:
          type: string
      discriminator:
        propertyName: accountType
    TranchePaymentPlanV8:
      type: object
      properties:
        trancheId:
          type: string
          description: Tranche id.
        monthlyAmortization:
          type: number
          description: monthly amortization.
          format: double
    AuthenticationAccessToken:
      type: object
      properties:
        accessToken:
          type: string
    AuthenticationExchangeAccessToken:
      type: object
      properties:
        accessToken:
          type: string
        authenticationCode:
          type: string
    AuthenticationRenew:
      required:
        - accessToken
      type: object
      properties:
        accessToken:
          type: string
    ProhibitingInfo:
      type: object
      properties:
        ssn:
          type: string
        customerId:
          type: string
        prohibitingDescription:
          type: string
        prohibitingReasons:
          type: array
          items:
            $ref: '#/components/schemas/ProhibitingReason'
        underageProhibitings:
          type: array
          items:
            $ref: '#/components/schemas/ProhibitingInfo'
    ProhibitingReason:
      type: string
      enum:
        - BLOCK_UNDERAGE
        - BLOCK_DECEASED
        - BLOCK_MANUAL
        - BLOCK_WITHDRAWAL
        - NONE
        - NOT_CUSTOMER
    V1Type:
      required:
        - companyRepresentative
        - privateCustomer
      type: object
      properties:
        companyRepresentative:
          type: boolean
          description: Company Representative
        privateCustomer:
          type: boolean
          description: consumer customer
    V2InformationAboutMe:
      type: object
      properties:
        companyRepresentative:
          $ref: '#/components/schemas/V5CompanyRepresentativeInformation'
        privateCustomer:
          $ref: '#/components/schemas/PrivateCustomerInformation'
    PrivateCustomerInformation:
      type: object
      properties:
        customerBasicInfo:
          $ref: '#/components/schemas/CustomerBasicInformationV5'
        address:
          $ref: '#/components/schemas/CustomerAddressV5'
        pep:
          $ref: '#/components/schemas/GetCustomerPepV5'
        predefinedExternalBankAccountList:
          type: array
          items:
            $ref: '#/components/schemas/CustomerExternalAccountV5'
        accountList:
          type: array
          items:
            $ref: '#/components/schemas/CustomerAccountV5'
        mandate:
          $ref: '#/components/schemas/Mandate'
        fatcaList:
          type: array
          items:
            $ref: '#/components/schemas/ForeignTaxation'
        secureMessageList:
          type: array
          items:
            $ref: '#/components/schemas/V1SecureMsg'
        underageInfoList:
          type: array
          items:
            $ref: '#/components/schemas/UnderageInformationV5'
        withdrawalAccountChangesInCurrentCalendarYear:
          type: integer
          format: int64
          example: 30
    V2TokenMeInfo:
      required:
        - userId
      type: object
      properties:
        userId:
          type: string
          description: |
            * Swedish SSN with century, e.g. 19811228987x
            * Finnish SSN
    Oauth2TokenErrorResponse:
      type: object
      properties:
        error_description:
          type: string
          description: The description of the error.
        error:
          type: string
          description: The error code.
    ExchangeAccessToken:
      required:
        - reference
      type: object
      properties:
        reference:
          type: string
          description: |
            * Swedish SSN with century. e.g.19811228987x
            * Finnish SSN
        returnTokenType:
          type: string
          enum:
            - AUTHENTICATION_CODE
            - RAW_ACCESS_TOKEN
    InputStream:
      type: object
    CreditLoanProductV2:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
          description: Product name
        baseInterestRate:
          type: number
          description: Base interest rate
        lateInterestRate:
          type: number
          description: Late interest rate
        description:
          type: string
          description: Description
        dueDay:
          type: integer
          description: Due day
          format: int32
        created:
          type: string
          description: Create date
        startupFee:
          type: number
          description: Startup fee
        ocrFee:
          type: number
          description: OCR fee
        directDebitFee:
          type: number
          description: Direct debit fee
        maxLoanAmount:
          type: number
          description: Max loan amount
          format: double
        minLoanAmount:
          type: number
          description: Min loan amount
          format: double
        offerList:
          type: array
          items:
            $ref: '#/components/schemas/OfferV2'
        minimumTrancheAmount:
          type: number
          description: Minimum tranche amount
          format: double
        trancheFeeCapitalizeType:
          maxLength: 255
          type: string
          enum:
            - CAPITALIZED
            - FIRST_STATEMENT
        trancheFee:
          type: number
          description: Tranche fee
          format: double
        minimumTrancheFee:
          type: number
          description: Minimum tranche fee
          format: double
        trancheSlipRequired:
          type: boolean
          description: Indicate whether you require to sign tranche slip
        exceedCreditLimitAllowedFees:
          type: array
          description: Exceed credit limit allowed fees types
          items:
            type: string
            enum:
              - TRANCHE_FEE
        availableTrancheTypes:
          type: array
          description: available tranche types of the product.
          items:
            type: string
            enum:
              - PURCHASE
              - CASH_WITHDRAWAL
        countryCode:
          type: string
          description: >-
            The available country for this product. (Uppercase two-letter
            ISO-3166 code. e.g. SE, FI)
    CreditLoanProductsV2:
      type: object
      properties:
        productList:
          type: array
          items:
            $ref: '#/components/schemas/CreditLoanProductV2'
    RegularLoanProduct:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        baseInterestRate:
          type: number
        referenceInterestRate:
          type: number
        lateInterestRate:
          type: number
        description:
          type: string
        dueDay:
          type: integer
          format: int32
        createDate:
          type: string
        serviceFeeRate:
          type: number
        amountToUseInCalculationServiceFee:
          type: string
          enum:
            - ORIGINAL_AMOUNT
            - REMAINING_AMOUNT
        startupFee:
          type: number
        ocrFee:
          type: number
        directDebitFee:
          type: number
        latePaymentFee:
          type: number
        collectionFeeStatement:
          type: number
        collectionFeeAccount:
          type: number
        reminderFee:
          type: number
    CreditLoanProductWithinAccount:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
          description: Product name
        baseInterestRate:
          type: number
          description: Base interest rate
        lateInterestRate:
          type: number
          description: Late interest rate
        description:
          type: string
          description: Description
        dueDay:
          type: integer
          description: Due day
          format: int32
        created:
          type: string
          description: Create date
        startupFee:
          type: number
          description: Startup fee
        ocrFee:
          type: number
          description: OCR fee
          nullable: true
        directDebitFee:
          type: number
          description: Direct debit fee
          nullable: true
    DepositProduct:
      type: object
      properties:
        serialId:
          type: string
          description: >-
            Product serial id, unique key. It is sequence, from 1 to
            9223372036854775807
        productId:
          type: string
        productVersionId:
          type: string
        name:
          type: string
          description: Product name
        interestRate:
          type: number
          description: Interest Rate
          format: double
        deltaInterestRate:
          type: number
          description: Delta Interest Rate
          format: double
        effectiveInterest:
          type: number
          description: Effective Interest
          format: double
        description:
          type: string
          description: Product description
        durationYear:
          type: integer
          description: Duration Year
          format: int32
        durationDay:
          type: integer
          description: Duration Day
          format: int32
        withdrawalFee:
          type: number
          description: Withdrawal fee
          format: double
        maxFreeWithdrawals:
          type: integer
          description: Max free withdrawals
          format: int32
        withdrawalFeeInPercentage:
          type: number
          description: Withdrawal fee in percentage
          format: double
        withdrawalFeeInPercentageByAccruedInterest:
          type: number
          description: Withdrawal fee in percentage by accrued interest
          format: double
        minimumWithdrawalFee:
          type: number
          description: Min withdrawal fee
          format: double
        maxDepositAmount:
          type: number
          description: Max deposit amount
          format: double
        minDepositAmount:
          type: number
          description: Min deposit amount
          format: double
        created:
          type: string
          description: Create date, format yyyy-MM-dd HH:mm
        settlementType:
          type: string
          description: >
            * MONTHLY At first day of month, often in the morning, the
            InterestCalculationJob firstly do daily interest calculation, then
            book last month's interest.

            * QUARTERLY First of April, first of July, first of Oct and first of
            next year

            * YEARLY At first day of year, often in the morning, the
            InterestCalculationJob firstly do daily interest calculation, then
            book last year's interest.

            * END_OF_DURATION At the end of the duration, the
            InterestCalculationJob firstly do daily interest calculation, then
            book the interest of the duration.
          enum:
            - MONTHLY
            - QUARTERLY
            - YEARLY
            - END_OF_DURATION
        forCompany:
          type: boolean
          description: Company Only
        reinvestEnabled:
          type: boolean
          description: Reinvestment enabled
        reinvestBonus:
          type: number
          description: Reinvestment bonus
          format: double
        hasTermsAndConditions:
          type: boolean
          description: Has terms and conditions
        reinvestAutomatically:
          type: boolean
          description: Reinvest automatically
        onlyAllowedOneDeposit:
          type: boolean
          description: Allow only one deposit
        allowAutogiro:
          type: boolean
          description: Allow Autogiro
        floatingInterest:
          type: boolean
          description: Is the interest rate floating (when true) or fixed (when false)
        noticePeriodEnabled:
          type: boolean
          description: Notice period enabled
        allowTransferOrClosure:
          type: boolean
          description: Allow transfer or closure
        delayedWithdrawalsEnabled:
          type: boolean
          description: Delayed withdrawal is enabled
        noticePeriodYears:
          type: integer
          description: Notice period years
        noticePeriodDays:
          type: integer
          description: Notice period days
        interestRateForNoticePeriod:
          type: number
          description: Interest rate for notice period
        delayedWithdrawalsYear:
          type: integer
          description: Delayed withdrawal year
          format: int32
        delayedWithdrawalsDay:
          type: integer
          description: Delayed withdrawal day
          format: int32
        capWithdrawalFeeToAccruedInterest:
          type: boolean
          description: Cap withdrawal fee to accured interest.
        permitFreeWithdrawalFromInterestBalance:
          type: boolean
          description: Permit free withdrawal from the accounts' capitalized interest
        interestRateLadder:
          $ref: '#/components/schemas/InterestRateLadder'
        trustAccount:
          type: boolean
        taxExempt:
          type: boolean
        directWithdrawToExternalAccount:
          type: boolean
      required:
        - serialId
        - name
        - interestRate
        - deltaInterestRate
        - effectiveInterest
        - description
        - durationYear
        - durationDay
        - withdrawalFee
        - maxFreeWithdrawals
        - withdrawalFeeInPercentage
        - withdrawalFeeInPercentageByAccruedInterest
        - minimumWithdrawalFee
        - maxDepositAmount
        - minDepositAmount
        - created
        - settlementType
        - forCompany
        - reinvestEnabled
        - reinvestBonus
        - hasTermsAndConditions
        - reinvestAutomatically
        - onlyAllowedOneDeposit
        - allowAutogiro
        - floatingInterest
        - noticePeriodEnabled
        - allowTransferOrClosure
        - noticePeriodYears
        - noticePeriodDays
        - interestRateForNoticePeriod
    InterestRateLadder:
      type: object
      properties:
        calculateEachPartOfTheBalanceSeparately:
          type: boolean
          default: false
        noInterestForLastInterestRateLadderStep:
          type: boolean
          default: false
        details:
          type: array
          items:
            $ref: '#/components/schemas/InterestRateLadderDetail'
    InterestRateLadderDetail:
      type: object
      properties:
        balanceFrom:
          type: number
        balanceTo:
          type: number
          description: For last ladder step, this will be null.
        deltaInterestRate:
          type: number
          description: Interest Rate
          format: double
    ProductForGetAccountV8:
      type: object
      properties:
        id:
          type: string
          description: Product id
        name:
          type: string
          description: Product name
        baseInterestRate:
          type: number
          description: Base interest rate
        referenceInterestRate:
          type: number
          description: Reference interest rate
        lateInterestRate:
          type: number
          description: Late interest rate
    OfferV2:
      type: object
      properties:
        id:
          maxLength: 255
          type: string
          description: The ID of offer
        administrativeFee:
          type: number
          description: The administrative fee of tranche
          format: double
        shortName:
          maxLength: 255
          type: string
          description: The short name of offer
        name:
          maxLength: 255
          type: string
          description: The name of offer
        initialPaymentFreePeriod:
          type: integer
          description: The initial payment free period of tranche
          format: int32
        paymentPlanLength:
          type: integer
          description: The payment plan length of tranche
          format: int32
        minimumTrancheAmount:
          type: number
          description: The minimum tranche amount of tranche
          format: double
        trancheFeeCapitalizeType:
          maxLength: 255
          type: string
          description: Tranche fee capitalize type
          enum:
            - CAPITALIZED
            - FIRST_STATEMENT
        trancheFee:
          type: number
          description: Tranche fee
          format: double
        minimumTrancheFee:
          type: number
          description: Minimum tranche fee
          format: double
    ExternalParties:
      type: object
      properties:
        externalPartyList:
          type: array
          items:
            $ref: '#/components/schemas/ExternalParty'
    ExternalParty:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        defaultProductId:
          type: string
        availableProductList:
          type: array
          items:
            $ref: '#/components/schemas/ExternalPartyProduct'
        administrativeAreas:
          type: array
          items:
            $ref: '#/components/schemas/AdministrativeArea'
    ExternalPartyProduct:
      type: object
      properties:
        productId:
          type: string
        productName:
          type: string
        productType:
          type: string
    AdministrativeArea:
      type: object
      properties:
        id:
          type: string
        administrativeAreaName:
          type: string
        users:
          type: array
          items:
            type: string
        address:
          type: object
          properties:
            streetAddress:
              type: string
            coAddress:
              type: string
            zipCode:
              type: string
            city:
              type: string
            country:
              type: string
            complementingInformation:
              type: string
            supplementaryStreetAddress:
              type: string
            propertyNumber:
              type: string
            apartmentNumber:
              type: string
            floorNumber:
              type: string
            buildingName:
              type: string
            region:
              type: string
        contactInformation:
          type: object
          properties:
            email:
              type: string
            web:
              type: string
            phone:
              type: string
    SignPNBody:
      type: object
      properties:
        ssn:
          type: string
          example: '193504049135'
        browserRedirectURL:
          type: string
          example: http://redirecturl.com
        browserRedirectURLOnCancel:
          type: string
          example: http://redirecturloncancel.com
        signedNotificationURL:
          type: string
          example: http://callback.com
    SignPNResponse:
      type: object
      properties:
        signSessionID:
          type: string
          example: 5d13356d9194be001661755b
        signURL:
          type: string
          example: >-
            https://preprod.signicat.com/std/docaction/demo?request_id=260620194b1k9wuqtsgp6681yciyf2lii2wxuxji60gh1rec0bqmicx8e9&task_id=97fe32deb39c4374a56b19b823ddd4df&prefilled.subject=196808041815
    V5CompanyRepresentativeInformation:
      type: object
      properties:
        companyRepresentativeBasicInfo:
          $ref: '#/components/schemas/V5CompanyRepresentativeBasicInfo'
        address:
          $ref: '#/components/schemas/V1Address'
        pep:
          $ref: '#/components/schemas/V1PepForLegal'
        secureMessageList:
          type: array
          items:
            $ref: '#/components/schemas/V1SecureMsg'
        legalEntity:
          $ref: '#/components/schemas/V5LegalEntity'
    V5CompanyRepresentativeBasicInfo:
      required:
        - century
        - companyRepresentativeSerialId
        - email
        - givenName
        - middleName
        - mobilePhone
        - phone
        - ssn
        - surname
      type: object
      properties:
        companyRepresentativeSerialId:
          type: string
          description: It is sequence, from 1 to 9223372036854775807
        century:
          type: string
          description: |
            * Swedish SSN's century, e.g. 19(without 811228987x)
        ssn:
          type: string
          description: |
            * Swedish SSN without century, e.g. (without 19)811228987x
            * Finnish SSN
        givenName:
          type: string
        surname:
          type: string
        middleName:
          type: string
        email:
          type: string
        phone:
          type: string
        mobilePhone:
          type: string
    V5LegalEntity:
      required:
        - accountList
        - foreignTaxationList
        - legalEntityBasicInfo
      type: object
      properties:
        legalEntityBasicInfo:
          $ref: '#/components/schemas/V5LegalEntityBasicInfo'
        accountList:
          type: array
          items:
            $ref: '#/components/schemas/V1Account'
        foreignTaxationList:
          type: array
          items:
            $ref: '#/components/schemas/V1ForeignTaxation'
    V5LegalEntityBasicInfo:
      type: object
      properties:
        serialId:
          type: string
        organizationalNumber:
          type: string
        companyName:
          type: string
        category:
          type: string
        categoryUpdateDate:
          type: string
      required:
        - serialId
        - organizationalNumber
        - companyName
    V5CompanyRepresentativeBasicUpdateInfo:
      required:
        - email
        - mobilePhone
        - phone
      type: object
      properties:
        email:
          type: string
        phone:
          type: string
        mobilePhone:
          type: string
    V5CompanyRepresentativeUpdateInfo:
      type: object
      properties:
        companyRepresentativeBasicInfoUpdate:
          $ref: '#/components/schemas/V5CompanyRepresentativeBasicUpdateInfo'
        pep:
          $ref: '#/components/schemas/V1PepForLegal'
    V1SecureMsg:
      required:
        - handled
        - hasRead
        - lastReplytext
        - messageBodyInAscii
        - messageBodyInHtml
        - messageSubject
        - needNotReply
        - numberOfReply
        - readTime
        - sendTime
        - sender
        - serialId
        - updateTime
      type: object
      properties:
        serialId:
          type: string
          description: It is sequence, from 1 to 9223372036854775807
        sendTime:
          type: string
          description: Send time,format yyyy-MM-dd HH:mm:ss
        accountNumber:
          type: string
        messageSubject:
          type: string
        messageBodyInHtml:
          type: string
        messageBodyInAscii:
          type: string
        readTime:
          type: string
          description: Read time,format yyyy-MM-dd HH:mm:ss
        hasRead:
          type: boolean
        needNotReply:
          type: boolean
        sender:
          type: string
        numberOfReply:
          type: string
        updateTime:
          type: string
          description: Update time,format yyyy-MM-dd HH:mm:ss
        lastReplytext:
          type: string
        handled:
          type: boolean
        conversation:
          type: boolean
    V1SecureMessageReplyBody:
      required:
        - secureMessageReplySerialId
      type: object
      properties:
        secureMessageReplySerialId:
          type: string
        underAgePrivateCustomerId:
          type: string
          description: >-
            The consumer customer id of under-age what you want to
            query.Default: Customer id in token.
    V1ReadStatusBody:
      required:
        - secureMessageSerialId
      type: object
      properties:
        secureMessageSerialId:
          type: string
        underAgePrivateCustomerId:
          type: string
          description: >-
            The consumer customer id of under-age what you want to
            query.Default: Customer id in token.
        companyRepresentativeId:
          type: string
    V1SendSecureMsg:
      required:
        - messageBodyInHtml
        - messageSubject
      type: object
      properties:
        messageSubject:
          type: string
        messageBodyInHtml:
          type: string
        underAgePrivateCustomerId:
          type: string
          description: >-
            The consumer customer id of under-age what you want to
            query.Default: Customer id in token.
        companyRepresentativeId:
          type: string
          description: The company representative id what you want to query.
    V1ReplySecureMessage:
      required:
        - messageBodyInHtml
      type: object
      properties:
        messageBodyInHtml:
          type: string
        underAgePrivateCustomerId:
          type: string
          description: >-
            The consumer customer id of under-age what you want to
            query.Default: Customer id in token.
        companyRepresentativeId:
          type: string
          description: The company representative id what you want to query.
    V1SecureMessageAttachment:
      required:
        - filename
        - documentId
        - secureMessageId
      type: object
      properties:
        filename:
          type: string
        documentId:
          type: string
        secureMessageId:
          type: string
        secureMessageReplyId:
          type: string
    V4SmeRepresentativeBasicInformation:
      type: object
      properties:
        companyName:
          type: string
        organizationalNumber:
          type: string
        serialId:
          type: string
        category:
          type: string
        categoryUpdateDate:
          type: string
      required:
        - companyName
        - organizationalNumber
        - serialId
    LegalEntityOwnerBasicInfo:
      required:
        - birthDate
        - century
        - givenName
        - ssn
        - surname
      type: object
      properties:
        id:
          type: number
        century:
          type: string
        ssn:
          type: string
        givenName:
          type: string
        middleName:
          type: string
        surname:
          type: string
        birthDate:
          type: string
        email:
          type: string
        telephone:
          type: string
        ownershipPercentage:
          type: number
        roleInCompany:
          type: string
    LegalEntityOwner:
      type: object
      properties:
        legalEntityOwnerBasicInfo:
          $ref: '#/components/schemas/LegalEntityOwnerBasicInfo'
        address:
          $ref: '#/components/schemas/AddressV4'
        pep:
          $ref: '#/components/schemas/V1PepForLegal'
        fatcaList:
          type: array
          items:
            $ref: '#/components/schemas/ForeignTaxation'
    V1EngagementReport:
      required:
        - content
        - createDate
        - customerId
        - customerType
        - fileName
        - reportDate
        - reportSerialId
      type: object
      properties:
        customerType:
          type: string
          enum:
            - PRIVATECUSTOMER
            - LEGALENTITY
        reportSerialId:
          type: string
        customerId:
          type: string
        reportDate:
          type: string
        fileName:
          type: string
        createDate:
          type: string
        content:
          $ref: '#/components/schemas/InputStream'
    V1EngagementReportForCreate:
      required:
        - reportDate
      type: object
      properties:
        reportDate:
          type: string
        underAgePrivateCustomerId:
          type: string
          description: >-
            The consumer customer id of under-age what you want to
            query.Default: Customer id in token.
        smeId:
          type: string
    ReportFileIds:
      required:
        - ids
      type: object
      properties:
        ids:
          type: array
          items:
            type: string
    ReportFileIdsByType:
      required:
        - le-transactions-report
        - le-accounts-report
        - le-customers-report
      type: object
      properties:
        le-accounts-report:
          $ref: '#/components/schemas/ReportFileIds'
        le-customers-report:
          $ref: '#/components/schemas/ReportFileIds'
        le-transactions-report:
          $ref: '#/components/schemas/ReportFileIds'
    V1YearlySummaryReport:
      required:
        - content
        - customerId
        - customerType
        - fileName
      type: object
      properties:
        customerType:
          type: string
          enum:
            - PRIVATECUSTOMER
            - LEGALENTITY
        customerId:
          type: string
        fileName:
          type: string
        content:
          $ref: '#/components/schemas/InputStream'
    V1DepositAccountTransactionReport:
      required:
        - contentType
        - name
        - stream
      type: object
      properties:
        name:
          type: string
        stream:
          $ref: '#/components/schemas/InputStream'
        contentType:
          type: string
    OriginationViewBO:
      required:
        - createDateTime
        - id
        - mainApplicantPersonalId
        - status
        - updateDateTime
      type: object
      properties:
        id:
          type: string
        externalReference:
          type: string
        mainApplicantPersonalId:
          type: string
        coApplicantPersonalId:
          type: string
        status:
          type: string
          enum:
            - EVAL_APPLICATION
            - WAIT_FOR_APPROVE
            - WAIT_FOR_CONNECT_DEEDS
            - WAIT_FOR_COLLATERAL
            - WAIT_ACCOUNT_CREATED
            - UPDATE_COLLATERAL_WORK_QUEUE
            - REJECTED
            - RUNNING
            - ENDED
            - ACCOUNT_CREATED
            - UN_PROCESSED
        createDateTime:
          type: string
        updateDateTime:
          type: string
        loanApplicationId:
          type: string
        loanAccountId:
          type: string
        collateralIds:
          type: array
          items:
            type: string
        documents:
          type: array
          items:
            $ref: '#/components/schemas/OriginationDocument'
        events:
          type: array
          items:
            $ref: '#/components/schemas/EventViewBO'
        actualMonthlyAmortization:
          type: number
    OriginationDocument:
      type: object
      properties:
        fileName:
          type: string
        documentId:
          type: string
        documentType:
          type: string
          enum:
            - VALUATION
            - CO_OP_ANNUAL_REPORT
            - PROPERTY_DATA
        documentSignStatus:
          type: string
          enum:
            - SIGNED_NOT_DOWNLOADED
            - SIGNED_DOWNLOADING
            - UNSIGNED
            - SIGNED
    EventViewBO:
      type: object
      properties:
        createDateTime:
          type: string
        content:
          type: string
    UploadOriginationDocumentBody:
      required:
        - documentType
        - files
      type: object
      properties:
        documentType:
          type: string
          description: Enumeration of types defined in VP
          enum:
            - PURCHASE_CONTRACT
            - AMORTIZATION_VERIFICATION
            - VALUATION
            - POWER_OF_ATTORNEY
            - CO_OP_ANNUAL_REPORT
            - PROPERTY_DATA
            - CERTIFICATE_OF_EMPLOYER
            - PAYSLIP
            - STATEMENT
            - OTHERS
            - LOAN_COMMITMENT
            - LOAN_COMMITMENT_OTHER_BANK
            - GENERAL_COLLATERAL
        documentSignStatus:
          type: string
          description: |
            * UNSIGNED Unsigned,default value.
            * MANUAL_SIGNED  Manual signed.
            * DIGITAL_SIGNED Digital signed.
          default: UNSIGNED
          enum:
            - UNSIGNED
            - MANUAL_SIGNED
            - DIGITAL_SIGNED
        files:
          type: array
          description: >
            * jpg, gif, jpeg, bmp, png, tif and pdf supported

            * max size limited by configuartion earchive.upload.maxFileSize or
            80MB by default
          items:
            type: string
            format: binary
    AddressBO:
      type: object
      properties:
        careOf:
          type: string
          description: Maxium length is 255
        address:
          type: string
          description: Maxium length is 255
        postalCode:
          type: string
          description: >-
            ZIP code. The format varies by country - for example, five digits
            for SE.
        city:
          type: string
          description: Maxium length is 255
        country:
          type: string
          description: International 2-letter standard (ISO 3166-1 alpha-2)
        region:
          type: string
          description: Maxium length is 255
        apartmentNumber:
          type: string
          description: Maxium length is 255
        propertyNumber:
          type: string
          description: Maxium length is 255
        buildingName:
          type: string
          description: Maxium length is 255
        floorNumber:
          type: string
          description: Maxium length is 255
        complementingInformation:
          type: string
          description: Maxium length is 255
    CreditBO:
      type: object
      properties:
        sum:
          type: number
          description: Positive number, support two decimal places
        rate:
          type: number
          description: >-
            Positive percent number, between 0 and 100 (e.g. 32 means 32%),
            support two decimal places
        paybackTime:
          type: integer
          description: >-
            Number in months, accept positive integer and automatically round
            digits
          format: int32
        monthlyCost:
          type: number
          description: Positive number, support two decimal places
        typeOfCredit:
          type: string
          enum:
            - HOUSE_MORTGAGE
            - CREDIT_CARD
            - HIRE_PURCHASE
            - UNSECURED
            - OTHER
            - APARTMENT_MORTGAGE
            - LOAN_COMMITMENT
            - CAR_LOAN
            - STUDENT_LOAN
        externalLoanAccountNumber:
          type: string
        validForCollateral:
          type: boolean
          description: Is valid for collateral
        amortization:
          type: number
          description: Positive number
    DisbursementAccountForOrigination:
      type: object
      properties:
        type:
          type: string
          description: >
            If number has value, type is mandatory

            * SE_CLEARING, Swedish bank account number, refer to
            https://www-2.danskebank.com/link/Bankernaskontonummer. Support
            Sweden only. e.g. 9551-1112110

            * IBAN, International Bank Account Number, refer to
            https://www.investopedia.com/terms/i/iban.asp. Support Finland and
            Nederland only. e.g. FI2112345600000785
          enum:
            - SE-CLEARING
            - IBAN
        number:
          type: string
          description: If type has value, number is mandatory
    EmploymentInfoV2BO:
      required:
        - employer
        - employmentType
        - salary
      type: object
      properties:
        employer:
          type: string
          description: >
            Employment info, when employmentType is
            STUDENT/RETIRED/EARLY_RETIRED/NO_WORK, no employer needed, only
            salary parameter is the mandatory; When employmentType is others,
            employer and salary are mandatory
        employmentType:
          type: string
          enum:
            - FULL
            - TRIAL
            - RETIRED
            - HOURLY
            - EARLY_RETIRED
            - PROJECT
            - SELF_EMPLOYED
            - COMPANY_OWNER
            - NO_WORK
            - STUDENT
            - TEMPORARY
            - TIME_OFF
            - PART_TIME
        salary:
          type: number
          description: Positive number
        netSalary:
          type: number
          description: Positive number
        employedAt:
          type: string
          description: Format is yyyy-MM-dd, should be before employerEndDate
        employerEndDate:
          type: string
          description: >-
            Format is yyyy-MM-dd, should be after employedAt, and only works
            when employmentType is PROJECT or TEMPORARY
        isManagementTeamMember:
          type: boolean
        referencePhone:
          type: string
          description: >-
            Employer phone, validate by google libphonenumber, refer to
            https://libphonenumber.appspot.com/
    OriginationRequested:
      required:
        - appliedAmount
        - appliedProductID
        - mainApplicant
        - mortgageType
      type: object
      properties:
        appliedProductID:
          type: string
        externalReference:
          type: string
          description: The maxium length is 2048
        appliedAmount:
          type: number
          description: Accept positive number
        tenorInMonth:
          type: integer
          description: >-
            Number in months, accept positive integer and automatically round
            digits
          format: int32
        credits:
          type: array
          items:
            $ref: '#/components/schemas/CreditBO'
        mainApplicant:
          $ref: '#/components/schemas/LoanApplicantV2'
        coApplicant:
          $ref: '#/components/schemas/LoanApplicantV2'
        disbursementAccount:
          $ref: '#/components/schemas/DisbursementAccountForOrigination'
        mortgageType:
          type: string
          enum:
            - PURCHASE
            - RE_MORTGAGE
            - FIRSTTIMEBUYER
        collaterals:
          type: array
          items:
            $ref: '#/components/schemas/CollateralExternalBO'
        extras:
          type: object
          additionalProperties:
            type: string
          description: Max length for each properties is 255.
    OriginationStarted:
      required:
        - originationId
      type: object
      properties:
        originationId:
          type: string
    DisbursementAccountForLoan:
      type: object
      properties:
        type:
          type: string
          description: >
            If number has value, type is mandatory

            * SE-CLEARING, Swedish bank account number, refer to
            https://www-2.danskebank.com/link/Bankernaskontonummer. Support
            Sweden only. e.g. 9551-1112110

            * SE-BG, Bankgiro number, refer to https://www.bankgirot.se. Support
            Sweden only. e.g. 10101020

            * SE-PG, Plusgiro number, refer to https://www.plusgirot.se. Support
            Sweden only. e.g. 4101010
          enum:
            - SE-CLEARING
            - SE-BG
            - SE-PG
        number:
          type: string
          description: If type has value, number is mandatory
    CollateralUpdated:
      required:
        - collateralId
      type: object
      properties:
        collateralId:
          type: string
    CollateralExternalBO:
      type: object
      properties:
        id:
          type: string
        collateralType:
          type: string
          enum:
            - PROPERTY
            - CO_OP
        area:
          type: number
          description: Accept positive number
        propertyMonthlyCost:
          type: number
          description: Accept positive number
        numberOfRooms:
          type: integer
          description: Accept positive integer and automatically round digits
          format: int32
        accessDate:
          type: string
          description: Date, format is yyyy-MM-dd (e.g. 2001-03-01)
        county:
          type: string
          description: International 2-letter standard (ISO 3166-1 alpha-2)
        street:
          type: string
        postCode:
          type: string
          description: >-
            ZIP code. The format varies by country - for example, five digits
            for SE.
        city:
          type: string
        marketValue:
          type: number
          description: Positive number, required for RE_MORTGAGE
        purchasePrice:
          type: number
          description: Positive number
        owners:
          type: array
          items:
            $ref: '#/components/schemas/Owner'
        apartmentNumber:
          type: string
        monthlyFee:
          type: number
          description: Accept positive number
        downPayment:
          type: integer
          description: Accept positive integer and automatically round digits
          format: int32
        ltv:
          type: number
          description: Accept positive number
        internalLTV:
          type: number
          description: Accept positive number
    Owner:
      type: object
      properties:
        name:
          type: string
        portion:
          type: number
    CollateralUpdateRequestBO:
      required:
        - accessDate
      type: object
      properties:
        accessDate:
          type: string
          description: Date, format is yyyy-MM-dd (e.g. 2001-03-01)
    OriginationApplicationUpdateResponse:
      required:
        - decision
        - message
      type: object
      properties:
        decision:
          type: string
          enum:
            - accepted
            - rejected
        message:
          type: string
    OriginationRequestedV2:
      required:
        - appliedAmount
        - appliedProductID
        - mainApplicant
        - mortgageType
      type: object
      properties:
        appliedProductID:
          type: string
        externalReference:
          type: string
          description: The maxium length is 2048
        appliedAmount:
          type: number
          description: Accept positive number
        tenorInMonth:
          type: integer
          description: >-
            Number in months, accept positive integer and automatically round
            digits
          format: int32
        credits:
          type: array
          items:
            $ref: '#/components/schemas/CreditBO'
        mainApplicant:
          $ref: '#/components/schemas/LoanApplicantV3'
        coApplicant:
          $ref: '#/components/schemas/LoanApplicantV3'
        disbursementAccount:
          $ref: '#/components/schemas/DisbursementAccountForOrigination'
        mortgageType:
          type: string
          enum:
            - PURCHASE
            - RE_MORTGAGE
            - FIRSTTIMEBUYER
        collaterals:
          type: array
          items:
            $ref: '#/components/schemas/CollateralExternalBO'
        extras:
          type: object
          additionalProperties:
            type: string
          description: Max length for each properties is 255.
        loanPurposes:
          type: string
        loanPurposeText:
          type: string
        children:
          type: array
          items:
            $ref: '#/components/schemas/ChildBO'
        accommodations:
          type: array
          items:
            $ref: '#/components/schemas/AccommodationBO'
    OriginationRequest:
      required:
        - appliedProductId
        - customer
        - desiredAmount
        - preferredDisbursementAccount
      type: object
      properties:
        appliedProductId:
          type: string
          description: >-
            The product Id, it should be provided from the defined products in
            VP platform.
          example: '1234567'
        desiredAmount:
          type: number
          description: Desired Amount.
          example: 12345
        desiredTenor:
          type: integer
          description: >-
            It is only required for the regular application, credit application
            does not support the field, it will return null.
          example: 36
        externalReference:
          type: string
          description: The external reference in other system.
          example: x-1234567
        preferredDisbursementAccount:
          $ref: '#/components/schemas/DisbursementAccountForSME'
        customer:
          $ref: '#/components/schemas/OriginationBusinessCustomer'
        submitter:
          $ref: '#/components/schemas/BasicPersonReference'
        guarantees:
          type: array
          items:
            $ref: '#/components/schemas/OriginationV1Guarantee'
    OriginationBusinessCustomer:
      required:
        - companyName
        - organizationCountryCode
        - organizationNumber
      type: object
      properties:
        organizationNumber:
          type: string
          description: >-
            There is no format validation for organizationNumber, both format
            support: NNNNNNNNNNN and NNNNNNN-NNNN
          example: '5567447056'
        organizationCountryCode:
          type: string
          description: Country code (Uppercase two-letter ISO-3166 code. e.g. SE, FI)
          example: SE
        companyName:
          type: string
          example: Vilja Solutions AB
    BasicPersonReference:
      required:
        - reference
        - referenceType
      type: object
      properties:
        reference:
          type: string
          description: >-
            Both CCYYMMDDNNNN and CCYYMMDD-NNNN are supported for the Swedish
            SSN
          example: '193504049135'
        referenceType:
          type: string
          description: If the reference type.
          enum:
            - SSN
            - OTHERS
        email:
          type: string
          description: >-
            Matches the regular expression
            ^[_A-Za-z0-9-\+]+(\.[_A-Za-z0-9-]+)*@[A-Za-z0-9-]+(\.[A-Za-z0-9]+)*(\.[A-Za-z]{1,})$
          example: info@viljasolutions.com
        phoneNumber:
          description: >-
            Phone number, validate by google libphonenumber, refer to
            https://libphonenumber.appspot.com/
          example: '+468123456'
    OriginationV1Guarantee:
      required:
        - guaranteeAmount
        - guarantor
      type: object
      properties:
        guaranteeAmount:
          type: number
          description: Positive integer
        guarantorCategory:
          type: string
          description: Guarantor category
        guarantor:
          $ref: '#/components/schemas/OriginationV1Guarantor'
    OriginationV1Guarantor:
      required:
        - birthDate
        - givenName
        - reference
        - referenceType
        - surname
      type: object
      properties:
        reference:
          type: string
          description: >-
            If referenceType is SSN, both CCYYMMDDNNNN and CCYYMMDD-NNNN are
            supported
          example: '193504049135'
        referenceType:
          type: string
          description: If the reference type is null, default value is SSN.
          default: SSN
          enum:
            - SSN
            - OTHERS
        givenName:
          type: string
        preferredName:
          type: string
        surname:
          type: string
        birthDate:
          type: string
          description: BirthDate, format yyyy-MM-dd
        nationality:
          type: string
          description: Country code (Uppercase two-letter ISO-3166 code. e.g. SE, FI)
        selfAssessedPEP:
          type: string
          description: Self assessed-PEP， the "NULL" will be used if not provided.
          default: 'NULL'
          enum:
            - 'NULL'
            - PEP
            - RELATED_TO_PEP
            - NOT_PEP
        selfAssessedPepDescription:
          type: string
          description: >-
            Description self assessed-PEP, only needed when selfAssessedPEP is
            not NULL.
        address:
          $ref: '#/components/schemas/OriginationV1GuarantorAddress'
        email:
          type: string
          description: >-
            Matches the regular expression
            ^[_A-Za-z0-9-\+]+(\.[_A-Za-z0-9-]+)*@[A-Za-z0-9-]+(\.[A-Za-z0-9]+)*(\.[A-Za-z]{1,})$
          example: info@viljasolutions.com
        phone:
          type: string
          description: >-
            Phone number.It is mandatory when mobilePhone is empty,validate by
            google libphonenumber, refer to https://libphonenumber.appspot.com/
          example: '+468123456'
        mobilePhone:
          type: string
          description: >-
            Mobile number.It is mandatory when phone is empty,validate by google
            libphonenumber, refer to https://libphonenumber.appspot.com/
          example: '+468123456'
    OriginationV1GuarantorAddress:
      type: object
      properties:
        streetAddress:
          type: string
          description: Street address
        supplementaryStreetAddress:
          type: string
          description: Supplementary street address
        region:
          type: string
          description: Region
        zipCode:
          type: string
          description: Zip code
        city:
          type: string
          description: City
        country:
          type: string
          description: Country code (Uppercase two-letter ISO-3166 code. e.g. SE, FI)
        coAddress:
          type: string
          description: C/O address
        apartmentNumber:
          type: string
          description: Apartment number
        propertyNumber:
          type: string
          description: Property number
        buildingName:
          type: string
          description: Building name
        floorNumber:
          type: string
          description: Floor number
        complementingInformation:
          type: string
          description: Complementing information
    EngagementEntityViewBO:
      type: object
      properties:
        originations:
          type: array
          items:
            $ref: '#/components/schemas/OriginationViewBO'
    IncomingPayment:
      required:
        - accountId
        - amount
        - originalTransactionDate
        - payerName
        - paymentChannelId
        - requestId
      type: object
      properties:
        requestId:
          type: string
          description: >-
            The unique identifier of the request, which is used to avoid
            repeated submissions. UUID is recommended, maximum length is 255.
        paymentChannelId:
          type: string
          description: Payment channel id, only support payment channel type is API.
        accountId:
          type: string
          description: Account id
        originalTransactionDate:
          type: string
          description: Original transaction date, format yyyyMMdd.
        amount:
          type: number
          description: Incoming payment amount.
          format: double
        message:
          type: string
          description: Message information, maximum length is 255.
        payerName:
          type: string
          description: Payer name, maximum length is 255.
        extraName:
          type: string
          description: Extra name, maximum length is 255.
        payerAddress:
          type: string
          description: Payer address, maximum length is 255.
        payerPostCode:
          type: string
          description: Payer post code.
        payerTown:
          type: string
          description: Payer town, maximum length is 255.
        payerCountry:
          type: string
          description: Payer country, maximum length is 255.
        payerCountryCode:
          type: string
          description: Country code (Uppercase two-letter ISO-3166 code. e.g. SE, FI)
        companyNumber:
          type: string
          description: Company number.
    IncomingPaymentValidation:
      required:
        - accountId
        - amount
        - originalTransactionDate
        - payerName
        - paymentChannelId
      type: object
      properties:
        paymentChannelId:
          type: string
          description: Payment channel id, only support payment channel type is API.
        accountId:
          type: string
          description: Account id
        originalTransactionDate:
          type: string
          description: Original transaction date, format yyyyMMdd.
        amount:
          type: number
          description: Incoming payment amount.
          format: double
        payerName:
          type: string
          description: Payer name.
    PaymentChannel:
      type: object
      properties:
        id:
          type: string
          description: Payment channel id. It is 24 character.
        name:
          type: string
          description: Payment channel name.
        direction:
          $ref: '#/components/schemas/PaymentChannelDirection'
        type:
          $ref: '#/components/schemas/PaymentChannelType'
    PaymentChannelDirection:
      type: string
      description: |
        * MANUAL_INCOMING Manual incoming payment
        * MANUAL_OUTGOING Manual outgoing payment
        * DD_INCOMING DD incoming payment
      enum:
        - MANUAL_INCOMING
        - MANUAL_OUTGOING
        - DD_INCOMING
    PaymentChannelType:
      type: string
      description: Payment channel type
      enum:
        - SUS
        - CMSI
        - LB
        - EXTERNALLY_HANDLED
        - BGC
        - FISEPA
        - AUTOGIRO
        - API
    IncomingPaymentStatus:
      type: object
      properties:
        recievedAccountId:
          type: string
          description: Recieved account id.
        amount:
          type: number
          description: Incoming payment amount or payback amount.
        status:
          $ref: '#/components/schemas/PaymentStatus'
        result:
          $ref: '#/components/schemas/HandleType'
        paybackInfo:
          $ref: '#/components/schemas/CustomerExternalAccountV5'
      description: >-
        In the scenario of payback to customer,
        serialId|validationState|validationDate will always be empty.
    HandleType:
      type: string
      description: >
        * PAY_TO_OTHER_ACCOUNT The amount has been paid to other account, refer
        to recievedAccountId.

        * PAYBACK_TO_CUSTOMER  The amount has been paid back to customer, refer
        to paybackInfo.

        * PAY_DIRECT           The amount has been paid directly.
      enum:
        - PAY_TO_OTHER_ACCOUNT
        - PAYBACK_TO_CUSTOMER
        - PAY_DIRECT
    PaymentStatus:
      type: string
      description: |
        * UNHANDLED Unhandled
        * HANDLED   Handled
      enum:
        - UNHANDLED
        - HANDLED
    QuestionItem:
      required:
        - id
        - order
        - text
        - type
      type: object
      properties:
        id:
          type: string
        type:
          type: string
          enum:
            - TEXT_INPUT
            - SINGLE_CHOICE_DROP_DOWN
            - MULTIPLE_CHOICE_CHECKBOX
            - SINGLE_CHOICE_RADIO_BUTTON
        text:
          type: string
        order:
          type: integer
          description: Series num
          format: int32
        questionItems:
          type: array
          description: Sometimes there are a lot of options built in for a question option
          items:
            $ref: '#/components/schemas/QuestionItem'
    Questions:
      required:
        - id
        - mandatory
        - order
        - questionItems
        - tip
        - title
      type: object
      properties:
        id:
          type: string
        order:
          type: integer
          description: Series num
          format: int32
        title:
          type: string
        mandatory:
          type: boolean
        tip:
          type: string
        questionItems:
          type: array
          items:
            $ref: '#/components/schemas/QuestionItem'
    KycConfigurationResponse:
      required:
        - level
      type: object
      properties:
        level:
          type: string
          enum:
            - CUSTOMER
            - ACCOUNT
    BusinessCustomer:
      type: object
      properties:
        organizationNumber:
          type: string
          description: >-
            There is no format validation for organizationNumber, both format
            support: NNNNNNNNNNN and NNNNNNN-NNNN
          example: '5567447056'
        organizationCountryCode:
          type: string
          description: Country code (Uppercase two-letter ISO-3166 code. e.g. SE, FI)
          example: SE
        companyName:
          type: string
          example: Vilja Solutions AB
        companyType:
          type: string
          example: AB
        category:
          type: string
          example: NO_CATEGORY
          description: >
            The SME category, it is an optional parameter.

            If not pass this parameter or the the value is null, then use the
            default category 'NO_CATEGORY'.
        externalReference:
          type: string
          example: x-1234567
        officialAddress:
          $ref: '#/components/schemas/AddressForSME'
        phone:
          type: string
          description: >-
            Phone number, validate by google libphonenumber, refer to
            https://libphonenumber.appspot.com/
          example: '+468123456'
        email:
          type: string
          description: Company email
          example: info@viljasolutions.com
        web:
          type: string
          example: www.viljasolutions.com
        signatoriesText:
          type: string
          example: Firman tecknas av VD
        businessTypeCode:
          type: string
          example: '62010'
        businessTypeDescription:
          type: string
          example: Programmering
        taxClassification:
          type: string
          description: max length of 16 characters
          example: F
        VAT:
          type: boolean
        VATId:
          type: string
          example: 556744-7056-01
        LEI:
          type: string
          example: 54930084UKLVMY22DS16
        employeeCount:
          type: integer
          example: 55
        parentCompanyOrgNumber:
          type: string
          description: >-
            There is no format validation for organizationNumber, both format
            support: NNNNNNNNNNN and NNNNNNN-NNNN
          example: '5567447056'
        parentCompanyCountryCode:
          type: string
          description: Country code (Uppercase two-letter ISO-3166 code. e.g. SE, FI)
          example: SE
        groupMotherOrgNumber:
          type: string
          description: >-
            There is no format validation for organizationNumber, both format
            support: NNNNNNNNNNN and NNNNNNN-NNNN
          example: '5567447056'
        groupMotherCountryCode:
          type: string
          description: Country code (Uppercase two-letter ISO-3166 code. e.g. SE, FI)
          example: SE
        incorporationDate:
          type: string
          description: Format is yyyy-MM-dd
          format: date
        companyStatus:
          type: string
          example: ACTIVE
          enum:
            - ACTIVE
        riskClass:
          type: string
          example: NORMAL
          enum:
            - LOW
            - NORMAL
            - HIGH
        riskClassComment:
          type: string
          example: This company is harmless
        predefinedExternalBankAccount:
          $ref: '#/components/schemas/CustomerExternalAccountForUpdateV5'
      required:
        - organizationNumber
        - organizationCountryCode
        - companyName
    BusinessCustomerResponse:
      required:
        - companyName
        - organizationCountryCode
        - organizationNumber
      type: object
      properties:
        id:
          type: string
        organizationNumber:
          type: string
          description: >-
            There is no format validation for organizationNumber, both format
            support: NNNNNNNNNNN and NNNNNNN-NNNN
          example: '5567447056'
        organizationCountryCode:
          type: string
          example: SE
        companyName:
          type: string
          example: Vilja Solutions AB
        companyType:
          type: string
          example: AB
        externalReference:
          type: string
          example: x-1234567
        officialAddress:
          $ref: '#/components/schemas/AddressForSME'
        createDate:
          type: string
          description: Create date
          format: datetime
          example: '2021-02-24T14:57:10.35+08:00'
        updateDate:
          type: string
          description: Update date
          format: datetime
          example: '2021-03-01T14:00:10.35+08:00'
        phone:
          type: string
          description: >-
            Phone number, validate by google libphonenumber, refer to
            https://libphonenumber.appspot.com/
          example: '+468123456'
        email:
          type: string
          description: Company email
          example: info@viljasolutions.com
        web:
          type: string
          example: www.viljasolutions.com
        signatoriesText:
          type: string
          example: Firman tecknas av VD
        businessTypeCode:
          type: string
          example: '62010'
        businessTypeDescription:
          type: string
          example: Programmering
        taxClassification:
          type: string
          example: F
        VAT:
          type: boolean
        VATId:
          type: string
          example: 556744-7056-01
        LEI:
          type: string
          example: 54930084UKLVMY22DS16
        employeeCount:
          type: integer
          example: 55
        parentCompanyOrgNumber:
          type: string
          description: >-
            There is no format validation for organizationNumber, both format
            support: NNNNNNNNNNN and NNNNNNN-NNNN
          example: '5567447056'
        parentCompanyCountryCode:
          type: string
          example: SE
        groupMotherOrgNumber:
          type: string
          description: >-
            There is no format validation for organizationNumber, both format
            support: NNNNNNNNNNN and NNNNNNN-NNNN
          example: '5567447056'
        groupMotherCountryCode:
          type: string
          example: SE
        incorporationDate:
          type: string
          format: date
        companyStatus:
          type: string
          example: ACTIVE
          enum:
            - ACTIVE
        riskClass:
          type: string
          example: NORMAL
          enum:
            - LOW
            - NORMAL
            - HIGH
        riskClassComment:
          type: string
          example: This company is harmless
        predefinedExternalBankAccounts:
          type: array
          items:
            $ref: '#/components/schemas/CustomerExternalAccountV5'
    SMECustomerNoteResponse:
      type: object
      properties:
        businessCustomerNotes:
          type: array
          items:
            $ref: '#/components/schemas/SMECustomerNote'
    SMECustomerNote:
      type: object
      properties:
        noteContent:
          type: string
        creator:
          type: string
        createDate:
          type: string
    SmeApplicationNote:
      required:
        - content
      type: object
      properties:
        content:
          type: string
    SMECreditApplicationPatch:
      required:
        - appliedProductId
        - desiredAmount
        - smeId
      type: object
      properties:
        applicationState:
          $ref: '#/components/schemas/ApplicationStateV8'
        appliedProductId:
          type: string
          description: >-
            The product Id, it should be provided from the defined products in
            VP platform.
          example: '1234567'
        appliedOfferId:
          type: string
          description: Optional, Specific offer ID in available loan offer list.
        externalReference:
          type: string
          description: The external reference in other system.
          example: x-1234567
        desiredAmount:
          type: number
          description: Desired Amount.
          example: 12345
        desiredPaybackTime:
          type: integer
          description: >-
            36(months), credit application does not support the field, it will
            return null.
          example: 36
        loanReason:
          type: string
          enum:
            - EXPANSION
            - INVENTORY
            - CASHFLOW
            - EQUIPMENT
            - REFINANCING
            - NONE
        loanReasonText:
          type: string
          description: Detail information about the loan reason.
          example: To improve our cashflow
        notificationEmail:
          type: string
          example: mats.nordgren@viljasolutions.com
        notificationMobileNumber:
          type: string
          example: '+46768494344'
        downgradeAccepted:
          type: boolean
        preferredDueDay:
          type: integer
          description: >-
            The preferred due day (range 1 ~ 31), only for the product
            configured with floating statement
          example: 15
        applicationComments:
          type: array
          description: Application notes, max length for each comment is 1048
          items:
            type: string
        approvedAmount:
          type: number
          description: Credit application does not support the field, it will return null.
          example: 12345
        approvedPaybackTime:
          type: integer
          description: >-
            24(months), credit application does not support the field, it will
            return null.
          example: 24
        decisionComment:
          type: string
          example: >-
            This application is rejected because we belive the paper industry is
            doomed
        riskClass:
          type: string
          example: NORMAL
          enum:
            - LOW
            - NORMAL
            - HIGH
        riskClassComment:
          type: string
          example: This company is harmless
        preferredDisbursementAccount:
          $ref: '#/components/schemas/DisbursementAccountForSME'
        startupFee:
          type: number
          description: The startup fee, positive value.
        manualDeltaInterestRate:
          type: number
          description: The manual delta interest rate.
          example: 0.01
        serviceFee:
          type: number
          description: >-
            The manual service fee, positive integer. The product configuraiton
            will be used if the given value is null.
        statementChannel:
          type: string
          enum:
            - PAPER
            - ELECTRONIC_EMAIL_NOTIFICATION
            - ELECTRONIC_SMS_NOTIFICATION
            - ELECTRONIC_NO_NOTIFICATION
        assignedUser:
          type: string
          description: The assigned user to handle the application
        actualDecision:
          type: string
          enum:
            - APPROVED
            - REJECTED
            - INCOMPLETE
            - REFERRAL
        suggestion:
          type: string
          enum:
            - APPROVED
            - REJECTED
            - INCOMPLETE
            - REFERRAL
        rejectReasonCode:
          type: string
          description: Only 3 digits are supported. (001-009)
          example: '1'
        rejectReasonText:
          type: string
        extras:
          type: object
          additionalProperties:
            type: string
          description: Max length for each properties is 255.
        agreementSignatories:
          type: array
          description: >-
            The people who have been selected to sign one or more documents.
            Saved on application level, only editable until the application has
            been signed (by all signers) and becomes PN_SIGNED.
          items:
            $ref: '#/components/schemas/AgreementSignatoriesPostRequestBO'
        applicationCategory:
          type: string
          description: Application category, default value is NEW
          enum:
            - NEW
            - TOP_UP
        vatInformation:
          $ref: '#/components/schemas/VatInformation'
        externalPartyId:
          type: string
          description: >-
            External party should be connected to the applied product in LFP in
            Modules->External party.
        administrativeAreaName:
          type: string
          description: >-
            Administrative area should be allowed for the chosen external party
            in LFP in Modules->External party.
        salesPerson:
          type: string
          description: >-
            Sales person should be allowed for the chosen external party or
            chosen administrative area in LFP in Modules->External party.
        residualAmount:
          type: number
          description: Residual amount
        residualAmountNotAllowToBeOverwrittenByRule:
          type: boolean
          description: Residual amount not allow to be overwritten by rule
    SMECreditApplicationResponse:
      type: object
      properties:
        id:
          type: string
        reference:
          type: string
        applicationChannel:
          type: string
          description: Application Channel
          enum:
            - PHONE
            - BROKER
            - LETTER
            - WEB
        applicationState:
          $ref: '#/components/schemas/ApplicationState'
        appliedProductId:
          type: string
          example: '1234567'
        appliedOfferId:
          type: string
          example: '1'
        smeId:
          type: string
          description: The generated SME customer Id.
        externalReference:
          type: string
          description: The external reference in other system.
          example: x-1234567
        createDate:
          type: string
          description: Create date, the format is yyyy-MM-dd HH:mm:ss.
          format: date
        updateDate:
          type: string
          description: Update date, the format is yyyy-MM-dd HH:mm:ss.
          format: date
        desiredAmount:
          type: number
          description: Desired Amount
          example: 12345
        desiredPaybackTime:
          type: integer
          description: 36(months), not supported now, it will always be null.
          example: 36
        loanReason:
          type: string
          enum:
            - EXPANSION
            - INVENTORY
            - CASHFLOW
            - EQUIPMENT
            - REFINANCING
            - NONE
        loanReasonText:
          type: string
          description: Detail information about the loan reason.
          example: To improve our cashflow
        notificationEmail:
          type: string
          example: mats.nordgren@viljasolutions.com
        notificationMobileNumber:
          type: string
          example: '+46768494344'
        downgradeAccepted:
          type: boolean
        preferredDueDay:
          type: integer
          description: >-
            The preferred due day (range 1 ~ 31), only for the product
            configured with floating statement
          example: 15
        applicationComments:
          type: array
          description: Application notes, max length for each comment is 1048
          items:
            type: string
        approvedAmount:
          type: number
          description: Credit application does not support the field, it will return null.
          example: 12345
        approvedPaybackTime:
          type: integer
          description: >-
            24(months), credit application does not support the field, it will
            return null.
          example: 24
        decisionComment:
          type: string
          example: >-
            This application is rejected because we belive the paper industry is
            doomed.
        riskClass:
          type: string
          example: NORMAL
          enum:
            - LOW
            - NORMAL
            - HIGH
        riskClassComment:
          type: string
          example: This company is harmless
        preferredDisbursementAccount:
          $ref: '#/components/schemas/DisbursementAccountForSME'
        manualDeltaInterestRate:
          type: number
          description: The interest rate be adjusted manually, e.g. 0.001, -0.001.
        startupFee:
          type: number
          description: The Startup fee, postive value.
        serviceFee:
          type: number
          description: >-
            The manual service fee, positive integer. The product configuraiton
            will be used if the given value is null.
        statementChannel:
          type: string
          enum:
            - PAPER
            - ELECTRONIC_EMAIL_NOTIFICATION
            - ELECTRONIC_SMS_NOTIFICATION
            - ELECTRONIC_NO_NOTIFICATION
        statusUpdateDate:
          type: string
          description: Loan status updated date, the format is yyyy-MM-dd HH:mm:ss.
          format: date
        assignedUser:
          type: string
          description: The assigned user to handle the application
        promissoryNoteSignedCheck:
          type: boolean
          description: If the promissory notes of the application are signed, return true.
        promissoryNoteVersionId:
          type: string
          description: Saved promissory note id.
        systemDeltaInterestRate:
          type: number
          description: The interest rate be adjusted by the system.
        accountId:
          type: string
          description: The related the accountId.
        reservedAccountNumber:
          type: string
          description: The related account number.
        actualDecision:
          type: string
          description: The actual decision after confirmed.
          enum:
            - APPROVED
            - REJECTED
            - INCOMPLETE
            - REFERRAL
        suggestion:
          type: string
          description: The suggested decision made by the system.
          enum:
            - APPROVED
            - REJECTED
            - INCOMPLETE
            - REFERRAL
        rejectReasonCode:
          type: string
          description: Only 3 digits are supported. (001-009)
          example: '1'
        rejectReasonText:
          type: string
        extras:
          type: object
          additionalProperties:
            type: string
          description: Max length for each properties is 255.
        documents:
          $ref: '#/components/schemas/LoanDocumentBO'
        preconditions:
          $ref: '#/components/schemas/PreconditionResponse'
        applicationCancelReasonType:
          type: string
          enum:
            - MISINFORMATION
            - FRAUD_ATTEMPT
            - CUSTOMER_DECLINED_OFFER
            - OTHER_REASON
        decisionMessage:
          $ref: '#/components/schemas/DecisionMessageForSME'
        credits:
          type: array
          items:
            $ref: '#/components/schemas/CreditV8ResponseBO'
        agreementSignatories:
          type: array
          description: >-
            The people who have been selected to sign one or more documents.
            Saved on application level, only editable until the application has
            been signed (by all signers) and becomes PN_SIGNED.
          items:
            $ref: '#/components/schemas/AgreementSignatoriesResponseBO'
        applicationCategory:
          type: string
          description: Application category
          enum:
            - NEW
            - TOP_UP
        guarantees:
          type: array
          items:
            $ref: '#/components/schemas/GuaranteeV8Response'
        productInterestRate:
          type: number
          description: The product interest rate.
        referenceInterestRate:
          type: number
          description: The reference interest rate.
        totalInterestRate:
          type: number
          description: The total interest rate.
        effectiveInterestRate:
          type: number
          description: The effective interest rate(only for regular application).
        monthlyCost:
          type: number
          description: The monthly cost(only for consumer regular application).
        externalPartyId:
          type: string
          description: >-
            External party should be connected to the applied product in LFP in
            Modules->External party.
        externalPartyName:
          type: string
        administrativeAreaName:
          type: string
          description: >-
            Administrative area should be allowed for the chosen external party
            in LFP in Modules->External party.
        salesPerson:
          type: string
          description: >-
            Sales person should be allowed for the chosen external party or
            chosen administrative area in LFP in Modules->External party.
        residualAmountType:
          $ref: '#/components/schemas/ResidualAmountType'
        residualAmount:
          type: number
          description: Residual amount
        residualAmountNotAllowToBeOverwrittenByRule:
          type: boolean
          description: Residual amount not allow to be overwritten by rule
        brokerName:
          type: string
          description: The broker name
        assetIds:
          type: array
          items:
            type: string
          description: Asset ids
      required:
        - applicationChannel
        - appliedProductId
        - smeId
        - desiredAmount
    SMEApplicationPatchResponse:
      required:
        - applicationChannel
        - appliedProductId
        - desiredAmount
        - smeId
      type: object
      properties:
        id:
          type: string
        reference:
          type: string
        applicationChannel:
          type: string
          description: Application Channel
          enum:
            - PHONE
            - BROKER
            - LETTER
            - WEB
        applicationState:
          $ref: '#/components/schemas/ApplicationState'
        appliedProductId:
          type: string
          example: '1234567'
        smeId:
          type: string
          description: The generated SME customer Id.
        externalReference:
          type: string
          description: The external reference in other system.
          example: x-1234567
        createDate:
          type: string
          description: Create date, the format is yyyy-MM-dd HH:mm:ss.
          format: date
        updateDate:
          type: string
          description: Update date, the format is yyyy-MM-dd HH:mm:ss.
          format: date
        desiredAmount:
          type: number
          description: Desired Amount
          example: 12345
        desiredPaybackTime:
          type: integer
          description: 36(months), not supported now, it will always be null.
          example: 36
        loanReason:
          type: string
          enum:
            - EXPANSION
            - INVENTORY
            - CASHFLOW
            - EQUIPMENT
            - REFINANCING
            - NONE
        loanReasonText:
          type: string
          description: Detail information about the loan reason.
          example: To improve our cashflow
        notificationEmail:
          type: string
          example: mats.nordgren@viljasolutions.com
        notificationMobileNumber:
          type: string
          example: '+46768494344'
        downgradeAccepted:
          type: boolean
        preferredDueDay:
          type: integer
          description: >-
            The preferred due day (range 1 ~ 31), only for the product
            configured with floating statement
          example: 15
        applicationComments:
          type: array
          description: Application notes, max length for each comment is 1048
          items:
            type: string
        approvedAmount:
          type: number
          description: Credit application does not support the field, it will return null.
          example: 12345
        approvedPaybackTime:
          type: integer
          description: >-
            24(months), credit application does not support the field, it will
            return null.
          example: 24
        decisionComment:
          type: string
          example: >-
            This application is rejected because we belive the paper industry is
            doomed.
        riskClass:
          type: string
          example: NORMAL
          enum:
            - LOW
            - NORMAL
            - HIGH
        riskClassComment:
          type: string
          example: This company is harmless
        preferredDisbursementAccount:
          $ref: '#/components/schemas/DisbursementAccountForSME'
        manualDeltaInterestRate:
          type: number
          description: The interest rate be adjusted manually, e.g. 0.001, -0.001.
        startupFee:
          type: number
          description: The Startup fee, postive value.
        serviceFee:
          type: number
          description: >-
            The manual service fee, positive integer. The product configuraiton
            will be used if the given value is null.
        statementChannel:
          type: string
          enum:
            - PAPER
            - ELECTRONIC_EMAIL_NOTIFICATION
            - ELECTRONIC_SMS_NOTIFICATION
            - ELECTRONIC_NO_NOTIFICATION
        statusUpdateDate:
          type: string
          description: Loan status updated date, the format is yyyy-MM-dd HH:mm:ss.
          format: date
        assignedUser:
          type: string
          description: The assigned user to handle the application
        promissoryNoteSignedCheck:
          type: boolean
          description: If the promissory notes of the application are signed, return true.
        promissoryNoteVersionId:
          type: string
          description: Saved promissory note id.
        systemDeltaInterestRate:
          type: number
          description: The interest rate be adjusted by the system.
        accountId:
          type: string
          description: The related the accountId.
        reservedAccountNumber:
          type: string
          description: The related account number.
        actualDecision:
          type: string
          description: The actual decision after confirmed.
          enum:
            - APPROVED
            - REJECTED
            - INCOMPLETE
            - REFERRAL
        suggestion:
          type: string
          description: The suggested decision made by the system.
          enum:
            - APPROVED
            - REJECTED
            - INCOMPLETE
            - REFERRAL
        rejectReasonCode:
          type: string
          description: Only 3 digits are supported. (001-009)
          example: '1'
        rejectReasonText:
          type: string
        extras:
          type: object
          additionalProperties:
            type: string
          description: Max length for each properties is 255.
        documents:
          $ref: '#/components/schemas/LoanDocumentBO'
        preconditions:
          $ref: '#/components/schemas/PreconditionResponse'
        applicationCancelReasonType:
          type: string
          enum:
            - MISINFORMATION
            - FRAUD_ATTEMPT
            - CUSTOMER_DECLINED_OFFER
            - OTHER_REASON
        decisionMessage:
          $ref: '#/components/schemas/DecisionMessageForSME'
        agreementSignatories:
          type: array
          description: >-
            The people who have been selected to sign one or more documents.
            Saved on application level, only editable until the application has
            been signed (by all signers) and becomes PN_SIGNED.
          items:
            $ref: '#/components/schemas/AgreementSignatoriesResponseBO'
        applicationCategory:
          type: string
          description: Application category
          enum:
            - NEW
            - TOP_UP
        guarantees:
          type: array
          items:
            $ref: '#/components/schemas/GuaranteeV8Response'
        externalPartyId:
          type: string
          description: >-
            External party should be connected to the applied product in LFP in
            Modules->External party.
        administrativeAreaName:
          type: string
          description: >-
            Administrative area should be allowed for the chosen external party
            in LFP in Modules->External party.
        salesPerson:
          type: string
          description: >-
            Sales person should be allowed for the chosen external party or
            chosen administrative area in LFP in Modules->External party.
        residualAmountType:
          $ref: '#/components/schemas/ResidualAmountType'
        residualAmount:
          type: number
          description: Residual amount
        residualAmountNotAllowToBeOverwrittenByRule:
          type: boolean
          description: Residual amount not allow to be overwritten by rule
    DisbursementAccountForSME:
      type: object
      properties:
        type:
          type: string
          description: >
            If number has value, type is mandatory

            * SE-CLEARING, Swedish bank account number, refer to
            https://www-2.danskebank.com/link/Bankernaskontonummer. Support
            Sweden only. e.g. 9551-1112110

            * NO-CLEARING, Norwegian bank account number. Support Norway only.
            e.g. 8276 01 00435

            * SE-BG, Bankgiro number, refer to https://www.bankgirot.se. Support
            Sweden only. e.g. 10101020

            * SE-PG, Plusgiro number, refer to https://www.plusgirot.se. Support
            Sweden only. e.g. 4101010

            * IBAN, International Bank Account Number, refer to
            https://www.investopedia.com/terms/i/iban.asp. Support Finland and
            Nederland only. e.g. FI2112345600000785
          enum:
            - SE-CLEARING
            - NO-CLEARING
            - SE-BG
            - SE-PG
            - IBAN
        number:
          type: string
          description: If type has value, number is mandatory
    SMEApplicationState:
      type: string
      description: >-
        These states(BID, PN_SENT, PN_SIGNED, ACCOUNT_CREATED, DISBURSED) are
        not supported now.
      example: PN_CREATED
      enum:
        - UNPROCESSED
        - PENDING
        - PN_CREATED
        - EXPIRED
        - TURNED_DOWN
        - REJECTED
        - CANCELLED
    DecisionMessageForSME:
      type: object
      properties:
        message:
          type: string
        approver:
          type: string
        submitter:
          type: string
        approvalDate:
          type: string
          format: date
        createDate:
          type: string
          format: date
    SignatoriesForPost:
      type: object
      properties:
        combinations:
          type: array
          items:
            $ref: '#/components/schemas/SignatoryCombinationForPost'
      description: A collection of signatures of multiple combinations.
    SignatoryCombinationForPost:
      type: object
      properties:
        signatoryPersons:
          type: array
          items:
            $ref: '#/components/schemas/SignatoryPersonForPost'
    SignatoryPersonForPost:
      required:
        - name
      type: object
      properties:
        name:
          type: string
          description: Signatory name
          example: Frida Kranstego
        reference:
          type: string
          description: SSN/Identifier
          example: '197705232382'
    AddressForSME:
      type: object
      properties:
        streetAddress:
          type: string
          description: Street address
        zipCode:
          type: string
          description: Zip code
        city:
          type: string
          description: City
        country:
          type: string
          description: Country code (Uppercase two-letter ISO-3166 code. e.g. SE, FI)
        coAddress:
          type: string
          description: C/O address
        manuallyMaintained:
          type: boolean
          description: Manually maintained
      required:
        - country
    BusinessCustomerV2:
      type: object
      properties:
        organizationNumber:
          type: string
          description: >-
            There is no format validation for organizationNumber, both format
            support: NNNNNNNNNNN and NNNNNNN-NNNN
          example: '5567447056'
        organizationCountryCode:
          type: string
          description: Country code (Uppercase two-letter ISO-3166 code. e.g. SE, FI)
          example: SE
        companyName:
          type: string
          example: Vilja Solutions AB
        companyType:
          type: string
          example: AB
        externalReference:
          type: string
          example: x-1234567
        officialAddress:
          $ref: '#/components/schemas/AddressForSMEV2'
        phone:
          type: string
          description: >-
            Phone number, validate by google libphonenumber, refer to
            https://libphonenumber.appspot.com/
          example: '+468123456'
        email:
          type: string
          description: Company email
          example: info@viljasolutions.com
        web:
          type: string
          example: www.viljasolutions.com
        signatoriesText:
          type: string
          example: Firman tecknas av VD
        businessTypeCode:
          type: string
          example: '62010'
        businessTypeDescription:
          type: string
          example: Programmering
        taxClassification:
          type: string
          description: max length of 16 characters
          example: F
        VAT:
          type: boolean
        VATId:
          type: string
          example: 556744-7056-01
        LEI:
          type: string
          example: 54930084UKLVMY22DS16
        employeeCount:
          type: integer
          example: 55
        parentCompanyOrgNumber:
          type: string
          description: >-
            There is no format validation for organizationNumber, both format
            support: NNNNNNNNNNN and NNNNNNN-NNNN
          example: '5567447056'
        parentCompanyCountryCode:
          type: string
          description: Country code (Uppercase two-letter ISO-3166 code. e.g. SE, FI)
          example: SE
        groupMotherOrgNumber:
          type: string
          description: >-
            There is no format validation for organizationNumber, both format
            support: NNNNNNNNNNN and NNNNNNN-NNNN
          example: '5567447056'
        groupMotherCountryCode:
          type: string
          description: Country code (Uppercase two-letter ISO-3166 code. e.g. SE, FI)
          example: SE
        incorporationDate:
          type: string
          description: Format is yyyy-MM-dd
          format: date
        companyStatus:
          type: string
          example: ACTIVE
          enum:
            - ACTIVE
        riskClass:
          type: string
          example: NORMAL
          enum:
            - LOW
            - NORMAL
            - HIGH
        riskClassComment:
          type: string
          example: This company is harmless
        signatories:
          $ref: '#/components/schemas/SignatoriesForPost'
        dynamicFields:
          $ref: '#/components/schemas/VPDynamicFields'
      required:
        - organizationNumber
        - organizationCountryCode
        - companyName
    AddressForSMEV2:
      type: object
      properties:
        streetAddress:
          type: string
          description: Street address
        supplementaryStreetAddress:
          type: string
          description: Supplementary street address
        region:
          type: string
          description: Region
        zipCode:
          type: string
          description: Zip code
        city:
          type: string
          description: City
        country:
          type: string
          description: Country code (Uppercase two-letter ISO-3166 code. e.g. SE, FI)
        coAddress:
          type: string
          description: C/O address
        apartmentNumber:
          type: string
          description: Apartment number
        propertyNumber:
          type: string
          description: Property number
        buildingName:
          type: string
          description: Building name
        floorNumber:
          type: string
          description: Floor number
        complementingInformation:
          type: string
          description: Complementing information
    SignatoriesV2:
      type: object
      properties:
        combinations:
          type: array
          items:
            $ref: '#/components/schemas/SignatoryCombination'
      description: A collection of signatures of multiple combinations.
    SignatoryCombination:
      type: object
      properties:
        id:
          type: string
        signatoryPersons:
          type: array
          items:
            $ref: '#/components/schemas/SignatoryPerson'
    SignatoryPerson:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
          description: Signatory name
          example: Frida Kranstego
        reference:
          type: string
          description: SSN/Identifier
          example: '197705232382'
    BusinessCustomerResponseV2:
      type: object
      properties:
        id:
          type: string
        organizationNumber:
          type: string
          description: >-
            There is no format validation for organizationNumber, both format
            support: NNNNNNNNNNN and NNNNNNN-NNNN
          example: '5567447056'
        organizationCountryCode:
          type: string
          example: SE
        companyName:
          type: string
          example: Vilja Solutions AB
        companyType:
          type: string
          example: AB
        externalReference:
          type: string
          example: x-1234567
        officialAddress:
          $ref: '#/components/schemas/AddressForSMEV2'
        createDate:
          type: string
          description: Create date
          format: datetime
          example: '2021-02-24T14:57:10.35+08:00'
        updateDate:
          type: string
          description: Update date
          format: datetime
          example: '2021-03-01T14:00:10.35+08:00'
        phone:
          type: string
          description: >-
            Phone number, validate by google libphonenumber, refer to
            https://libphonenumber.appspot.com/
          example: '+468123456'
        email:
          type: string
          description: Company email
          example: info@viljasolutions.com
        web:
          type: string
          example: www.viljasolutions.com
        signatoriesText:
          type: string
          example: Firman tecknas av VD
        businessTypeCode:
          type: string
          example: '62010'
        businessTypeDescription:
          type: string
          example: Programmering
        taxClassification:
          type: string
          example: F
        VAT:
          type: boolean
        VATId:
          type: string
          example: 556744-7056-01
        LEI:
          type: string
          example: 54930084UKLVMY22DS16
        employeeCount:
          type: integer
          example: 55
        parentCompanyOrgNumber:
          type: string
          description: >-
            There is no format validation for organizationNumber, both format
            support: NNNNNNNNNNN and NNNNNNN-NNNN
          example: '5567447056'
        parentCompanyCountryCode:
          type: string
          example: SE
        groupMotherOrgNumber:
          type: string
          description: >-
            There is no format validation for organizationNumber, both format
            support: NNNNNNNNNNN and NNNNNNN-NNNN
          example: '5567447056'
        groupMotherCountryCode:
          type: string
          example: SE
        incorporationDate:
          type: string
          format: date
        companyStatus:
          type: string
          example: ACTIVE
          enum:
            - ACTIVE
        riskClass:
          type: string
          example: NORMAL
          enum:
            - LOW
            - NORMAL
            - HIGH
        riskClassComment:
          type: string
          example: This company is harmless
        signatories:
          $ref: '#/components/schemas/SignatoriesV2'
        dynamicFields:
          $ref: '#/components/schemas/VPDynamicFields'
        dynamicFieldsRef:
          type: string
        schemaMetadata:
          $ref: '#/components/schemas/ViljaSchemaMetadata'
      required:
        - organizationNumber
        - organizationCountryCode
        - companyName
    BusinessCustomerUpdateV2:
      type: object
      properties:
        companyName:
          type: string
          example: Vilja Solutions AB
        companyType:
          type: string
          example: AB
        externalReference:
          type: string
          example: x-1234567
        officialAddress:
          $ref: '#/components/schemas/AddressForSMEV2'
        phone:
          type: string
          description: >-
            Phone number, validate by google libphonenumber, refer to
            https://libphonenumber.appspot.com/
          example: '+468123456'
        email:
          type: string
          description: Company email
          example: info@viljasolutions.com
        web:
          type: string
          example: www.viljasolutions.com
        signatoriesText:
          type: string
          example: Firman tecknas av VD
        businessTypeCode:
          type: string
          example: '62010'
        businessTypeDescription:
          type: string
          example: Programmering
        taxClassification:
          type: string
          description: max length of 16 characters
          example: F
        VAT:
          type: boolean
        VATId:
          type: string
          example: 556744-7056-01
        LEI:
          type: string
          example: 54930084UKLVMY22DS16
        employeeCount:
          type: integer
          example: 55
        parentCompanyOrgNumber:
          type: string
          description: >-
            There is no format validation for organizationNumber, both format
            support: NNNNNNNNNNN and NNNNNNN-NNNN
          example: '5567447056'
        parentCompanyCountryCode:
          type: string
          description: Country code (Uppercase two-letter ISO-3166 code. e.g. SE, FI)
          example: SE
        groupMotherOrgNumber:
          type: string
          description: >-
            There is no format validation for organizationNumber, both format
            support: NNNNNNNNNNN and NNNNNNN-NNNN
          example: '5567447056'
        groupMotherCountryCode:
          type: string
          description: Country code (Uppercase two-letter ISO-3166 code. e.g. SE, FI)
          example: SE
        incorporationDate:
          type: string
          description: Format is yyyy-MM-dd
          format: date
        companyStatus:
          type: string
          example: ACTIVE
          enum:
            - ACTIVE
        riskClass:
          type: string
          example: NORMAL
          enum:
            - LOW
            - NORMAL
            - HIGH
        riskClassComment:
          type: string
          example: This company is harmless
        signatories:
          $ref: '#/components/schemas/SignatoriesV2'
        dynamicFields:
          $ref: '#/components/schemas/VPDynamicFields'
    AgreementSignatoriesPostRequestBO:
      required:
        - documentType
      type: object
      properties:
        documentType:
          type: string
          description: >-
            Types of documents that signatoreis are allowed to sign, now only
            PROMISSORY_NOTE is supported.
          enum:
            - PROMISSORY_NOTE
        signatoryPersons:
          type: array
          items:
            $ref: '#/components/schemas/SignatoryPersonForPost'
    AgreementSignatoriesResponseBO:
      type: object
      properties:
        id:
          type: string
        documentType:
          type: string
          description: >-
            Types of documents that signatoreis are allowed to sign, now only
            PROMISSORY_NOTE is supported.
          enum:
            - PROMISSORY_NOTE
        signatoryPersons:
          type: array
          items:
            $ref: '#/components/schemas/SignatoryPerson'
    BusinessCustomerListResponse:
      type: object
      properties:
        smeCustomers:
          type: array
          items:
            $ref: '#/components/schemas/BusinessCustomerResponseV2'
    BusinessCustomerAPIListResponse:
      type: object
      properties:
        smeCustomers:
          type: array
          items:
            $ref: '#/components/schemas/BusinessCustomerResponseForDeposit'
    BusinessCustomerResponseForDeposit:
      type: object
      properties:
        id:
          type: string
        organizationNumber:
          type: string
          description: >-
            There is no format validation for organizationNumber, both format
            support: NNNNNNNNNNN and NNNNNNN-NNNN
          example: '5567447056'
        companyName:
          type: string
          example: Vilja Solutions AB
        companyType:
          type: string
          example: AB
        officialAddress:
          $ref: '#/components/schemas/AddressForSME'
        createDate:
          type: string
          description: Create date
          format: datetime
          example: '2021-02-24T14:57:10.35+08:00'
        phone:
          type: string
          description: >-
            Phone number, validate by google libphonenumber, refer to
            https://libphonenumber.appspot.com/
          example: '+468123456'
        email:
          type: string
          description: Company email
          example: info@viljasolutions.com
        web:
          type: string
          example: www.viljasolutions.com
        signatoriesText:
          type: string
          example: Firman tecknas av VD
        employeeCount:
          type: integer
          example: 55
        groupMotherOrgNumber:
          type: string
          description: >-
            There is no format validation for organizationNumber, both format
            support: NNNNNNNNNNN and NNNNNNN-NNNN
          example: '5567447056'
        groupMotherCountryCode:
          type: string
          example: SE
        incorporationDate:
          type: string
          format: date
        companyStatus:
          type: string
          example: ACTIVE
          enum:
            - ACTIVE
        riskClass:
          type: string
          example: NORMAL
          enum:
            - LOW
            - NORMAL
            - HIGH
        category:
          type: string
        categoryUpdateDate:
          type: string
        predefinedExternalBankAccounts:
          type: array
          items:
            $ref: '#/components/schemas/CustomerExternalAccountV5'
      required:
        - organizationNumber
        - companyName
    DisbursementAccountV1:
      type: object
      description: >
        If number has value, type is mandatory

        * SE-CLEARING, Swedish bank account number, refer to
        https://www-2.danskebank.com/link/Bankernaskontonummer. Support Sweden
        only. e.g. 9551-1112110

        * NO-CLEARING, Norwegian bank account number. Support Norway only. e.g.
        8276 01 00435

        * SE-BG, Bankgiro number, refer to https://www.bankgirot.se. Support
        Sweden only. e.g. 10101020

        * SE-PG, Plusgiro number, refer to https://www.plusgirot.se. Support
        Sweden only. e.g. 4101010

        * IBAN, International Bank Account Number, refer to
        https://www.investopedia.com/terms/i/iban.asp. Support Finland and
        Nederland only. e.g. FI2112345600000785

        * INTERNAL, internal account number, olny works in these APIs:
            * Get disbursements of a loan account for consumer customer.
            * Update disbursements by id of a loan account for consumer customer.
            * Remove disbursements by id of a loan account for consumer customer.
            * Get disbursements of a loan account for SME customer.
            * Update disbursements by id of a loan account for SME customer.
            * Remove disbursements by id of a loan account for SME customer.
      title: ''
      x-examples:
        INTERNAL:
          type: INTERNAL
          number: '1000017'
        SE-CLEARING:
          type: SE-CLEARING
          number: 9551-1112110
      properties:
        type:
          type: string
          enum:
            - SE-CLEARING
            - NO-CLEARING
            - SE-BG
            - SE-PG
            - IBAN
            - INTERNAL
        number:
          type: string
      required:
        - type
        - number
    DisbursementAccountV2:
      required:
        - number
        - type
      type: object
      properties:
        type:
          type: string
          description: >-
            The account type for disbursement<br> SE_BANK_ACCOUNT: Swedish Bank
            Account. Spilt by '-', for example 9551-1112110<br> SE_BG: Swedish
            BankGiro<br> SE_PG: Swedish PlusGiro<br> NO_BANK_ACCOUNT: Norwegian
            Bank Account<br> IBAN: The International Bank Account Number
          enum:
            - SE_BANK_ACCOUNT
            - SE_BG
            - SE_PG
            - NO_BANK_ACCOUNT
            - IBAN
        number:
          type: string
          description: Bank Account Number
          example: 9551-1112110
      description: The account for disbursement.
      title: ''
    DisbursementAccountV8:
      type: object
      properties:
        id:
          type: string
        disbursementType:
          type: string
          description: >-
            The account type for disbursement<br> SE_BG: Swedish BankGiro<br>
            SE_PG: Swedish PlusGiro<br> SE_BANK_ACCOUNT: Swedish Bank Account.
            Spilt by '-', for example 9551-1112110<br> NO_BANK_ACCOUNT:
            Norwegian Bank Account<br> IBAN: The International Bank Account
            Number
          enum:
            - SE_BG
            - SE_PG
            - SE_BANK_ACCOUNT
            - NO_BANK_ACCOUNT
            - IBAN
        externalAccountNumber:
          type: string
          description: Bank account number
        bankName:
          type: string
          description: Bank name (only type SE_BANK_ACCOUNT has value)
    DocumentReference:
      required:
        - documentId
        - documentType
      type: object
      properties:
        documentType:
          type: string
          description: Type of document to sign
          enum:
            - PROMISSORY_NOTE
        documentId:
          type: string
          description: Document ID
        signedDocumentId:
          type: string
          description: Signed socument ID - readonly
    Signer:
      required:
        - notificationRecipient
        - notificationType
        - reference
      type: object
      properties:
        reference:
          type: string
          description: Personal reference (national ID, SSN etc.) to identify the signatory
        notificationRecipient:
          type: string
          description: Notification recipient
        notificationType:
          type: string
          description: Notification channel
          enum:
            - SMS
            - EMAIL
        signedDocumentId:
          type: string
          description: Signed socument ID - readonly
    SignTask:
      required:
        - signerReference
        - status
      type: object
      properties:
        signerReference:
          type: string
          description: Personal reference (national ID, SSN etc.) to identify the signatory
        status:
          type: string
          description: Sign task status
          enum:
            - CREATED
            - COMPLETED
            - REJECTED
            - EXPIRED
            - CANCELLED
        signUrl:
          type: string
          description: URL to redirect for sign action
    SignReference:
      required:
        - documents
      type: object
      properties:
        documents:
          type: array
          description: List of document references to sign
          items:
            $ref: '#/components/schemas/DocumentReference'
        applicationId:
          type: string
          description: Application ID
        customerId:
          type: string
          description: Customer ID
        accountId:
          type: string
          description: Account ID
        applicantId:
          type: string
          description: Applicant ID
    SignRequest:
      allOf:
        - $ref: '#/components/schemas/SignReference'
        - required:
            - signers
          type: object
          properties:
            signers:
              type: array
              items:
                $ref: '#/components/schemas/Signer'
    SignRequestInfo:
      allOf:
        - $ref: '#/components/schemas/SignReference'
        - type: object
          properties:
            signRequestId:
              type: string
              description: Sign request ID
            signStatus:
              type: string
              description: Status of the sign request
              enum:
                - UNSIGNED
                - SIGNED
            signTasks:
              type: array
              items:
                $ref: '#/components/schemas/SignTask'
    DocumentTypeV8:
      type: string
      description: |
        * PROMISSORY_NOTE Promissory note
        * PROMISSORY_NOTE_APPENDIX_1 Promissory note appendix 1
        * PROMISSORY_NOTE_APPENDIX_2 Promissory note appendix 2
        * SALES_SLIP Sales slip
        * DIRECT_DEBIT_CONSENT Direct debit consent
        * ENTIRE_LIST_OF_COMPLEMENTS Entire list of complements
        * LOAN_COMMITMENT Loan commitment
        * LOAN_COMMITMENT_OTHER_BANK Loan commitment other bank
        * GENERAL_COLLATERAL General collateral
        * PURCHASE_CONTRACT Purchase contract
        * AMORTIZATION_VERIFICATION Amortization verification
        * VALUATION Valuation
        * POWER_OF_ATTORNEY Power of attorney
        * CO_OP_ANNUAL_REPORT Co-op annual report
        * PROPERTY_DATA Property data
        * CERTIFICATE_OF_EMPLOYER Certificate of employer
        * PAYSLIP Payslip
        * STATEMENT Statement
        * KYC_DOCUMENT KYC-document
        * WELCOME_PACKAGE welcome package
        * TAX_YEARLY tax-yearly
        * MORTGAGE_DEEDS Mortgage deeds
        * SECOND_HAND_MORTGAGES_NOTIFICATION Second hand mortgages notification
        * CREDIT_DECISION_DOCUMENT Credit decision document
        * VALUATION_BROKER Valuation broker
        * AMORTIZATION_BASIS Amortization basis
        * Others
      enum:
        - PROMISSORY_NOTE
        - PROMISSORY_NOTE_APPENDIX_1
        - PROMISSORY_NOTE_APPENDIX_2
        - SALES_SLIP
        - DIRECT_DEBIT_CONSENT
        - ENTIRE_LIST_OF_COMPLEMENTS
        - LOAN_COMMITMENT
        - LOAN_COMMITMENT_OTHER_BANK
        - GENERAL_COLLATERAL
        - PURCHASE_CONTRACT
        - AMORTIZATION_VERIFICATION
        - VALUATION
        - POWER_OF_ATTORNEY
        - CO_OP_ANNUAL_REPORT
        - PROPERTY_DATA
        - CERTIFICATE_OF_EMPLOYER
        - PAYSLIP
        - STATEMENT
        - KYC_DOCUMENT
        - WELCOME_PACKAGE
        - TAX_YEARLY
        - MORTGAGE_DEEDS
        - SECOND_HAND_MORTGAGES_NOTIFICATION
        - CREDIT_DECISION_DOCUMENT
        - VALUATION_BROKER
        - AMORTIZATION_BASIS
        - OTHERS
    DocumentV8:
      type: object
      properties:
        id:
          type: string
          description: Id
        documentType:
          $ref: '#/components/schemas/DocumentTypeV8'
        documentName:
          type: string
          description: Document name
        signStatus:
          type: string
          description: |
            * UNSIGNED Unsigned,default value.
            * MANUAL_SIGNED  Manual signed.
            * DIGITAL_SIGNED Digital signed.
          enum:
            - UNSIGNED
            - MANUAL_SIGNED
            - DIGITAL_SIGNED
        uploadChannel:
          type: string
          description: |
            * WEB Documents are uploaded via API.
            * CSR Documents are generated or uploaded by CSR in the GUI.
            * BANKID Documents are generated via BANKID.
            * OPERATION Documents are generated by system.
          enum:
            - WEB
            - CSR
            - BANKID
            - OPERATION
        createTime:
          type: string
          format: datetime
          description: Format is yyyy-MM-dd HH:mm:ss
    UserResponse:
      type: object
      properties:
        userName:
          type: string
        givenName:
          type: string
        surname:
          type: string
        roles:
          type: array
          description: Roles of user in system.
          items:
            type: string
            enum:
              - Salesman
              - Product Manager
              - Payment Manager
              - My Pages
              - Message
              - E-commerce
              - CSR Manager
              - CSR
              - Configuration Manager
              - BankID
              - Application Submitter
              - API
              - Admin
              - Global Read-only
    MonthlySavings:
      required:
        - accountNumber
        - amount
        - performDayEachMonth
        - performDirectDebitDate
        - referenceId
      type: object
      properties:
        referenceId:
          type: string
        accountNumber:
          type: string
        amount:
          type: integer
          format: int64
        configDate:
          type: string
          format: dateTime
        performDirectDebitDate:
          type: string
          format: date
        performDayEachMonth:
          maximum: 28
          minimum: 1
          type: integer
    OnetimeSavings:
      type: object
      properties:
        referenceId:
          type: string
        accountNumber:
          type: string
        amount:
          type: integer
          format: int64
        configDate:
          type: string
          format: dateTime
        performDirectDebitDate:
          type: string
          format: date
        transaction:
          $ref: '#/components/schemas/DepositAccountTransactions'
        status:
          $ref: '#/components/schemas/OneTimeDirectDebitStatus'
        failedReason:
          type: string
        sendWithdrawRequestDate:
          type: string
          format: dateTime
      required:
        - referenceId
        - accountNumber
        - amount
        - configDate
        - performDirectDebitDate
    Mandate:
      type: object
      nullable: true
      properties:
        mandateSerialId:
          type: string
        createDate:
          type: string
          format: dateTime
        status:
          $ref: '#/components/schemas/MandateStatus'
        ssn:
          type: string
        externalAccountNumber:
          type: string
        bankName:
          type: string
      required:
        - status
    MandateSignStatusAPI:
      type: object
      properties:
        mandate:
          $ref: '#/components/schemas/Mandate'
        signStatus:
          $ref: '#/components/schemas/SignTextMessageStatusResult'
    DirectDebitMandate:
      required:
        - mandate
        - monthlySavings
        - onetimeSavings
      type: object
      properties:
        mandate:
          $ref: '#/components/schemas/Mandate'
        monthlySavings:
          type: array
          items:
            $ref: '#/components/schemas/MonthlySavings'
        onetimeSavings:
          type: array
          items:
            $ref: '#/components/schemas/OnetimeSavings'
    CreateMonthlySavings:
      required:
        - accountNumber
        - amount
        - performDayEachMonth
      type: object
      properties:
        accountNumber:
          type: string
        amount:
          type: integer
          format: int64
        performDayEachMonth:
          maximum: 28
          minimum: 1
          type: integer
    EditMonthlySavings:
      required:
        - amount
        - performDayEachMonth
      type: object
      properties:
        amount:
          type: integer
          format: int64
        performDayEachMonth:
          maximum: 28
          minimum: 1
          type: integer
    NextDirectDebitExecutionDate:
      required:
        - nextDirectDebitExecutionDate
      type: object
      properties:
        nextDirectDebitExecutionDate:
          type: string
          format: date
    ConsentSignatureMessage:
      required:
        - message
      type: object
      properties:
        message:
          type: string
    ConsentSignatureStatus:
      required:
        - status
      type: object
      properties:
        status:
          type: string
          enum:
            - OUTSTANDING_TRANSACTION
            - COMPLETE
            - USER_SIGN
            - NO_CLIENT
    SignTextMessageResult:
      required:
        - requestId
        - signHereUrl
      type: object
      properties:
        requestId:
          type: string
        signHereUrl:
          type: string
    SignTextMessageStatusResult:
      required:
        - status
        - messageMetadata
        - signatureEArchiveId
        - textMessageEArchiveId
      type: object
      properties:
        status:
          type: string
          enum:
            - PENDING
            - CLOSED
            - NOT_FOUND
            - COMPLETED
        messageMetadata:
          type: string
        signatureEArchiveId:
          type: string
        textMessageEArchiveId:
          type: string
    PredefinedExternalAccountUpdateAPI:
      required:
        - externalAccounts
        - redirectURIOnComplete
        - redirectURIOnCancel
        - redirectURIOnPostpone
      type: object
      properties:
        externalAccounts:
          type: array
          items:
            $ref: '#/components/schemas/CustomerExternalAccountForUpdateV5'
        redirectURIOnComplete:
          type: string
        redirectURIOnCancel:
          type: string
        redirectURIOnPostpone:
          type: string
    CloseAccountSignUrlAPI:
      required:
        - redirectURIOnComplete
        - redirectURIOnCancel
        - redirectURIOnPostpone
      type: object
      properties:
        serialIdOfExternalAccount:
          type: string
        applicationChannel:
          type: string
          enum:
            - APP
            - EBANK
        redirectURIOnComplete:
          type: string
        redirectURIOnCancel:
          type: string
        redirectURIOnPostpone:
          type: string
    ApprovePendingTransactionSignUrlAPI:
      required:
        - redirectURIOnComplete
        - redirectURIOnCancel
        - redirectURIOnPostpone
      type: object
      properties:
        redirectURIOnComplete:
          type: string
        redirectURIOnCancel:
          type: string
        redirectURIOnPostpone:
          type: string
    CreateMandateSignUrlRequest:
      required:
        - externalAccountNumber
        - bankName
        - redirectURIOnComplete
        - redirectURIOnCancel
        - redirectURIOnPostpone
      type: object
      properties:
        externalAccountNumber:
          type: string
        bankName:
          type: string
        redirectURIOnComplete:
          type: string
        redirectURIOnCancel:
          type: string
        redirectURIOnPostpone:
          type: string
    MandateStatus:
      type: string
      title: MandateStatus
      description: |
        * PENDING: Pending mandate
        * ESTABLISHED: Established mandate
        * CANCELLED: Cancelled mandate
      enum:
        - PENDING
        - ESTABLISHED
        - CANCELLED
    ConsentSignatureStoreProofResponse:
      required:
        - message
      type: object
      properties:
        message:
          type: string
        eArchiveDocumentId:
          type: string
        state:
          type: string
    ApplicationStateV8:
      title: ApplicationStateV8
      type: string
      example: PN_CREATED
      enum:
        - UNPROCESSED
        - PENDING
        - BID
        - PN_CREATED
        - PN_SENT
        - PN_SIGNED
        - ACCOUNT_CREATED
        - DISBURSED
        - EXPIRED
        - TURNED_DOWN
        - REJECTED
        - CANCELLED
    OneTimeDirectDebitStatus:
      type: string
      title: OneTimeDirectDebitStatus
      description: >
        The status of one time direct debit.

        Pending mandate:WITHDRAW_REQUEST_NEED_SEND,WITHDRAW_REQUEST_HAS_SENT

        Executed bank file:PAYMENT_HANDLED_SUCCESSFULLY

        Failed to handle bank file, but will retry next
        time:PAYMENT_HANDLED_FAILED_RETRY

        Failed to handle bank file: PAYMENT_HANDLED_FAILED
      enum:
        - WITHDRAW_REQUEST_NEED_SEND
        - WITHDRAW_REQUEST_HAS_SENT
        - PAYMENT_HANDLED_SUCCESSFULLY
        - PAYMENT_HANDLED_FAILED_RETRY
        - PAYMENT_HANDLED_FAILED
    PaymentAccountType:
      type: string
      title: PaymentAccountType
      enum:
        - SE-CLEARING
        - SE-BG
        - SE-PG
        - NO-CLEARING
        - IBAN
        - INTERNAL
      description: |
        If receiverAccount has value, receiverType is mandatory
          * SE-CLEARING, Swedish bank account number, refer to https://www-2.danskebank.com/link/Bankernaskontonummer. Support Sweden only. e.g. 9551-1112110
          * SE-BG, Bankgiro number, refer to https://www.bankgirot.se. Support Sweden only. e.g. 10101020
          * SE-PG, Plusgiro number, refer to https://www.plusgirot.se. Support Sweden only. e.g. 4101010
          * NO-CLEARING, Norwegian bank account number. Support Norway only. e.g. 8276 01 00435
          * IBAN, International Bank Account Number, refer to https://www.investopedia.com/terms/i/iban.asp. Support Finland and Nederland only. e.g. FI2112345600000785
          * INTERNAL, VP internal account OCR.
    ReceivingPartyType:
      type: string
      title: ReceivingPartyType
      description: ''
      enum:
        - CUSTOMER
        - LENDER
        - INTERNAL
        - COLLECTION
      x-examples: {}
    Disbursements:
      title: Disbursements
      type: array
      items:
        $ref: '#/components/schemas/Disbursement'
      x-examples: {}
    LoanDisbursementStatus:
      type: string
      title: LoanDisbursementStatus
      enum:
        - PENDING
        - TO_BE_APPROVED
        - PROCESSING
        - CANCELLED
        - EXTERNAL_HANDLED
        - DISBURSED
        - FAILED
      x-examples: {}
    LoanDisbursementType:
      type: string
      title: LoanDisbursementType
      enum:
        - DISBURSEMENT
        - PAYBACK
    ReceivingAccountExtra:
      title: ReceivingAccountExtra
      type: object
      x-examples:
        messageInfo:
          messageInfo: messageInfo
        ocrReference:
          ocrReference: ocrReference
      description: >-
        If messageInfo and ocrReference don't have value before, either
        messageInfo or ocrReference is need when the receiving account type is
        SE-BG/SE-PG, the max length of messageInfo is 119, the max length of
        ocrReference is 25.</br> If the receiving account type is SE-CLEARING,
        you can input messageInfo and messageInfo is not mandatory, the max
        length of messageInfo is 14.
      properties:
        messageInfo:
          type: string
          maxLength: 119
        ocrReference:
          type: string
          maxLength: 25
    Transaction:
      description: ''
      type: object
      x-examples: {}
      title: ''
      properties:
        transactionDate:
          type: string
          description: Format is yyyy-MM-dd HH:mm:ss
          format: date-time
        transactionType:
          $ref: '#/components/schemas/TransactionType'
        transactionMsg:
          type: string
          description: Transaction description information
        amount:
          type: number
          description: Transaction amount
          format: double
    Transactions:
      title: Transactions
      type: array
      items:
        $ref: '#/components/schemas/Transaction'
    SMECategoryResponse:
      title: SME category
      type: object
      x-examples:
        example:
          id: 61bae0ee082abb00a460d46c
          key: NO_CATEGORY
          name:
            en: No category
            sv: Ingen kategori
          products:
            - productName1
            - productName2
          description: The default legal entity category
      properties:
        id:
          type: string
        key:
          type: string
        name:
          type: string
        products:
          type: array
          items:
            type: string
        description:
          type: string
        active:
          type: boolean
    DocumentSubmitResponseAPI:
      type: object
      properties:
        filename:
          type: string
          description: Name of the document
        documentId:
          type: string
          description: Id of the uploaded document
    LoanOffer:
      type: object
      x-examples:
        Example 1:
          id: 1
          shortName: Offer short name
          name: Offer short name
          productIds:
            - '100'
            - '200'
          validFromTime: '2019-08-24'
          validToTime: '2023-10-03'
          paymentPlanLength: 3
          initialAmortizationFreePeriod: 1
          interestRate: 0.10001
          referenceInterestRate: 0.20002
          amortizationMethod: FIXED
          calculateAmortizationBasedOn: ACCOUNT_TENOR
          createDateTime: '2023-03-23T17:40:42.04+08:00'
          updateDateTime: '2023-03-23T17:40:42.04+08:00'
      properties:
        id:
          type: number
          example: 1
        shortName:
          type: string
          example: Offer short name
        name:
          type: string
          example: Offer name
        productIds:
          type: array
          description: Offer supported products
          items:
            type: number
            example: 100
        validFromTime:
          type: string
          format: date
          pattern: '2023-03-03'
          description: Valid from date
        validToTime:
          type: string
          format: date
          example: '2023-10-03'
          description: Valid to date
        paymentPlanLength:
          type: integer
          example: 3
          description: Payment plan length in the offer period
        initialAmortizationFreePeriod:
          type: integer
          example: 1
          description: Initial amortization free period in the offer period
        interestRate:
          type: number
          example: 0.10001
          description: Interest rate in the offer period
        referenceInterestRate:
          type: number
          example: 0.20002
          description: Reference interest rate in the offer period
        amortizationMethod:
          type: string
          example: FIXED
          enum:
            - FIXED
            - ANNUITY
          description: Currently only support FIXED
        calculateAmortizationBasedOn:
          type: string
          enum:
            - ACCOUNT_TENOR
          example: ACCOUNT_TENOR
        createDateTime:
          type: string
          format: date-time
          example: '2023-03-23T17:40:42.04+08:00'
        updateDateTime:
          type: string
          format: date-time
          example: '2023-03-23T17:40:42.04+08:00'
      required:
        - shortName
        - name
        - productIds
        - validFromTime
        - paymentPlanLength
        - initialAmortizationFreePeriod
        - interestRate
        - amortizationMethod
        - calculateAmortizationBasedOn
    VatInformation:
      title: VatInformation
      x-stoplight:
        id: ocn2npaeu2z1l
      type: object
      description: Required only when product is applicable for VAT
      properties:
        vatRepaymentType:
          type: string
          enum:
            - NUMBER_OF_MONTHS
            - DOWN_PAYMENT
            - RECURRING
        vatRepaymentMonth:
          type: integer
          description: requried only when vatRepaymentType is set to NUMBER_OF_MONTH
      required:
        - vatRepaymentType
    AllLoanProducts-Response-v1:
      type: object
      properties:
        data:
          oneOf:
            - $ref: '#/components/schemas/AllLoanProducts-Limited-Response-v1'
            - $ref: '#/components/schemas/AllLoanProducts-Full-Response-v1'
    AllLoanProducts-Limited-Response-v1:
      type: array
      items:
        oneOf:
          - $ref: '#/components/schemas/LoanProduct-Limit-Response-v1'
          - $ref: '#/components/schemas/RevolvingProduct-Limit-Response-v1'
      discriminator:
        propertyName: productType
        mapping:
          LOAN: '#/components/schemas/LoanProduct-Limit-Response-v1'
          REVOLVING: '#/components/schemas/RevolvingProduct-Limit-Response-v1'
    AllLoanProducts-Full-Response-v1:
      type: array
      items:
        oneOf:
          - $ref: '#/components/schemas/LoanProduct-Full-Response-v1'
          - $ref: '#/components/schemas/RevolvingProduct-Full-Response-v1'
      discriminator:
        propertyName: productType
        mapping:
          LOAN: '#/components/schemas/LoanProduct-Full-Response-v1'
          REVOLVING: '#/components/schemas/RevolvingProduct-Full-Response-v1'
    LoanProduct-Basic-Response-v1:
      type: object
      properties:
        id:
          type: string
        productName:
          type: string
          description: Product name
        countryCode:
          type: string
        offerSchemaReferences:
          $ref: '#/components/schemas/ViljaSchemaReferences'
        customerType:
          type: string
          enum:
            - CONSUMER
            - BUSINESS
          description: |
            * CONSUMER: consumer customer
            * BUSINESS: SME Customer
        discontinued:
          type: boolean
        description:
          type: string
        maxLoanAmount:
          type: string
          description: Max applied amount
        minLoanAmount:
          type: string
          description: Min applied amount
        baseInterestRate:
          type: number
          description: Base interest rate
        invoicingPeriod:
          type: string
          enum:
            - MONTHLY
            - QUARTERLY
            - BI_YEARLY
            - YEARLY
          description: Invoice periodicity type
        dueDay:
          type: integer
          description: Due day
          format: int32
        startupFee:
          type: number
          description: Startup fee
      discriminator:
        propertyName: productType
    LoanProduct-Full-Basic-Response-v1:
      allOf:
        - $ref: '#/components/schemas/LoanProduct-Basic-Response-v1'
      type: object
      properties:
        firstStatementType:
          type: string
          enum:
            - WHOLE_STATEMENT_PERIOD
            - POSSIBLE_STATEMENT
        generalLedgerAccount:
          type: string
        productVersionId:
          type: string
        effectiveDate:
          type: string
          format: date
          example: '2023-10-08'
        version:
          type: integer
          format: int32
        createDateTime:
          type: string
          format: datetime
          example: '2023-09-26T10:37:18.616+08:00'
        capitalizeStartupFeeType:
          $ref: '#/components/schemas/CapitalizeType'
        statementFee:
          type: number
        directDebitFee:
          type: number
        documentTemplateConfigurations:
          type: array
          items:
            type: object
            properties:
              fileName:
                type: string
              typeName:
                type: string
        gracePeriod:
          type: integer
          format: int32
        lateInterestRateFixed:
          type: boolean
        lateInterestRate:
          type: number
        reminderDayAfterDueDate:
          type: integer
          format: int32
        reminderFee:
          type: number
        latePaymentFee:
          type: number
        collectionFee:
          type: number
          description: Collection fee when sending invoices to collection
        collectionFeeAccount:
          type: number
          description: Collection fee when sending accounts to collection
        maxAmountToCredit:
          type: number
        promiseToPayPeriod:
          type: integer
          format: int32
        promiseToPayGracePeriod:
          type: integer
          format: int32
        checkerForManualDecisionChange:
          type: boolean
        allowApproverCommentForManualDecisionChange:
          type: boolean
        collectAccountAsInternalOtherLoan:
          type: boolean
        finalDisbursementCreditCheck:
          type: boolean
        latePaymentStatementItemTypeGroups:
          type: array
          items:
            $ref: '#/components/schemas/InvoiceItemTypeInProduct'
        accountOCRGenerationRule:
          type: string
        prefixOfAccountNumber:
          type: string
        invoiceTypeInSummary:
          type: string
          enum:
            - ALL
            - ONLY_OCR
            - ONLY_DD
        includeOverdueAmountsInWithdrawalRequest:
          type: boolean
        fundingSourceSchemaReference:
          $ref: '#/components/schemas/ViljaSchemaReference'
    ProductCollectionAgency-Basic-Response:
      type: object
      properties:
        collectionAgencyId:
          type: string
        collectionAgencyName:
          type: string
        overDueToSetStatementToCollection:
          type: integer
          format: int32
        minAmountToSentToCollection:
          type: number
        maxAmountToSentToCollection:
          type: number
        statementItemsToBeSentToCollection:
          type: array
          items:
            $ref: '#/components/schemas/InvoiceItemTypeInProduct'
        collectionStatementsToSetAccountToCollection:
          type: integer
          format: int32
        unpaidStatementsToSetAccountToCollection:
          type: integer
          format: int32
        minAmountToSentToCollectionForAccount:
          type: number
        createStatementAtCollectionState:
          type: boolean
        invoiceOverDueToSetAccountToCollection:
          type: integer
          format: int32
    LoanProductCollectionAgency-Basic-Response:
      allOf:
        - $ref: '#/components/schemas/ProductCollectionAgency-Basic-Response'
      properties:
        writeOffAccountWhenSendToCollection:
          type: boolean
    LoanProduct-Limit-Response-v1:
      allOf:
        - $ref: '#/components/schemas/LoanProduct-Basic-Response-v1'
      type: object
      properties:
        productType:
          type: string
          enum:
            - LOAN
            - REVOLVING
        externalBankAccountMandatory:
          type: boolean
          description: Indicate whether the external bank account is mandatory
        loanType:
          type: string
          enum:
            - TERM_LOAN
            - MORTGAGE_LOAN
            - LEASING
            - RENT
        maxTenorLength:
          type: integer
          format: int32
          description: Max applied tenor
        minTenorLength:
          type: integer
          format: int32
          description: Min applied tenor
        amortizationMethod:
          type: string
          enum:
            - ANNUITY
            - FIXED
        floatingStatement:
          type: boolean
        residualAmountType:
          $ref: '#/components/schemas/ResidualAmountType'
    LoanProduct-Full-Response-v1:
      allOf:
        - $ref: '#/components/schemas/LoanProduct-Full-Basic-Response-v1'
      type: object
      properties:
        productType:
          type: string
          enum:
            - LOAN
            - REVOLVING
        externalBankAccountMandatory:
          type: boolean
          description: Indicate whether the external bank account is mandatory
        loanType:
          type: string
          enum:
            - TERM_LOAN
            - MORTGAGE_LOAN
            - LEASING
            - RENT
        referenceRateType:
          type: string
        amortizationMethod:
          type: string
          enum:
            - ANNUITY
            - FIXED
        interestCalculationDays:
          type: string
          enum:
            - FIXED_PERIOD
            - ACTUAL_NUMBER_OF_DAYS
        annuityType:
          type: string
          enum:
            - ORDINARY_ANNUITY
            - ANNUITY_DUE
        floatingStatement:
          type: boolean
        maxTenorLength:
          type: integer
          format: int32
          description: Max applied tenor
        minTenorLength:
          type: integer
          format: int32
          description: Min applied tenor
        capitalizeCompensationType:
          $ref: '#/components/schemas/CapitalizeType'
        brokenPeriodCompensationType:
          type: string
          enum:
            - INTEREST
            - INTEREST_AND_AMORTIZATION_AS_FEE
        eInvoiceFee:
          type: number
        maxAmountToCure:
          type: number
        residualAmountType:
          $ref: '#/components/schemas/ResidualAmountType'
        residualAmountCalculationRule:
          type: string
        lastCalenderMonth:
          type: boolean
          description: >-
            Indicate which period should be used in the invoice file to count
            transactions. For example, if the invoice is run July 12th, include
            all transactions from June 1st until June 30th.
        statementTransactionPeriodDay:
          type: number
          description: >-
            Indicate which period should be used in the invoice file to count
            transactions. For example, if the invoice is run July 12th and the
            statementTransactionPeriodDay is 10, include all transactions from
            June 11th to July 10th.
        feeTypeToUseInCalculation:
          type: string
          enum:
            - STATEMENT_FEE
            - DIRECT_DEBIT_FEE
            - EINVOICE_FEE
        daysPriorToDueDateForProducingStatement:
          type: integer
          format: int32
        withdrawalRequestAdvanceInDays:
          type: integer
          format: int32
        displayPaymentPlan:
          type: boolean
        serviceFeeRate:
          type: number
        serviceFee:
          type: number
        amountToUseInCalculationServiceFee:
          type: string
          enum:
            - ORIGINAL_AMOUNT
            - REMAINING_AMOUNT
        paymentAgreements:
          type: array
          items:
            type: object
            properties:
              id:
                type: integer
                format: int32
              paymentAgreementType:
                type: string
                enum:
                  - PAYMENT_FREE_MONTH
                  - AMORTIZATION_FREE_MONTH
                  - PAYMENT_PROGRAM_CHANGE
                  - CHANGE_OF_BILL_CYCLE
                  - CUSTOM_AMOUNTS
              administrationFee:
                type: number
              scriptRule:
                type: string
              extendTotalTenor:
                type: boolean
              sendStatement:
                type: boolean
              enableForCustomer:
                type: boolean
        valuationFee:
          type: number
        valuationFeeType:
          type: string
          enum:
            - FIRST_STATEMENT
            - PAYED_NET
        baseDeedFee:
          type: number
        deedFeeRate:
          type: number
        safetyMargin:
          type: number
        titleDeedFeeRate:
          type: number
        titleDeedFeeAmount:
          type: number
        productTerminationLetter:
          type: object
          properties:
            enable:
              type: boolean
            oldestNonCollectionInvoiceOverDueDays:
              type: integer
              format: int32
            numberOfOverDueNonCollectionInvoices:
              type: integer
              format: int32
            protectFromReminder:
              type: boolean
            terminationLetterFee:
              type: number
            dueAfterDays:
              type: integer
              format: int32
        effectiveRateStrategy:
          type: string
          enum:
            - DEFAULT
            - SIMPLIFIED
            - SHARED_EQUITY_MORTGAGE
        effectiveRateInflation:
          type: number
        considerCoApplicantAsGuarantor:
          type: boolean
        applicableForVat:
          type: boolean
        vatInterestRateType:
          type: string
          enum:
            - PRODUCT_INTEREST_RATE
            - ACCOUNT_INTEREST_RATE
            - SPECIAL_INTEREST_RATE
            - NONE
        vatRepaymentType:
          type: string
          enum:
            - ONE_TIME_PAYMENT
            - RECURRING
        vatInterestRate:
          type: number
        calendarBasedInvoicePeriod:
          type: boolean
        productCollectionAgency:
          $ref: '#/components/schemas/LoanProductCollectionAgency-Basic-Response'
    CapitalizeType:
      type: string
      enum:
        - CAPITALIZED
        - FIRST_STATEMENT
        - PAYED_NET
        - PAY_OFF_FIRST
    InvoiceItemTypeInProduct:
      type: string
      enum:
        - DEED_FEE
        - DEED_FEE_VAT
        - ADMINISTRATIVE_FEE
        - ADMINISTRATIVE_FEE_VAT
        - SERVICE_FEE_BEFORE_FIRST_STATEMENT
        - SERVICE_FEE_BEFORE_FIRST_STATEMENT_VAT
        - UNPAID_AMOUNT_FROM_STATEMENT
        - UNPAID_AMOUNT_FROM_STATEMENT_VAT
        - SALE_OF_NON_FINANCIAL_CONTRACT
        - SALE_OF_NON_FINANCIAL_CONTRACT_VAT
        - SERVICE_FEE
        - SERVICE_FEE_VAT
        - REMINDER_FEE
        - REMINDER_FEE_VAT
        - INTEREST
        - INTEREST_VAT
        - TRANCHE_STARTUP_FEE
        - DIRECT_DEBIT_FEE
        - DIRECT_DEBIT_FEE_VAT
        - TERMINATION_LETTER_FEE
        - TERMINATION_LETTER_FEE_VAT
        - INTEREST_BEFORE_FIRST_STATEMENT
        - INTEREST_BEFORE_FIRST_STATEMENT_VAT
        - INTERNALLY_REBOOKED_DOWN_PAYMENT
        - DOWN_PAYMENT_NON_FINANCIAL_CONTRACT
        - DOWN_PAYMENT_NON_FINANCIAL_CONTRACT_VAT
        - DOWN_PAYMENT_FINANCIAL_CONTRACT
        - EXTERNAL_DOWN_PAYMENT
        - LATE_PAYMENT_INTEREST
        - LATE_PAYMENT_INTEREST_VAT
        - SPECIAL_LEASING_FEE_BEFORE_FIRST_STATEMENT
        - SPECIAL_LEASING_FEE_BEFORE_FIRST_STATEMENT_VAT
        - STARTUP_FEE_AMORTIZATION
        - STARTUP_FEE_AMORTIZATION_VAT
        - VALUATION_FEE
        - VALUATION_FEE_VAT
        - TRANCHE_ADMINISTRATIVE_FEE
        - COLLECTION_FEE
        - COLLECTION_FEE_VAT
        - STATEMENT_FEE
        - STATEMENT_FEE_VAT
        - SALE_OF_FINANCIAL_CONTRACT
        - TITLE_DEED_FEE
        - TITLE_DEED_FEE_VAT
        - LIFE_INSURANCE_PREMIE
        - LIFE_INSURANCE_PREMIE_VAT
        - LATE_PAYMENT_FEE
        - LATE_PAYMENT_FEE_VAT
        - AMORTIZATION
        - AMORTIZATION_VAT
        - STARTUP_FEE
        - STARTUP_FEE_VAT
        - PREPAYMENT
        - ROUNDING
        - FULL_INSURANCE_PREMIE
        - FULL_INSURANCE_PREMIE_VAT
        - E_INVOICE_FEE
        - E_INVOICE_FEE_VAT
        - PAYMENT_PLAN_FEE
        - PAYMENT_PLAN_FEE_VAT
    ResidualAmountType:
      type: string
      enum:
        - NONE
        - FINAL_INVOICE
        - LEFT_AS_PRINCIPAL
      description: Residual amount type
    AccountHolderType:
      type: string
      enum:
        - SME
        - INDIVIDUAL_MAIN
        - INDIVIDUAL_CO
      description: |
        * SME: SME holder.
        * INDIVIDUAL_MAIN: Individual main holder.
        * INDIVIDUAL_CO: Individual co holder.
    ViljaSchemaReference:
      type: object
      properties:
        refId:
          type: string
        uri:
          type: string
    ViljaSchemaReferences:
      type: array
      items:
        $ref: '#/components/schemas/ViljaSchemaReference'
    RevolvingProduct-Limit-Response-v1:
      allOf:
        - $ref: '#/components/schemas/LoanProduct-Basic-Response-v1'
      type: object
      properties:
        productType:
          type: string
          enum:
            - LOAN
            - REVOLVING
        minimumAmountLimit:
          type: number
        minimumAmountRate:
          type: number
        trancheFeeRate:
          type: number
        availableTrancheTypes:
          type: array
          items:
            type: string
            enum:
              - PURCHASE
              - CASH_WITHDRAWAL
    RevolvingProduct-Full-Response-v1:
      allOf:
        - $ref: '#/components/schemas/LoanProduct-Full-Basic-Response-v1'
      type: object
      properties:
        productType:
          type: string
          enum:
            - LOAN
            - REVOLVING
        trancheBlockGracePeriod:
          type: integer
          format: int32
        minimumAmountLimit:
          type: number
        minimumAmountRate:
          type: number
        cutOffDay:
          type: integer
          format: int32
        fallbackToProductGracePeriod:
          type: integer
          format: int32
        trancheSlipRequired:
          type: boolean
        minimumTrancheAmount:
          type: number
        trancheFeeCapitalizeType:
          $ref: '#/components/schemas/CapitalizeType'
        trancheFeeRate:
          type: number
        minimumTrancheFee:
          type: number
        exceedCreditLimitAllowedFees:
          type: array
          items:
            type: string
            enum:
              - TRANCHE_FEE
        checkerForPeriodicTrancheLimitChange:
          type: boolean
        immediateDisbursementOfExternallyRequestedCashWithdrawal:
          type: boolean
        availableTrancheTypes:
          type: array
          items:
            type: string
            enum:
              - PURCHASE
              - CASH_WITHDRAWAL
        productCollectionAgency:
          $ref: '#/components/schemas/ProductCollectionAgency-Basic-Response'
    CreateIncomingPayment-Request-v2:
      required:
        - requestId
        - paymentChannelId
        - createDateTime
        - paymentReference
        - amount
        - transactionDate
      type: object
      properties:
        requestId:
          type: string
          description: >-
            The unique identifier of the request, is used to avoid repeated
            submissions. For the same paymentChannelId, requestId should be
            different. UUID is recommended, the maximum length is 255.
        paymentChannelId:
          type: string
          description: Payment channel id, only support payment channel type is API.
        createDateTime:
          type: string
          description: Create date time, format is yyyy-MM-dd HH:mm:ss
        paymentReference:
          type: string
          description: Account number
        amount:
          type: number
          description: Incoming payment amount.
        transactionDate:
          type: string
          description: Transaction date, format is yyyy-MM-dd.
        currencyCode:
          type: string
          description: Currency code, such as SEK, EUR, NOK.
        paymentType:
          type: string
          description: Payment type, maximum length is 255.
        message:
          type: string
          description: Message, maximum length is 119.
        externalReference:
          type: string
          description: External reference, maximum length is 255.
        paymentDate:
          type: string
          description: Payment date, format is yyyy-MM-dd.
        companyNumber:
          type: string
          description: Company number, maximum length is 255.
        payerInfo:
          type: object
          properties:
            payerAccountNumber:
              type: string
              description: Payer account number, maximum length is 255.
            payerName:
              type: string
              description: Payer name, maximum length is 255.
            payerAddress:
              type: string
              description: Payer address, maximum length is 255.
            payerPostCode:
              type: string
              description: Payer post code.
            payerTown:
              type: string
              description: Payer town, maximum length is 255.
            payerCountry:
              type: string
              description: Payer country, maximum length is 255.
            payerCountryCode:
              type: string
              description: Country code (Uppercase two-letter ISO-3166 code. e.g. SE, FI)
        additionalInformation:
          description: Additional information
          type: array
          items:
            type: object
            properties:
              key:
                type: string
              value:
                type: string
    CreateIncomingPayment-Response-v2:
      allOf:
        - $ref: '#/components/schemas/CreateIncomingPayment-Request-v2'
      type: object
      properties:
        loanIncomingPaymentId:
          type: integer
          format: int32
          description: Loan incoming payment id
    ValidateIncomingPayment-Request-v2:
      required:
        - paymentChannelId
        - paymentReference
        - amount
        - transactionDate
      type: object
      properties:
        paymentChannelId:
          type: string
          description: Payment channel id, only support payment channel type is API.
        paymentReference:
          type: string
          description: Account number
        amount:
          type: number
          description: Incoming payment amount.
        transactionDate:
          type: string
          description: Transaction date, format is yyyy-MM-dd.
        currencyCode:
          type: string
          description: Currency code, such as SEK, EUR, NOK.
    ValidateIncomingPayment-Response-v2:
      type: object
      properties:
        validationResult:
          type: string
          enum:
            - PASS
            - NOT_PASS
          description: Validation result.
        message:
          type: string
          description: Validation message.
    GetIncomingPaymentStatus-Response-v2:
      type: object
      properties:
        receivedAccountId:
          type: string
          description: Received account id.
        receivedAccountNumber:
          type: string
          description: Received account number.
        amount:
          type: number
          description: Incoming payment amount or payback amount.
        status:
          $ref: '#/components/schemas/PaymentStatus'
        result:
          type: string
          description: >
            * PAY_DIRECT  The amount has been paid directly.

            * PAY_TO_OTHER_ACCOUNT  The amount has been paid to the other
            account, refer to receivedAccountId and receivedAccountNumber.

            * PAYBACK_TO_CUSTOMER The amount has been paid back to the customer,
            refer to paybackInfo.

            * PAYBACK_TO_COLLECTION_AGENCY  The amount has been paid back to the
            collection agency, refer to paybackInfo.

            * SMALL_AMOUNT_KEPT_BY_LENDER  The amount has been kept by the
            lender.
          enum:
            - PAY_DIRECT
            - PAY_TO_OTHER_ACCOUNT
            - PAYBACK_TO_CUSTOMER
            - PAYBACK_TO_COLLECTION_AGENCY
            - SMALL_AMOUNT_KEPT_BY_LENDER
        paybackInfo:
          type: object
          properties:
            type:
              type: string
              description: >
                * SE_BANK_ACCOUNT: Swedish external bank account

                * NO_BANK_ACCOUNT: Norwegian external bank account

                * SE_BG: Bankgiro number, refer to https://www.bankgirot.se

                * SE_PG: Plusgiro number, refer to https://www.plusgirot.se

                * IBAN: International Bank Account Number, refer to
                https://www.investopedia.com/terms/i/iban.asp
              example: SE_BANK_ACCOUNT
              enum:
                - NO_BANK_ACCOUNT
                - SE_BANK_ACCOUNT
                - SE_BG
                - SE_PG
                - IBAN
            identifiers:
              type: object
              properties:
                clearingNumber:
                  type: string
                  example: '1346'
                bankName:
                  type: string
                  example: Danske Bank
                accountNumber:
                  type: string
                  example: '2626752'
    Offer-Response-v1:
      type: object
      properties:
        data:
          oneOf:
            - $ref: '#/components/schemas/LoanProduct-Offer-Response-v1'
            - $ref: '#/components/schemas/RevolvingProduct-Offer-Response-v1'
    LoanProduct-Offer-Response-v1:
      type: object
      properties:
        id:
          type: number
          example: 1
        shortName:
          type: string
          example: Offer short name
        name:
          type: string
          example: Offer name
        productIds:
          type: array
          description: Offer supported products
          items:
            type: number
            example: 100
        validFromTime:
          $ref: '#/components/schemas/VPDate'
        validToTime:
          $ref: '#/components/schemas/VPDate'
        paymentPlanLength:
          type: integer
          example: 3
          description: Payment plan length in the offer period
        initialAmortizationFreePeriod:
          type: integer
          example: 1
          description: Initial amortization free period in the offer period
        interestRate:
          type: number
          example: 0.10001
          description: Interest rate in the offer period
        referenceInterestRate:
          type: number
          example: 0.20002
          description: Reference interest rate in the offer period
        amortizationMethod:
          type: string
          example: FIXED
          enum:
            - FIXED
            - ANNUITY
          description: Currently only support FIXED
        calculateAmortizationBasedOn:
          type: string
          enum:
            - ACCOUNT_TENOR
          example: ACCOUNT_TENOR
        createDateTime:
          $ref: '#/components/schemas/VPTimeStamp'
        updateDateTime:
          $ref: '#/components/schemas/VPTimeStamp'
        offerType:
          type: string
          example: LOAN
        referenceRateType:
          type: string
          example: test
    RevolvingProduct-Offer-Response-v1:
      type: object
      properties:
        id:
          type: number
          example: 1
        shortName:
          type: string
          example: REVOLVING Offer short name
        name:
          type: string
          example: Offer name
        productIds:
          type: array
          description: REVOLVING Offer supported products
          items:
            type: number
            example: 100
        validFromTime:
          $ref: '#/components/schemas/VPDate'
        validToTime:
          $ref: '#/components/schemas/VPDate'
        paymentPlanLength:
          type: integer
          example: 3
          description: Payment plan length in the offer period
        initialPaymentFreePeriod:
          type: integer
          example: 1
          description: Initial payment-free period
        administrativeFee:
          type: integer
          example: 1
          description: administrative Fee
        trancheFee:
          type: number
          example: 0.10001
          description: tranche Fee
        minimumTrancheFee:
          type: number
          example: 10
          description: minimum Tranche Fee
        trancheFeeCapitalizeType:
          type: string
          example: CAPITALIZED
          enum:
            - CAPITALIZED
            - FIRST_STATEMENT
            - PAYED_NET
          description: tranche Fee Capitalize Type
        fallBackToProductRulesIfBrokerPayments:
          type: boolean
          example: 'false'
        creator:
          type: string
          description: creator
          example: jacksontest
        residualValue:
          type: number
          example: 10.2
          description: residual Value
        amortizationPercentage:
          type: number
          example: 10.2
          description: amortization Percentage
        amortizationCalculatedOnPaymentPlanLength:
          type: boolean
          description: amortization Calculated On Payment Plan Length
        minimumTrancheAmount:
          type: number
          example: 10.2
          description: minimum Tranche Amount
        createTime:
          $ref: '#/components/schemas/VPTimeStamp'
        updateTime:
          $ref: '#/components/schemas/VPTimeStamp'
        offerType:
          type: string
          example: REVOLVING
        amortizationLimit:
          type: integer
          example: 1
          description: amortization Limit
    VPDate:
      type: string
      title: VPDate
      description: Formatted string of Date
      format: date
      example: '2021-11-10'
    VPTimeStamp:
      type: string
      title: VPTimeStamp
      description: Formatted String of timestamp
      examples: []
      example: '2021-02-24T14:57:10.35+08:00'
      format: date-time
    VPDynamicFields:
      title: VPDynamicFields
      type: object
      description: >-
        DynamicaFields, json format, please contact with the service manager to
        know the exact structure.

        Null value is not allowed.

        Example:  

        ```json    

        {
          "stringField1": "value1",
          "objectFeild1": {
            "key2-1": "value2-1"
          },
          "arrayField1": [
            "arrayValue1",
            "arrayValue2"
          ]
        }

        ```
    SensitiveLevel:
      type: string
      title: SensitiveLevel
      description: >-
        NONE: When the API data is not sensitive

        USER: USER is used for API data that is related to financial customer

        PERSONAL: PERSONAL is used for API data that is related to a end
        customer
      enum:
        - NONE
        - USER
        - PERSONAL
    ViljaSchemaReference-2:
      title: ViljaSchemaReference
      type: object
      properties:
        refId:
          type: string
        uri:
          type: string
    ViljaSchemaMetadata:
      title: ViljaSchemaMetadata
      type: object
      properties:
        sensitive:
          $ref: '#/components/schemas/SensitiveLevel'
        tags:
          type: array
          items:
            type: string
        selfRef:
          $ref: '#/components/schemas/ViljaSchemaReference-2'
  securitySchemes:
    X-AUTH-TOKEN:
      type: apiKey
      in: header
      name: X-AUTH-TOKEN
    Authorization:
      type: apiKey
      in: header
      name: Authorization
    accessTokenCookie:
      type: apiKey
      in: cookie
      name: __Secure-AccessToken
      description: Cookie attributes can be configured in VP admin area
  requestBodies:
    Disbursement-Patch:
      content:
        application/json:
          schema:
            description: ''
            type: object
            x-examples:
              example-1:
                receivingAccount:
                  type: SE-CLEARING
                  number: 9551-1112110
                receivingAccountExtra:
                  ocrReference: ocrReference
                desiredDisbursementDate: '2022-02-03'
                amount: 20
            properties:
              receivingAccount:
                $ref: '#/components/schemas/DisbursementAccountV1'
              receivingAccountExtra:
                $ref: '#/components/schemas/ReceivingAccountExtra'
              desiredDisbursementDate:
                $ref: '#/components/schemas/VPDate'
              amount:
                type: number
                format: double
                minimum: 0
          examples:
            PG:
              value:
                receivingAccount:
                  type: SE-PG
                  number: '48400006'
                receivingAccountExtra:
                  ocrReference: ocrReference
                desiredDisbursementDate: '2022-02-03'
                amount: 20
            INTERNAL:
              value:
                receivingAccount:
                  type: INTERNAL
                  number: '1000520'
                desiredDisbursementDate: '2022-02-03'
                amount: 20
      description: ''
    SmeLoanAccount-Post-V8:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/RegularLoanAccountForCreationRequestV8'
          examples:
            Sme loan account creation example:
              value:
                productName: smeProductName
                manualDeltaInterestRate: 0.05
                accountHolders:
                  - type: SME
                    id: semCustomerId
                state: PENDING
                approvedAmount: 10000
                approvedTenorInMonth: 10
                disbursementAccount:
                  type: SE_BANK_ACCOUNT
                  number: 9551-1112110
                statementChannel: PAPER
                lastStatementPrincipal: 0
                externalReference: x-1234567
                externalDisbursement:
                  disbursementDate: '2022-01-20'
                  remainingTenorInMonth: 8
                  paidInterest: 200
                  paidAmortization: 2000
                dynamicFields:
                  name: This is name
                  description: This is description
                  rating: 5
                  recurrenceInterval: 30
                  email: abc@vilja.com
                  decisionReason: AGE
                  dueDate: '2021-12-23'
                dueDay: 28
                offerId: '1'
                residualAmount: 0
    CreditLoanAccount-Patch-V2:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/RevolvingAccountV2ForPatch'
          examples:
            Credit loan account patch request body example:
              value:
                creditLimit: 1000
                dynamicFields:
                  name: This is name
                  description: This is description
                  rating: 5
                  recurrenceInterval: 30
                  email: abc@vilja.com
                  decisionReason: AGE
                  dueDate: '2021-12-23'
    LoanApplication-Patch-Request:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/LoanApplicationPatchRequest'
          examples:
            Patch loan application request:
              value:
                appliedProductID: '10001'
                appliedOfferID: '1'
                desiredLoan: 100
                desiredPaybackTime: 20
                manualDeltaInterestRate: 0.01
                credits:
                  - sum: 10000
                    rate: 0.1
                    paybackTime: 10
                    bank: BankA
                    monthlyCost: 1000
                    typeOfCredit: HOUSE_MORTGAGE
                    externalLoanAccountNumber: '1234567'
                    validForCollateral: false
                    amortization: 1000
                    receiverType: SE-CLEARING
                    receiverAccount: 9551-1112110
                    needSettle: true
                    settleAmount: 3000
                mainApplicant:
                  givenName: Frida
                  surName: Kranstego
                  email: test@viljasolutions.com
                  phonePrimary: '+46123456789'
                  phoneHome: '+46123456789'
                  propertyType: RENTED
                  propertyCost: 30000
                  maritalStatus: MARRIED
                  children: 3
                  address:
                    careOf: careOf
                    address: address
                    postalCode: '12345'
                    city: city
                    country: country
                    region: region
                    apartmentNumber: apartmentNumber
                    propertyNumber: propertyNumber
                    buildingName: buildingName
                    floorNumber: floorNumber
                    complementingInformation: complementingInformation
                  employmentInfo:
                    employer: employer
                    employmentType: FULL
                    salary: 20000
                    netSalary: 18000
                    employedAt: '2000-11-12'
                    referencePhone: '+46123456789'
                  selfAssessedPEP: 'NULL'
                  nationality: SE
                  otherIncomes:
                    - type: RENTAL
                      period: WEEKLY
                      value: 100
                  educationLevel: COLLEGE_3_YEAR
                extras:
                  attr1: value1
                  attr2: value2
                  attr3: value3
                campaigns:
                  campaign1: value1
                  campaign2: value2
                  campaign3: value3
                disbursementAccount:
                  type: INTERNAL
                  number: '1234567'
                comments:
                  - comment1
                  - comment2
                statementChannel: ELECTRONIC_EMAIL_NOTIFICATION
                preferredDueDay: 28
                downgradeAccepted: true
                downgradeAmount: 5000
                reasonForCredit:
                  - CAR
                  - RENOVATION
                  - OTHER
                externalPartyID: 1
                administrativeAreaName: administrativeAreaName
                salesPerson: Ben
                residualAmount: 0
                residualAmountNotAllowToBeOverwrittenByRule: true
  responses:
    Disbursement-Response:
      description: ''
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Disbursement'
          examples:
            Internal Disbursement:
              value:
                id: '1952'
                receivingPartyType: INTERNAL
                receivingPartyName: testCompany
                receivingAccount:
                  type: INTERNAL
                  number: '1000520'
                receivingAccountExtra:
                  messageInfo: messageInfo
                desiredDisbursementDate: '2021-11-30'
                disburseDate: '2021-11-30'
                completedDate: '2021-11-30'
                resultDescription: resultDescription
                amount: 200
                status: DISBURSED
                type: DISBURSEMENT
                transaction:
                  transactionDate: '2021-11-30 13:51:37'
                  transactionType: LoanInternalDisbursementTransaction
                  transactionMsg: transactionMsg
                  amount: 200
                noteFromRequester: ''
                noteFromApprover: ''
                requester: CSR
                approver: CSR Manager
    Disbursements-Response:
      description: ''
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Disbursements'
          examples:
            Muti Disbursements:
              value:
                - id: '1952'
                  receivingPartyType: INTERNAL
                  receivingPartyName: testCompany
                  receivingAccount:
                    type: INTERNAL
                    number: '1000520'
                  receivingAccountExtra:
                    messageInfo: messageInfo
                  desiredDisbursementDate: '2021-11-30'
                  disburseDate: '2021-11-30'
                  completedDate: '2021-11-30'
                  resultDescription: resultDescription
                  amount: 200
                  status: DISBURSED
                  type: DISBURSEMENT
                  transaction:
                    transactionDate: '2021-11-30 13:51:37'
                    transactionType: LoanInternalDisbursementTransaction
                    transactionMsg: transactionMsg
                    amount: 200
                  noteFromRequester: ''
                  noteFromApprover: ''
                  requester: CSR
                  approver: CSR Manager
                - id: '1953'
                  receivingPartyType: CUSTOMER
                  receivingPartyName: receivingPartyName
                  receivingAccount:
                    type: SE-CLEARING
                    number: 9551-1112110
                  receivingAccountExtra:
                    messageInfo: messageInfo
                  desiredDisbursementDate: '2021-11-30'
                  disburseDate: '2021-11-30'
                  completedDate: '2021-11-30'
                  resultDescription: resultDescription
                  amount: 195
                  status: PROCESSING
                  type: PAYBACK
                  transaction:
                    transactionDate: '2022-01-10 13:55:59'
                    transactionType: PaybackToCustomerFromAccountTransaction
                    transactionMsg: transactionMsg
                    amount: 195
                  noteFromRequester: ''
                  noteFromApprover: ''
                  requester: Operation
                  approver: CSR Manager
                - id: '2102'
                  receivingPartyType: INTERNAL
                  receivingPartyName: testCompany
                  receivingAccount:
                    type: INTERNAL
                    number: '1000520'
                  receivingAccountExtra:
                    messageInfo: messageInfo
                  desiredDisbursementDate: '2022-02-03'
                  disburseDate: '2022-02-03'
                  completedDate: '2022-02-03'
                  resultDescription: '2022-02-03'
                  amount: 20
                  status: PENDING
                  type: DISBURSEMENT
                  noteFromRequester: ''
                  noteFromApprover: ''
                  requester: CSR
                  approver: CSR Manager
    Common-BadRequest-Response:
      description: >-
        Bad request. The parameters in the URL or request body are invalid.
        Please refer to the error message for details.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorMessage'
          examples:
            Param Error:
              value:
                type: ParamError
                message: Param error
                translationKey: error.unsupportedField
    Common-Unauthorized-Response:
      description: >-
        Unauthorized. The token is invalid/expired or the SSN does not exist in
        the VP. Please refer to the error message for details.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorMessage'
          examples:
            Unauthorized:
              value:
                type: Error
                message: Authorization requires a valid access token.
                translationKey: error.token.invalid
    Common-Forbidden-Response:
      description: >-
        Forbidden. No access rights or access frequency too fast. Please refer
        to the error message for details.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorMessage'
          examples:
            Forbidden:
              value:
                type: ServerError
                message: Forbidden
    Common-ServerError-Response:
      description: Internal server error. Please refer to the error message for details.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorMessage'
          examples:
            Server Error:
              value:
                type: ServerError
                message: Internal server error
    LoanAccount-Response-V5:
      description: ''
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/LoanAccountResponseModelV5'
          examples:
            One loan account response:
              value:
                id: '350'
                promissoryNoteDocumentId: string
                accountNumber: '2000024'
                ocrNumber: '2000024'
                state: PENDING
                createDate: '2021-12-16 14:12:00'
                appliedAmount: 10000
                remainingPrincipal: 10110.94
                remainingTenor: 6
                interestRate: 0.03
                monthlyCost: 1710.44
                mainHolderId: '50056'
                coHolderId: null
                statementChannel: PAPER
                product:
                  id: '1'
                  name: cusumerLoan
                  baseInterestRate: 0.01
                  referenceInterestRate: 0.04
                  lateInterestRate: 0.03
                  description: string
                  dueDay: 28
                  createDate: '2021-12-16 13:48:13'
                  serviceFeeRate: 0
                  amountToUseInCalculationServiceFee: ORIGINAL_AMOUNT
                  startupFee: 100
                  ocrFee: 100
                  directDebitFee: 100
                  latePaymentFee: 100
                  collectionFeeStatement: 100
                  collectionFeeAccount: 100
                  reminderFee: 100
                mandateList:
                  - id: string
                    payerNumber: string
                    status: ESTABLISHED
                    createDate: string
                disbursementAccount:
                  id: '2'
                  disbursementType: SE_BANK_ACCOUNT
                  externalAccountNumber: 9551-1112110
                  bankName: Avanza Bank AB
                schemaMetadata:
                  sensitive: PERSONAL
                  tags: []
                  selfRef:
                    refId: '350'
                    uri: /api/loan/v5/accounts/me/350
                dynamicFieldsRef: 61b303e233c6d26ee662bc54
                dynamicFields:
                  name: This is name
                  description: This is description
                  rating: 5
                  recurrenceInterval: 30
                  email: abc@vilja.com
                  decisionReason: AGE
                  dueDate: '2021-12-23'
                dueDay: 28
                offerId: '1'
    SmeLoanAccount-Response-V8:
      description: Example response
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/RegularLoanAccountResponseV8'
          examples:
            One sme loan account example:
              value:
                id: '400'
                accountNumber: '5000013'
                ocrNumber: '5000013'
                state: PENDING
                manualDeltaInterestRate: 0.01
                systemDeltaInterestRate: 0
                accountHolders:
                  - type: SME
                    id: 61e6a3a29d65ac0ee14866a2
                approvedAmount: 10000
                approvedTenorInMonth: 1
                remainingPrincipal: 0
                remainingTenorInMonth: 1
                statementChannel: PAPER
                externalReference: ''
                disbursementDate: ''
                createDate: '2022-01-18'
                totalFeesInInvoices: 0
                totalUnpaidInvoiceAmount: 0
                totalUnpaidOverdueAmount: 0
                totalPaidInterest: 0
                totalPaidInterestThisYear: 0
                totalPaidFees: 0
                totalPaidFeesThisYear: 0
                totalVat: 0
                totalPaidVat: 0
                totalPaidVatThisYear: 0
                disbursementAccount:
                  id: '51'
                  disbursementType: SE_BANK_ACCOUNT
                  externalAccountNumber: 9551-1112110
                  bankName: Avanza Bank AB
                documents: []
                product:
                  id: '101'
                  name: smeLoan1
                  baseInterestRate: 0.02
                  referenceInterestRate: 0.03
                  lateInterestRate: 0.02
                mandates: []
                schemaMetadata:
                  sensitive: PERSONAL
                  tags: []
                  selfRef:
                    refId: '400'
                    uri: /api/loan/v8/accounts/400
                dynamicFieldsRef: 61b303e233c6d26ee662bc54
                dynamicFields:
                  name: This is name
                  description: This is description
                  rating: 5
                  recurrenceInterval: 30
                  email: abc@vilja.com
                  decisionReason: AGE
                  dueDate: '2021-12-23'
                dueDay: 28
                offerId: '1'
                residualAmountType: FINAL_INVOICE
                residualAmount: 100
                insurances:
                  - insuranceState: ACTIVE
                    insuranceType: LIFE
                    startDate: '2024-04-08'
                    endDate: '2024-04-08'
                    holderId: '1'
                    holderType: INDIVIDUAL_MAIN
                assetIds:
                  - 66e808e8732cfe6d9f688cac
                appliedTenorInMonth: 360
                startupFee: 500
                serviceFee:
                  currentPeriodAmount: 100
                valuationFee: 200
    SmeLoanAccount-ForCreation-Response-V8:
      description: Example response
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/RegularLoanAccountForCreationResponseV8'
          examples:
            One sme loan account example:
              value:
                id: '400'
                accountNumber: '5000013'
                ocrNumber: '5000013'
                state: PENDING
                manualDeltaInterestRate: 0.01
                accountHolders:
                  - type: SME
                    id: 61e6a3a29d65ac0ee14866a2
                approvedAmount: 10000
                approvedTenorInMonth: 1
                remainingPrincipal: 0
                remainingTenorInMonth: 1
                statementChannel: PAPER
                externalReference: ''
                disbursementAccount:
                  id: '51'
                  disbursementType: SE_BANK_ACCOUNT
                  externalAccountNumber: 9551-1112110
                  bankName: Avanza Bank AB
                schemaMetadata:
                  sensitive: PERSONAL
                  tags: []
                  selfRef:
                    refId: '400'
                    uri: /api/loan/v8/accounts/400
                dynamicFieldsRef: 61b303e233c6d26ee662bc54
                dynamicFields:
                  name: This is name
                  description: This is description
                  rating: 5
                  recurrenceInterval: 30
                  email: abc@vilja.com
                  decisionReason: AGE
                  dueDate: '2021-12-23'
                dueDay: 28
                offerId: '1'
                residualAmountType: FINAL_INVOICE
                residualAmount: 100
    CreditLoanAccount-Response-V2:
      description: Example response
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/RevolvingAccountV2'
          examples:
            One credit account example:
              value:
                id: 61e6a667e5b6724ea70c5309
                promissoryNoteDocumentId: 61e6a652c64dbb29ac36f145
                accountNumber: '2000057'
                ocrNumber: '2000057'
                externalPartyId: null
                state: OPEN
                createDate: '2022-01-18 19:37:11'
                nextDueDate: '2022-02-28'
                creditLimit: 11106
                availableCreditLimit: 1106
                usedCreditLimit: 10000
                remainingPrincipal: 10000
                mainHolderId: '50056'
                coHolderId: null
                trancheBlockStatus: UNBLOCKED
                product:
                  id: 61e50aab79740c795f4cd163
                  name: consumer1
                  baseInterestRate: 0.01
                  lateInterestRate: 0.01
                  description: ''
                  dueDay: 28
                  created: '2022-01-17 14:20:27'
                  startupFee: 100
                  ocrFee: null
                  directDebitFee: null
                mandateList:
                  - payerNumber: string
                    status: ESTABLISHED
                    id: string
                    createDate: string
                trancheList:
                  - id: '51'
                    offerName: null
                    appliedAmount: 11649
                    createDate: '2022-01-18 19:35:54'
                    appliedTenor: null
                    remainingTenor: null
                    signatureDocumentId: null
                schemaMetadata:
                  sensitive: PERSONAL
                  tags: []
                  selfRef:
                    refId: 61e6a667e5b6724ea70c5309
                    uri: /api/revolving/v2/accounts/61e6a667e5b6724ea70c5309
                dynamicFieldsRef: 61b303e233c6d26ee662bc54
                dynamicFields:
                  name: This is name
                  description: This is description
                  rating: 5
                  recurrenceInterval: 30
                  email: abc@vilja.com
                  decisionReason: AGE
                  dueDate: '2021-12-23'
    CreditLoanAccounts-Response-V2:
      description: Example response
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: '#/components/schemas/RevolvingAccountV2'
          examples:
            One credit account example:
              value:
                - id: 61e6a667e5b6724ea70c5309
                  promissoryNoteDocumentId: 61e6a652c64dbb29ac36f145
                  accountNumber: '2000057'
                  ocrNumber: '2000057'
                  externalPartyId: null
                  state: OPEN
                  createDate: '2022-01-18 19:37:11'
                  nextDueDate: '2022-02-28'
                  creditLimit: 11106
                  availableCreditLimit: 1106
                  usedCreditLimit: 10000
                  remainingPrincipal: 10000
                  mainHolderId: '50056'
                  coHolderId: null
                  trancheBlockStatus: UNBLOCKED
                  product:
                    id: 61e50aab79740c795f4cd163
                    name: consumer1
                    baseInterestRate: 0.01
                    lateInterestRate: 0.01
                    description: ''
                    dueDay: 28
                    created: '2022-01-17 14:20:27'
                    startupFee: 100
                    ocrFee: null
                    directDebitFee: null
                  mandateList:
                    - payerNumber: string
                      status: ESTABLISHED
                      id: string
                      createDate: string
                  trancheList:
                    - id: '51'
                      offerName: null
                      appliedAmount: 11649
                      createDate: '2022-01-18 19:35:54'
                      appliedTenor: null
                      remainingTenor: null
                      signatureDocumentId: null
                  schemaMetadata:
                    sensitive: PERSONAL
                    tags: []
                    selfRef:
                      refId: 61e6a667e5b6724ea70c5309
                      uri: /api/revolving/v2/accounts/61e6a667e5b6724ea70c5309
                  dynamicFieldsRef: 61b303e233c6d26ee662bc54
                  dynamicFields:
                    name: This is name
                    description: This is description
                    rating: 5
                    recurrenceInterval: 30
                    email: abc@vilja.com
                    decisionReason: AGE
                    dueDate: '2021-12-23'
  parameters:
    smeId:
      name: smeId
      in: path
      required: true
      schema:
        type: string
      description: sme customer Id
    secureMessageId:
      name: secureMessageId
      in: path
      required: true
      schema:
        type: string
      description: Secure message id
    applicationId:
      name: applicationId
      in: path
      required: true
      schema:
        type: string
      description: application id
    accountId:
      name: accountId
      in: path
      required: true
      schema:
        type: string
      description: account id
    documentId:
      name: documentId
      in: path
      required: true
      schema:
        type: string
      description: document id
